Keyword:  "generic"
Text:  "<newline><newline>   "
Keyword.Declaration:  "type"
Text:  " "
Name.Function:  "Element_Type"
Text:  " "
Keyword:  "is"
Text:  " "
Keyword:  "private"
Punctuation:  ";"
Text:  "<newline>   "
Keyword.Declaration:  "type"
Text:  " "
Name.Function:  "Array_Type"
Text:  " "
Keyword:  "is"
Text:  " "
Keyword:  "array"
Text:  " "
Punctuation:  "("
Name.Builtin:  "Integer"
Text:  " "
Keyword:  "range"
Text:  " "
Operator:  "<>"
Punctuation:  ")"
Text:  " "
Keyword:  "of"
Text:  " "
Name:  "Element_Type"
Punctuation:  ";"
Text:  "<newline>   "
Keyword:  "with"
Text:  " "
Keyword.Declaration:  "function"
Text:  " "
Name.Function:  "\">\""
Text:  " "
Punctuation:  "("
Name:  "Left"
Punctuation:  ","
Text:  " "
Name:  "Right"
Text:  " "
Punctuation:  ":"
Text:  " "
Name:  "Element_Type"
Punctuation:  ")"
Text:  " "
Keyword:  "return"
Text:  " "
Name.Builtin:  "Boolean"
Text:  " "
Keyword:  "is"
Text:  " "
Operator:  "<>"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword.Declaration:  "procedure"
Text:  " "
Name.Namespace:  "Algorithms"
Punctuation:  "."
Name.Function:  "Best_Sort"
Text:  " "
Punctuation:  "("
Name:  "A"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword:  "in"
Text:  " "
Keyword:  "out"
Text:  " "
Name:  "Array_Type"
Punctuation:  ");"
Text:  "<newline><newline><newline>"
Keyword.Declaration:  "package"
Text:  " "
Name.Function:  "Scanner"
Text:  " "
Keyword:  "is"
Text:  "<newline><newline>   "
Keyword.Declaration:  "type"
Text:  " "
Name.Function:  "Token_Type"
Text:  " "
Keyword:  "is"
Text:  "<newline>     "
Punctuation:  "("
Name:  "Whitespace"
Punctuation:  ","
Text:  " "
Name:  "New_Line"
Punctuation:  ","
Text:  " "
Name:  "Ident"
Punctuation:  ","
Text:  " "
Name:  "Equals"
Punctuation:  ","
Text:  " "
Name:  "Left_Par"
Punctuation:  ","
Text:  " "
Name:  "Right_Par"
Punctuation:  ","
Text:  " "
Name:  "Pipe"
Punctuation:  ","
Text:  " "
Name:  "Question"
Punctuation:  ","
Text:  "<newline>      "
Name:  "Asterisk"
Punctuation:  ","
Text:  " "
Name:  "Plus"
Punctuation:  ");"
Text:  "<newline><newline>   "
Comment.Single:  "-- Scanning for a token can fail, or it can return a token."
Text:  "<newline>   "
Keyword.Declaration:  "type"
Text:  " "
Name.Function:  "Result"
Text:  " "
Punctuation:  "("
Name:  "Ok"
Text:  " "
Punctuation:  ":"
Text:  " "
Name.Builtin:  "Boolean"
Punctuation:  ")"
Text:  " "
Keyword:  "is"
Text:  " "
Keyword:  "record"
Text:  "<newline>      "
Name:  "Last"
Text:  " "
Punctuation:  ":"
Text:  " "
Name.Builtin:  "Positive"
Punctuation:  ";"
Text:  "<newline>      "
Keyword:  "case"
Text:  " "
Name:  "Ok"
Text:  " "
Keyword:  "is"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Name:  "True"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Name:  "Token"
Text:  " "
Punctuation:  ":"
Text:  " "
Name:  "Token_Type"
Punctuation:  ";"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Name:  "False"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "null"
Punctuation:  ";"
Text:  "<newline>      "
Keyword:  "end"
Text:  " "
Keyword:  "case"
Punctuation:  ";"
Text:  "<newline>   "
Keyword:  "end"
Text:  " "
Keyword:  "record"
Punctuation:  ";"
Text:  "<newline><newline>   "
Comment.Single:  "-- Identify the token at the beginning of Text."
Text:  "<newline>   "
Keyword.Declaration:  "function"
Text:  " "
Name.Function:  "Scan_Token"
Text:  " "
Punctuation:  "("
Name:  "Text"
Text:  " "
Punctuation:  ":"
Text:  " "
Name.Builtin:  "String"
Punctuation:  ")"
Text:  " "
Keyword:  "return"
Text:  " "
Name:  "Result"
Text:  " "
Keyword:  "with"
Text:  "<newline>      "
Name:  "Pre"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "Text"
Punctuation:  "'"
Name.Attribute:  "Length"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "end"
Text:  " "
Name:  "Scanner"
Punctuation:  ";"
Text:  "<newline><newline><newline>"
Keyword.Declaration:  "package"
Text:  " "
Name.Function:  "\u52D5\u7269\u5712"
Text:  " "
Keyword:  "is"
Text:  "<newline>   "
Keyword.Declaration:  "type"
Text:  " "
Name.Function:  "\u52D5\u7269"
Text:  " "
Keyword:  "is"
Text:  " "
Punctuation:  "("
Name:  "\u72AC"
Punctuation:  ","
Text:  " "
Name:  "\u732B"
Punctuation:  ");"
Text:  "<newline>   "
Keyword.Declaration:  "function"
Text:  " "
Name.Function:  "\u3044\u3046"
Text:  " "
Punctuation:  "("
Name:  "\u3060\u308C"
Text:  " "
Punctuation:  ":"
Text:  " "
Name:  "\u52D5\u7269"
Punctuation:  ")"
Text:  " "
Keyword:  "return"
Text:  " "
Name.Builtin:  "Wide_Wide_String"
Text:  " "
Keyword:  "is"
Text:  "<newline>     "
Punctuation:  "("
Keyword:  "case"
Text:  " "
Name:  "\u3060\u308C"
Text:  " "
Keyword:  "is"
Text:  " "
Keyword:  "when"
Text:  " "
Name:  "\u72AC"
Text:  " "
Operator:  "=>"
Text:  " "
Literal.String.Double:  "\""
Literal.String.Escape:  "\"\""
Literal.String.Double:  "\u30EF\u30F3"
Literal.String.Escape:  "\"\""
Literal.String.Double:  ", "
Literal.String.Escape:  "\"\""
Literal.String.Double:  "\u30EF\u30F3"
Literal.String.Escape:  "\"\""
Literal.String.Double:  "\""
Punctuation:  ","
Text:  " "
Keyword:  "when"
Text:  " "
Name:  "\u732B"
Text:  " "
Operator:  "=>"
Text:  " "
Literal.String.Double:  "\""
Literal.String.Escape:  "\"\""
Literal.String.Double:  "\u306B\u3083\u3093"
Literal.String.Escape:  "\"\""
Literal.String.Double:  "\""
Punctuation:  ");"
Text:  "<newline>"
Keyword:  "end"
Text:  " "
Name:  "\u52D5\u7269\u5712"
Punctuation:  ";"
Text:  "<newline><newline><newline>"
Keyword.Declaration:  "procedure"
Text:  " "
Name.Namespace:  "Algorithms"
Punctuation:  "."
Name.Function:  "Best_Sort"
Text:  " "
Punctuation:  "("
Name:  "A"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword:  "in"
Text:  " "
Keyword:  "out"
Text:  " "
Name:  "Array_Type"
Punctuation:  ")"
Text:  " "
Keyword:  "is"
Text:  "<newline>"
Keyword:  "begin"
Text:  "<newline><newline>   "
Keyword:  "if"
Text:  " "
Name:  "A"
Punctuation:  "'"
Name.Attribute:  "Length"
Text:  " "
Operator:  "<="
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Keyword:  "then"
Text:  "<newline>      "
Keyword:  "return"
Punctuation:  ";"
Text:  "<newline>   "
Keyword:  "end"
Text:  " "
Keyword:  "if"
Punctuation:  ";"
Text:  "<newline><newline>   "
Name.Label:  "<<Try_Again>>"
Text:  "<newline>   "
Keyword:  "for"
Text:  " "
Name:  "I"
Text:  " "
Keyword:  "in"
Text:  " "
Name:  "A"
Punctuation:  "'"
Name.Attribute:  "First"
Text:  " "
Operator:  ".."
Text:  " "
Name:  "A"
Punctuation:  "'"
Name.Attribute:  "Last"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Keyword:  "loop"
Text:  "<newline>      "
Keyword:  "if"
Text:  " "
Name:  "A"
Text:  " "
Punctuation:  "("
Name:  "I"
Punctuation:  ")"
Text:  " "
Operator:  ">"
Text:  " "
Name:  "A"
Text:  " "
Punctuation:  "("
Name:  "I"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword:  "then"
Text:  "<newline>         "
Name:  "Exchange"
Text:  " "
Punctuation:  "("
Name:  "A"
Text:  " "
Punctuation:  "("
Name:  "I"
Punctuation:  "),"
Text:  " "
Name:  "A"
Text:  " "
Punctuation:  "("
Name:  "I"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  "));"
Text:  "<newline>         "
Keyword:  "goto"
Text:  " "
Name:  "Try_Again"
Punctuation:  ";"
Text:  "<newline>      "
Keyword:  "end"
Text:  " "
Keyword:  "if"
Punctuation:  ";"
Text:  "<newline>   "
Keyword:  "end"
Text:  " "
Keyword:  "loop"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "end"
Text:  " "
Name:  "Algorithms"
Punctuation:  "."
Name:  "Best_Sort"
Punctuation:  ";"
Text:  "<newline><newline><newline>"
Keyword.Namespace:  "with"
Text:  " "
Name.Namespace:  "Ada"
Punctuation:  "."
Name.Namespace:  "Characters"
Punctuation:  "."
Name.Namespace:  "Latin_1"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Declaration:  "package"
Text:  " "
Keyword.Declaration:  "body"
Text:  " "
Name.Function:  "Scanner"
Text:  " "
Keyword:  "is"
Text:  "<newline><newline>   "
Keyword.Declaration:  "package"
Text:  " "
Name.Function:  "Lat1"
Text:  " "
Keyword:  "renames"
Text:  " "
Name:  "Ada"
Punctuation:  "."
Name:  "Characters"
Punctuation:  "."
Name:  "Latin_1"
Punctuation:  ";"
Text:  "<newline><newline>   "
Keyword.Declaration:  "function"
Text:  " "
Name.Function:  "Scan_Token"
Text:  " "
Punctuation:  "("
Name:  "Text"
Text:  " "
Punctuation:  ":"
Text:  " "
Name.Builtin:  "String"
Punctuation:  ")"
Text:  " "
Keyword:  "return"
Text:  " "
Name:  "Result"
Text:  " "
Keyword:  "is"
Text:  "<newline><newline>      "
Name:  "Pos"
Text:  " "
Punctuation:  ":"
Text:  " "
Name.Builtin:  "Positive"
Text:  " "
Operator:  ":="
Text:  " "
Name:  "Text"
Punctuation:  "'"
Name.Attribute:  "First"
Punctuation:  ";"
Text:  "<newline><newline>      "
Comment.Single:  "-- Shortcut functions for returning a token or an error at the"
Text:  "<newline>      "
Comment.Single:  "-- current position."
Text:  "<newline>      "
Keyword.Declaration:  "function"
Text:  " "
Name.Function:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Token"
Text:  " "
Punctuation:  ":"
Text:  " "
Name:  "Token_Type"
Punctuation:  ")"
Text:  " "
Keyword:  "return"
Text:  " "
Name:  "Result"
Text:  " "
Keyword:  "is"
Text:  " "
Punctuation:  "("
Name:  "True"
Punctuation:  ","
Text:  " "
Name:  "Pos"
Punctuation:  ","
Text:  " "
Name:  "Token"
Punctuation:  ");"
Text:  "<newline>      "
Keyword.Declaration:  "function"
Text:  " "
Name.Function:  "Error"
Text:  " "
Keyword:  "return"
Text:  " "
Name:  "Result"
Text:  " "
Keyword:  "is"
Text:  " "
Punctuation:  "("
Name:  "False"
Punctuation:  ","
Text:  " "
Name:  "Pos"
Punctuation:  ");"
Text:  "<newline><newline>   "
Keyword:  "begin"
Text:  "<newline>      "
Keyword:  "case"
Text:  " "
Name:  "Text"
Text:  " "
Punctuation:  "("
Name:  "Pos"
Punctuation:  ")"
Text:  " "
Keyword:  "is"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Name:  "Lat1"
Punctuation:  "."
Name:  "LF"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "New_Line"
Punctuation:  ");"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "'='"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Equals"
Punctuation:  ");"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "'('"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Left_Par"
Punctuation:  ");"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "')'"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Right_Par"
Punctuation:  ");"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "'|'"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Pipe"
Punctuation:  ");"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "'?'"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Question"
Punctuation:  ");"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "'*'"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Asterisk"
Punctuation:  ");"
Text:  "<newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "'+'"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Plus"
Punctuation:  ");"
Text:  "<newline><newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "' '"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "Lat1"
Punctuation:  "."
Name:  "HT"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "Lat1"
Punctuation:  "."
Name:  "CR"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "while"
Text:  " "
Name:  "Pos"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "Text"
Punctuation:  "'"
Name.Attribute:  "Last"
Text:  " "
Operator.Word:  "and"
Text:  " "
Name:  "Text"
Text:  " "
Punctuation:  "("
Name:  "Pos"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword:  "in"
Text:  " "
Literal.String.Char:  "' '"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "Lat1"
Punctuation:  "."
Name:  "HT"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "Lat1"
Punctuation:  "."
Name:  "CR"
Text:  "<newline>            "
Keyword:  "loop"
Text:  "<newline>               "
Name:  "Pos"
Text:  " "
Operator:  ":="
Text:  " "
Name:  "Pos"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ";"
Text:  "<newline>            "
Keyword:  "end"
Text:  " "
Keyword:  "loop"
Punctuation:  ";"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Whitespace"
Punctuation:  ");"
Text:  "<newline><newline>         "
Keyword:  "when"
Text:  " "
Literal.String.Char:  "'A'"
Text:  " "
Operator:  ".."
Text:  " "
Literal.String.Char:  "'Z'"
Text:  " "
Operator:  "|"
Text:  " "
Literal.String.Char:  "'a'"
Text:  " "
Operator:  ".."
Text:  " "
Literal.String.Char:  "'z'"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "while"
Text:  " "
Name:  "Pos"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "Text"
Punctuation:  "'"
Name.Attribute:  "Last"
Text:  " "
Operator.Word:  "and"
Text:  "<newline>              "
Name:  "Text"
Text:  " "
Punctuation:  "("
Name:  "Pos"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword:  "in"
Text:  " "
Literal.String.Char:  "'A'"
Text:  " "
Operator:  ".."
Text:  " "
Literal.String.Char:  "'Z'"
Text:  " "
Operator:  "|"
Text:  " "
Literal.String.Char:  "'a'"
Text:  " "
Operator:  ".."
Text:  " "
Literal.String.Char:  "'z'"
Text:  " "
Operator:  "|"
Text:  " "
Literal.String.Char:  "'0'"
Text:  " "
Operator:  ".."
Text:  " "
Literal.String.Char:  "'9'"
Text:  " "
Operator:  "|"
Text:  " "
Literal.String.Char:  "'-'"
Text:  "<newline>            "
Keyword:  "loop"
Text:  "<newline>               "
Name:  "Pos"
Text:  " "
Operator:  ":="
Text:  " "
Name:  "Pos"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ";"
Text:  "<newline>            "
Keyword:  "end"
Text:  " "
Keyword:  "loop"
Punctuation:  ";"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Ok"
Text:  " "
Punctuation:  "("
Name:  "Ident"
Punctuation:  ");"
Text:  "<newline><newline>         "
Keyword:  "when"
Text:  " "
Keyword:  "others"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name:  "Error"
Punctuation:  ";"
Text:  "<newline>      "
Keyword:  "end"
Text:  " "
Keyword:  "case"
Punctuation:  ";"
Text:  "<newline>   "
Keyword:  "end"
Text:  " "
Name:  "Scan_Token"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "end"
Text:  " "
Name:  "Scanner"
Punctuation:  ";"
Text:  "<newline><newline><newline>"
Keyword.Declaration:  "Package"
Text:  " "
Name.Function:  "MACHINE_CODE"
Text:  " "
Keyword:  "Is"
Text:  "<newline>   "
Keyword.Declaration:  "Type"
Text:  " "
Name.Function:  "REGISTER"
Text:  " "
Keyword:  "Is"
Text:  " "
Keyword:  "Range"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  ".."
Text:  " "
Literal.Number.Hex:  "16#F#"
Punctuation:  ";"
Text:  "<newline>   "
Keyword.Declaration:  "Type"
Text:  " "
Name.Function:  "DISPLACEMENT"
Text:  " "
Keyword:  "Is"
Text:  " "
Keyword:  "Range"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  ".."
Text:  " "
Literal.Number.Hex:  "16#FFF#"
Punctuation:  ";"
Text:  "<newline><newline>   "
Keyword.Declaration:  "Type"
Text:  " "
Name.Function:  "SI"
Text:  " "
Keyword:  "Is"
Text:  " "
Keyword:  "Record"
Text:  "<newline>      "
Name:  "CODE"
Text:  " "
Punctuation:  ":"
Text:  " "
Name:  "OPCODE"
Punctuation:  ";"
Text:  "<newline>      "
Name:  "B"
Text:  "    "
Punctuation:  ":"
Text:  " "
Name:  "REGISTER"
Punctuation:  ";"
Text:  "<newline>      "
Name:  "D"
Text:  "    "
Punctuation:  ":"
Text:  " "
Name:  "DISPLACEMENT"
Punctuation:  ";"
Text:  "<newline>   "
Keyword:  "End"
Text:  " "
Keyword:  "Record"
Punctuation:  ";"
Text:  "<newline><newline>   "
Keyword:  "for"
Text:  " "
Name:  "SI"
Text:  " "
Keyword:  "Use"
Text:  " "
Keyword:  "Record"
Text:  "<newline>      "
Name:  "CODE"
Text:  " "
Keyword:  "at"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "Range"
Text:  "  "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  ".."
Text:  "  "
Literal.Number.Integer:  "7"
Punctuation:  ";"
Text:  "<newline>      "
Name:  "B"
Text:  "    "
Keyword:  "at"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "Range"
Text:  " "
Literal.Number.Integer:  "16"
Text:  " "
Operator:  ".."
Text:  " "
Literal.Number.Integer:  "19"
Punctuation:  ";"
Text:  " "
Comment.Single:  "-- Bits 8 .. 15 Unused"
Text:  "<newline>      "
Name:  "D"
Text:  "    "
Keyword:  "at"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "Range"
Text:  " "
Literal.Number.Integer:  "20"
Text:  " "
Operator:  ".."
Text:  " "
Literal.Number.Integer:  "31"
Punctuation:  ";"
Text:  "<newline>   "
Keyword:  "End"
Text:  " "
Keyword:  "Record"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "End"
Text:  " "
Name:  "MACHINE_CODE"
Punctuation:  ";"
Text:  "<newline>"
