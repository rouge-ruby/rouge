Comment.Single:  "# single-line comment"
Text:  "<newline>"
Keyword.Reserved:  "BEGIN"
Text:  " "
Punctuation:  "{"
Text:  " "
Comment.Single:  "# end-of-line comment"
Text:  "<newline>    "
Comment.Single:  "# indented single-line comment"
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Name.Builtin:  "length"
Punctuation:  "("
Name.Other:  "str"
Punctuation:  ")"
Text:  " "
Operator:  ">"
Text:  " "
Keyword.Constant:  "NF"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "print"
Text:  " "
Name.Variable:  "$42"
Text:  " "
Operator:  ">"
Text:  " "
Name.Other:  "expr"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "else"
Text:  "<newline>        "
Keyword:  "exit"
Text:  " "
Keyword.Constant:  "NR"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "while"
Text:  " "
Punctuation:  "("
Name.Other:  "array"
Punctuation:  "["
Literal.Number.Integer:  "42"
Punctuation:  "]"
Text:  " "
Operator:  "!="
Text:  " "
Keyword.Constant:  "FILENAME"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "break"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Punctuation:  "("
Name.Other:  "i"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ";"
Text:  " "
Name.Other:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Name.Builtin:  "rand"
Punctuation:  "();"
Text:  " "
Name.Other:  "i"
Operator:  "++"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "continue"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Punctuation:  "("
Name.Other:  "var"
Text:  " "
Operator:  "in"
Text:  " "
Keyword.Constant:  "ENVIRON"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "next"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "do"
Text:  "<newline>        "
Keyword:  "getline"
Text:  " "
Operator:  "<"
Text:  " "
Name.Other:  "file"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "while"
Text:  " "
Punctuation:  "("
Name.Other:  "str"
Text:  " "
Operator:  "~"
Text:  " "
Literal.String.Regex:  "/regexp/"
Punctuation:  ");"
Text:  "<newline>    "
Keyword:  "printf"
Text:  " "
Literal.String.Double:  "\"%d%f\""
Punctuation:  ","
Text:  " "
Name.Builtin:  "int"
Punctuation:  "("
Literal.Number.Integer:  "42"
Punctuation:  "),"
Text:  " "
Literal.Number.Float:  "0.123"
Text:  " "
Operator:  ">"
Text:  " "
Name.Other:  "expr"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "print"
Text:  " "
Literal.String.Double:  "\"string\""
Text:  " "
Operator:  "|"
Text:  " "
Name.Other:  "pipe"
Punctuation:  ";"
Text:  "<newline>    "
Name.Other:  "ternary"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Punctuation:  "?"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Punctuation:  ":"
Text:  " "
Name.Builtin:  "sub"
Punctuation:  "("
Literal.String.Regex:  "/regexp/"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"nope.\""
Punctuation:  ");"
Text:  "<newline>    "
Name.Builtin:  "system"
Punctuation:  "("
Literal.String.Double:  "\"sl\""
Punctuation:  ");"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Punctuation:  "{"
Text:  "<newline>    "
Keyword:  "nextfile"
Punctuation:  ";"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Reserved:  "END"
Text:  " "
Punctuation:  "{"
Text:  "<newline>    "
Keyword:  "delete"
Text:  " "
Name.Other:  "array"
Punctuation:  "["
Name.Other:  "answer"
Punctuation:  "()];"
Text:  "<newline>    "
Keyword:  "exit"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ";"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Declaration:  "function"
Text:  " "
Name.Other:  "answer"
Punctuation:  "("
Name.Other:  "question"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Literal.Number.Integer:  "42"
Punctuation:  ";"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
