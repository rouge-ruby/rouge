Comment.Single:  "# -------------<newline># Cython Syntax<newline># -------------<newline>"
Text:  "<newline>"
Comment.Single:  "# Import statements<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name:  "numpy"
Text:  "<newline>"
Keyword.Namespace:  "from"
Text:  " "
Name.Namespace:  "numpy"
Text:  " "
Keyword.Namespace:  "cimport"
Text:  " "
Name.Builtin:  "abs"
Text:  "<newline><newline>"
Comment.Single:  "# Import statements with selection<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name:  "numpy"
Text:  " "
Keyword:  "as"
Text:  " "
Name:  "np"
Text:  "<newline>"
Keyword.Namespace:  "from"
Text:  " "
Name.Namespace:  "cython.view"
Text:  " "
Keyword.Namespace:  "cimport"
Text:  " "
Name:  "array"
Text:  " "
Keyword:  "as"
Text:  " "
Name:  "cvarray"
Text:  "<newline><newline>"
Comment.Single:  "# Extern values<newline>"
Keyword:  "cdef"
Text:  " "
Keyword.Reserved:  "extern"
Text:  " "
Keyword:  "from"
Text:  " "
Literal.String.Heredoc:  "'"
Literal.String:  "foo.h"
Literal.String.Heredoc:  "'"
Punctuation:  ":"
Text:  "<newline>    "
Keyword.Type:  "int"
Text:  " "
Name:  "foo_int"
Text:  "<newline>    "
Keyword.Reserved:  "struct"
Text:  " "
Name.Class:  "foo_struct"
Punctuation:  ":"
Text:  "<newline>        "
Keyword:  "pass"
Text:  "<newline><newline>"
Comment.Single:  "# Type definitions<newline>"
Keyword:  "ctypedef"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "word"
Text:  "<newline><newline>"
Comment.Single:  "# C struct<newline>"
Keyword:  "cdef"
Text:  " "
Keyword.Reserved:  "struct"
Text:  " "
Name.Class:  "Foo"
Punctuation:  ":"
Text:  "<newline>    "
Keyword:  "pass"
Text:  "<newline><newline>"
Comment.Single:  "# C class<newline>"
Keyword:  "cdef"
Text:  " "
Keyword.Reserved:  "class"
Text:  " "
Name.Class:  "MyType"
Punctuation:  "("
Name:  "ParentType"
Punctuation:  "):"
Text:  "<newline>    "
Keyword:  "cdef"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "field"
Text:  "<newline>    "
Keyword:  "cpdef"
Text:  " "
Name.Function:  "foo"
Punctuation:  "("
Name:  "self"
Punctuation:  ","
Text:  " "
Name:  "x"
Operator:  "=*"
Punctuation:  ","
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "k"
Operator:  "=*"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "# C class with classmethod<newline>"
Keyword:  "cdef"
Text:  " "
Keyword.Reserved:  "class"
Text:  " "
Name.Class:  "Blah"
Punctuation:  ":"
Text:  "<newline>    "
Keyword:  "def"
Text:  " "
Name.Function:  "some_method"
Punctuation:  "("
Name:  "self"
Punctuation:  "):"
Text:  "<newline>        "
Keyword:  "print"
Text:  " "
Name:  "self"
Text:  "<newline>        "
Name:  "some_method"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "classmethod"
Punctuation:  "("
Name:  "some_method"
Punctuation:  ")"
Text:  "<newline>        "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "2"
Operator:  "*"
Literal.Number.Integer:  "3"
Text:  "<newline>        "
Keyword:  "print"
Text:  " "
Literal.String.Heredoc:  "\""
Literal.String:  "hi"
Literal.String.Heredoc:  "\""
Punctuation:  ","
Text:  " "
Name:  "a"
Text:  "<newline><newline>"
Comment.Single:  "# C function<newline>"
Keyword:  "cpdef"
Text:  " "
Name.Function:  "fib"
Punctuation:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "n"
Punctuation:  "):"
Text:  "    "
Comment.Single:  "# Cython version<newline>"
Text:  "    "
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "Print a Fibonacci series up to n."
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline>    "
Keyword:  "cdef"
Text:  " "
Keyword.Type:  "unsigned"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline>    "
Keyword:  "cdef"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "b"
Text:  "<newline><newline>    "
Name:  "b"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline><newline>    "
Keyword:  "while"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "n"
Punctuation:  ":"
Text:  "<newline>        "
Keyword:  "print"
Punctuation:  "("
Name:  "a"
Punctuation:  ")"
Text:  "<newline>        "
Name:  "a"
Punctuation:  ","
Text:  " "
Name:  "b"
Text:  " "
Operator:  "="
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Name:  "a"
Operator:  "+"
Name:  "b"
Text:  "<newline><newline>"
Comment.Single:  "# C function with return type<newline>"
Keyword:  "cpdef"
Text:  " "
Keyword.Type:  "unsigned"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name.Function:  "foo"
Punctuation:  "():"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "2"
Text:  "<newline><newline>"
Comment.Single:  "# C function with no GIL<newline>"
Keyword:  "cpdef"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name.Function:  "sum3d"
Punctuation:  "("
Keyword.Type:  "int"
Punctuation:  "[:,"
Text:  " "
Punctuation:  ":,"
Text:  " "
Punctuation:  ":]"
Text:  " "
Name:  "arr"
Punctuation:  ")"
Text:  " "
Keyword:  "nogil"
Punctuation:  ":"
Text:  "<newline>    "
Keyword:  "cdef"
Text:  " "
Keyword.Type:  "size_t"
Text:  " "
Name:  "i"
Punctuation:  ","
Text:  " "
Name:  "j"
Punctuation:  ","
Text:  " "
Name:  "k"
Punctuation:  ","
Text:  " "
Name:  "I"
Punctuation:  ","
Text:  " "
Name:  "J"
Punctuation:  ","
Text:  " "
Name:  "K"
Text:  "<newline>    "
Keyword:  "cdef"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "total"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline>    "
Keyword:  "cdef"
Punctuation:  ":"
Text:  "<newline>        "
Keyword.Type:  "int"
Text:  " "
Name:  "I"
Punctuation:  ","
Text:  " "
Name:  "J"
Punctuation:  ","
Text:  " "
Name:  "K"
Text:  "<newline>    "
Name:  "I"
Text:  " "
Operator:  "="
Text:  " "
Name:  "arr"
Punctuation:  "."
Name:  "shape"
Punctuation:  "["
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  "<newline>    "
Name:  "J"
Text:  " "
Operator:  "="
Text:  " "
Name:  "arr"
Punctuation:  "."
Name:  "shape"
Punctuation:  "["
Literal.Number.Integer:  "1"
Punctuation:  "]"
Text:  "<newline>    "
Name:  "K"
Text:  " "
Operator:  "="
Text:  " "
Name:  "arr"
Punctuation:  "."
Name:  "shape"
Punctuation:  "["
Literal.Number.Integer:  "2"
Punctuation:  "]"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Name:  "i"
Text:  " "
Operator.Word:  "in"
Text:  " "
Name.Builtin:  "range"
Punctuation:  "("
Name:  "I"
Punctuation:  "):"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Name:  "j"
Text:  " "
Operator.Word:  "in"
Text:  " "
Name.Builtin:  "range"
Punctuation:  "("
Name:  "J"
Punctuation:  "):"
Text:  "<newline>            "
Keyword:  "for"
Text:  " "
Name:  "k"
Text:  " "
Operator.Word:  "in"
Text:  " "
Name.Builtin:  "range"
Punctuation:  "("
Name:  "K"
Punctuation:  "):"
Text:  "<newline>                "
Name:  "total"
Text:  " "
Operator:  "+="
Text:  " "
Name:  "arr"
Punctuation:  "["
Name:  "i"
Punctuation:  ","
Text:  " "
Name:  "j"
Punctuation:  ","
Text:  " "
Name:  "k"
Punctuation:  "]"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "total"
Text:  "<newline><newline>"
Comment.Single:  "# Inline C function<newline>"
Keyword:  "cdef"
Text:  " "
Keyword.Reserved:  "inline"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name.Function:  "something_fast"
Punctuation:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "b"
Punctuation:  "):"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "a"
Operator:  "*"
Name:  "a"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "b"
Text:  "<newline><newline>"
Comment.Single:  "# Python function with typed parameters<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "foo"
Punctuation:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "n"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline><newline>"
Comment.Single:  "# Assignment on declaration<newline>"
Keyword:  "cdef"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "python_call"
Punctuation:  "("
Name.Function:  "foo"
Punctuation:  "("
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  "),"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "c"
Punctuation:  ")"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "32"
Text:  "<newline>"
Keyword:  "cdef"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Punctuation:  "[:,"
Text:  " "
Punctuation:  ":,"
Text:  " "
Punctuation:  ":]"
Text:  " "
Name:  "narr_view"
Text:  " "
Operator:  "="
Text:  " "
Name:  "narr"
Text:  "<newline><newline>"
Comment.Single:  "# Definition with C-block syntax<newline>"
Keyword:  "cdef"
Punctuation:  ":"
Text:  "<newline>    "
Keyword.Type:  "int"
Text:  " "
Name:  "carr"
Punctuation:  "["
Literal.Number.Integer:  "3"
Punctuation:  "]["
Literal.Number.Integer:  "3"
Punctuation:  "]["
Literal.Number.Integer:  "3"
Punctuation:  "]"
Text:  "<newline>    "
Keyword.Type:  "int"
Text:  " "
Punctuation:  "[:,"
Text:  " "
Punctuation:  ":,"
Text:  " "
Punctuation:  ":]"
Text:  " "
Name:  "carr_view"
Text:  " "
Operator:  "="
Text:  " "
Name:  "carr"
Text:  "<newline><newline>"
Comment.Single:  "# Iteration with steps<newline>"
Keyword:  "for"
Text:  " "
Name:  "i"
Text:  " "
Keyword:  "from"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "<="
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Literal.Number.Integer:  "10"
Text:  " "
Keyword:  "by"
Text:  " "
Literal.Number.Integer:  "2"
Punctuation:  ":"
Text:  "<newline>    "
Keyword:  "print"
Text:  " "
Name:  "i"
Text:  "<newline><newline>"
Comment.Single:  "# -------------<newline># Python syntax<newline># -------------<newline>"
Text:  "<newline>"
Comment.Single:  "# Function call<newline>"
Keyword:  "print"
Punctuation:  "("
Literal.String.Heredoc:  "\""
Literal.String:  "NumPy sum of the NumPy array before assignments: %s"
Literal.String.Heredoc:  "\""
Text:  " "
Operator:  "%"
Text:  " "
Name:  "narr"
Punctuation:  "."
Name.Builtin:  "sum"
Punctuation:  "())"
Text:  "<newline><newline>"
Comment.Single:  "# Assignment<newline>"
Name:  "narr"
Text:  " "
Operator:  "="
Text:  " "
Name:  "np"
Punctuation:  "."
Name.Function:  "arange"
Punctuation:  "("
Literal.Number.Integer:  "27"
Punctuation:  ","
Text:  " "
Name:  "dtype"
Operator:  "="
Name:  "np"
Punctuation:  "."
Name.Function:  "dtype"
Punctuation:  "("
Literal.String.Heredoc:  "\""
Literal.String:  "i"
Literal.String.Heredoc:  "\""
Punctuation:  "))."
Name.Function:  "reshape"
Punctuation:  "(("
Literal.Number.Integer:  "3"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "3"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "3"
Punctuation:  "))"
Text:  "<newline>"
Name:  "carr_view"
Punctuation:  "[...]"
Text:  " "
Operator:  "="
Text:  " "
Name:  "narr_view"
Text:  "<newline>"
Name:  "cyarr_view"
Punctuation:  "[:]"
Text:  " "
Operator:  "="
Text:  " "
Name:  "narr_view"
Text:  "<newline>"
Name:  "narr_view"
Punctuation:  "[:,"
Text:  " "
Punctuation:  ":,"
Text:  " "
Punctuation:  ":]"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "3"
Text:  "<newline>"
Name:  "carr_view"
Punctuation:  "["
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "100"
Text:  "<newline><newline>"
Comment.Single:  "# Equality test<newline>"
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "2"
Text:  "<newline>"
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "<"
Text:  " "
Literal.Number.Integer:  "2"
Text:  "<newline><newline>"
Comment.Single:  "# For loops<newline>"
Keyword:  "for"
Text:  " "
Name:  "i"
Text:  " "
Operator.Word:  "in"
Text:  " "
Name.Builtin:  "range"
Punctuation:  "("
Name:  "i"
Punctuation:  "]:"
Text:  "<newline>    "
Name:  "total"
Text:  " "
Operator:  "="
Text:  " "
Name:  "total"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline><newline>"
Comment.Single:  "# Function definition<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "fib"
Punctuation:  "("
Name:  "n"
Punctuation:  "):"
Text:  "    "
Comment.Single:  "# Python version<newline>"
Text:  "    "
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "Print a Fibonacci series up to n."
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline>    "
Name:  "a"
Punctuation:  ","
Text:  " "
Name:  "b"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>    "
Keyword:  "while"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "n"
Punctuation:  ":"
Text:  "<newline>        "
Keyword:  "print"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  "<newline>        "
Name:  "a"
Punctuation:  ","
Text:  " "
Name:  "b"
Text:  " "
Operator:  "="
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Name:  "a"
Operator:  "+"
Name:  "b"
Text:  "<newline>"
