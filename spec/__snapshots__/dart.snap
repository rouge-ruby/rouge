Comment.Single:  "// comment"
Text:  "<newline>"
Comment.Multiline:  "/*<newline>multiline<newline>comment<newline>*/"
Text:  "<newline><newline><newline>"
Keyword.Namespace:  "library"
Text:  " "
Name:  "dart_example"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Literal.String:  "'package:http/http.dart'"
Text:  " "
Keyword:  "as"
Text:  " "
Name:  "http"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Literal.String:  "\"dart:io\""
Text:  " "
Keyword.Declaration:  "show"
Text:  " "
Name:  "HttpClient"
Punctuation:  ","
Text:  " "
Name:  "RedirectInfo"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "part"
Text:  " "
Literal.String:  "'foo.dart'"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "part of"
Text:  " "
Name:  "bar"
Operator:  ";"
Text:  "<newline><newline>"
Keyword.Declaration:  "var"
Text:  " "
Name:  "str"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "'Test'"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "String"
Text:  " "
Name:  "str2"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"Test\""
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "String"
Text:  " "
Name:  "strWithNewline"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"test"
Literal.String.Escape:  "<newline>"
Literal.String:  "\""
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "String"
Text:  " "
Name:  "multiline"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "'''<newline>this<newline>is<newline>multiline string<newline>'''"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Declaration:  "var"
Text:  " "
Name:  "rawString"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Other:  "r\"raw string\""
Punctuation:  ";"
Text:  "<newline>"
Keyword.Declaration:  "var"
Text:  " "
Name:  "stringWithInterpolation"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "'Value: "
Literal.String.Interpol:  "$value"
Literal.String:  "'"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Declaration:  "var"
Text:  " "
Name:  "expressionInString"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "'Value: "
Literal.String.Interpol:  "${value + 1}"
Literal.String:  "'"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword.Declaration:  "var"
Text:  " "
Name:  "symbol"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Symbol:  "#symbol"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "assert"
Punctuation:  "("
Name:  "str"
Text:  " "
Operator:  "=="
Text:  " "
Name:  "str2"
Punctuation:  ");"
Text:  "<newline>"
Keyword.Declaration:  "final"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Declaration:  "const"
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "500"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "x"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Declaration:  "var"
Text:  " "
Name:  "hex"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0xff"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "double"
Text:  " "
Name:  "z"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "1.22e-17"
Punctuation:  ";"
Text:  "<newline><newline>"
Name:  "fun"
Punctuation:  "("
Keyword.Type:  "num"
Text:  " "
Name:  "x"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>  "
Name:  "print"
Punctuation:  "("
Literal.String:  "'The argument is x'"
Punctuation:  ");"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Declaration:  "class"
Text:  " "
Name.Class:  "A"
Text:  " "
Punctuation:  "{"
Text:  "<newline>  "
Name.Decorator:  "@override"
Text:  "<newline>  "
Keyword.Type:  "void"
Text:  " "
Name:  "fooMethod"
Text:  " "
Punctuation:  "{"
Text:  "<newline>  "
Punctuation:  "}"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline><newline>"
Keyword.Declaration:  "class"
Text:  " "
Name.Class:  "B"
Text:  " "
Punctuation:  "{"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Declaration:  "class"
Text:  " "
Name.Class:  "C"
Text:  " "
Keyword.Declaration:  "extends"
Text:  " "
Name:  "A"
Text:  " "
Keyword.Declaration:  "implements"
Text:  " "
Name:  "B"
Text:  " "
Punctuation:  "{"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Type:  "void"
Text:  " "
Name.Function:  "main"
Punctuation:  "()"
Text:  " "
Punctuation:  "{"
Text:  "<newline>  "
Keyword.Declaration:  "var"
Text:  " "
Name:  "collection"
Operator:  "="
Punctuation:  "["
Literal.Number.Integer:  "1"
Punctuation:  ","
Literal.Number.Integer:  "2"
Punctuation:  ","
Literal.Number.Integer:  "3"
Punctuation:  ","
Literal.Number.Integer:  "4"
Punctuation:  ","
Literal.Number.Integer:  "5"
Punctuation:  "];"
Text:  "<newline>  "
Keyword:  "for"
Punctuation:  "("
Keyword.Declaration:  "var"
Text:  " "
Name:  "a"
Text:  " "
Keyword:  "in"
Text:  " "
Name:  "collection"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Name:  "a"
Text:  " "
Operator:  "!="
Text:  " "
Literal.Number.Integer:  "7"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>      "
Name:  "print"
Punctuation:  "("
Name:  "a"
Punctuation:  ");"
Text:  "<newline>    "
Punctuation:  "}"
Text:  " "
Keyword:  "else"
Text:  " "
Punctuation:  "{"
Text:  "<newline>      "
Name:  "print"
Punctuation:  "("
Name:  "a"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ");"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline>  "
Punctuation:  "}"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
