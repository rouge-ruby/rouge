Text:  "<newline>"
Name.Function:  "Get_Variable"
Punctuation:  "("
Literal.String.Double:  "\"EUSER\""
Punctuation:  ","
Literal.String.Double:  "\"ENV\""
Punctuation:  ","
Literal.String.Double:  "\"USERNAME\""
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Function:  "Message"
Punctuation:  "("
Literal.String.Double:  "\"Le Login Windows est : "
Literal.String.Escape:  "%EUSER%"
Literal.String.Double:  "\""
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Function:  "Get_Variable"
Punctuation:  "("
Literal.String.Double:  "\"st\""
Punctuation:  ","
Literal.String.Double:  "\"JOB\""
Punctuation:  ","
Literal.String.Double:  "\"FOLDER1.date_err.SYSTEM.STATUS\""
Punctuation:  ");"
Text:  "<newline><newline><newline>"
Name.Function:  "AFFECT"
Punctuation:  "("
Literal.String.Double:  "\"filter1\""
Punctuation:  ","
Text:  " "
Literal.String.Single:  "'%%/\"t\"'"
Punctuation:  ");"
Text:  "<newline>"
Name.Function:  "AFFECT"
Punctuation:  "("
Literal.String.Double:  "\"filter2\""
Punctuation:  ","
Text:  " "
Literal.String.Single:  "'%%/\"pi\"'"
Punctuation:  ");"
Text:  "<newline>"
Name.Function:  "JSONTOSQL"
Punctuation:  "("
Literal.String.Double:  "\""
Literal.String.Escape:  "%{jsonpath}%"
Literal.String.Double:  "/file.json\""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"\""
Punctuation:  ","
Text:  "<newline>        "
Literal.String.Double:  "\" JSONPATH like '"
Literal.String.Escape:  "%filter1%"
Literal.String.Double:  "' \""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"a = JSONVALUE\""
Punctuation:  ","
Text:  "<newline>        "
Literal.String.Double:  "\" JSONPATH like '"
Literal.String.Escape:  "%filter2%"
Literal.String.Double:  "' \""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"b = JSONVALUE; output(json_data, a, b)\""
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Function:  "GOTO"
Punctuation:  "("
Literal.String.Double:  "\"There\""
Punctuation:  ");"
Text:  "<newline>"
Comment.Multiline:  "/*<newline>skipped<newline>*/"
Text:  "<newline>"
Name.Label:  ":There"
Punctuation:  ";"
Text:  "<newline><newline>"
Name.Function:  "Cursor"
Punctuation:  "("
Literal.String.Double:  "\"select * from IOUSER\""
Punctuation:  ",,)"
Text:  "<newline>"
Punctuation:  "{"
Text:  "<newline>  "
Name.Function:  "Message"
Punctuation:  "("
Literal.String.Double:  "\""
Literal.String.Escape:  "%USR%"
Literal.String.Double:  "\""
Punctuation:  ");"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Multiline:  "/***<newline>test<newline>***/"
Text:  "<newline><newline>"
Name.Function:  "Option"
Punctuation:  "("
Literal.String.Double:  "\"ESCAPE\""
Punctuation:  ","
Literal.String.Double:  "\"True\""
Punctuation:  ");"
Text:  "<newline>"
Name.Function:  "Affect"
Punctuation:  "("
Literal.String.Single:  "'xsl'"
Punctuation:  ","
Literal.String.Single:  "'<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"><newline><xsl:output method=\"xml\" indent=\"yes\" /><newline><xsl:template match=\"/\"><newline><document><newline>\t<xsl:for-each select=\"root/set/row\"><newline>\t<xsl:element name=\"cmr\"><xsl:attribute name=\"id\"><xsl:value-of select=\"cell[1]/value\"/></xsl:attribute><newline>\t<xsl:for-each select=\"cell\"><newline>\t\t<xsl:if test=\"name!=\\'id_cmr\\'\"><newline>\t\t<xsl:element name=\"{name}\"><xsl:value-of select=\"value\"/></xsl:element><newline>\t\t</xsl:if><newline>\t</xsl:for-each><newline>\t</xsl:element><newline>\t</xsl:for-each><newline></document><newline></xsl:template><newline></xsl:stylesheet>'"
Punctuation:  ");"
Text:  "<newline>"
Name.Function:  "Option"
Punctuation:  "("
Literal.String.Double:  "\"ESCAPE\""
Punctuation:  ","
Literal.String.Double:  "\"False\""
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Function:  "Rtf_Tab"
Punctuation:  "("
Literal.String.Double:  "\"C:\\data\\dev\\rtf\\rtf\\fusion_tableaux.rtf\""
Punctuation:  ","
Literal.String.Double:  "\"C:\\data\\dev\\rtf\\rtf\\fusion_tableaux_res.rtf\""
Punctuation:  ","
Text:  "<newline>    "
Literal.String.Double:  "\"TABLEAU1\""
Punctuation:  ","
Literal.String.Double:  "\"select COL1,COL2,COL3 from TABLE_FUSIONRTF\""
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Function:  "Affect"
Punctuation:  "("
Name:  "VAR1"
Punctuation:  ","
Literal.String.Single:  "'"
Literal.String.Escape:  "%TEST%"
Literal.String.Single:  "'"
Punctuation:  ");"
Text:  " "
Comment.Single:  "//Cr\u00E9er et affecter la variable VAR1 avec une cha\u00EEne"
Text:  "<newline>"
Keyword:  "select"
Text:  " "
Punctuation:  "*"
Text:  " "
Keyword:  "from"
Text:  " "
Punctuation:  "["
Name:  "TABLE1"
Punctuation:  "]"
Text:  " "
Keyword:  "where"
Text:  " "
Name:  "COL1"
Text:  " "
Keyword:  "like"
Text:  " "
Name.Variable:  "%VAR1%"
Punctuation:  ";"
Text:  " "
Comment.Single:  "//utiliser la variable VAR1 dans une requ\u00EAte"
Text:  "<newline><newline>"
Keyword:  "select"
Text:  " "
Punctuation:  "*"
Text:  " "
Keyword:  "from"
Text:  " "
Name.Entity:  "@DATAZONE1.TEST_TABLE"
Punctuation:  ";"
Text:  " "
Comment.Single:  "//ex\u00E9cution d'une requ\u00EAte Select pour ramener des valeurs"
Text:  "<newline>"
Name.Function:  "Affect_LastColumns"
Punctuation:  "("
Literal.String.Double:  "\"TEST1\""
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Punctuation:  ");"
Text:  " "
Comment.Single:  "//cr\u00E9ation du param\u00E8tre TEST1"
Text:  "<newline><newline>"
Name.Function:  "Affect"
Punctuation:  "("
Literal.String.Double:  "\"xslt\""
Punctuation:  ","
Text:  " "
Literal.String.Single:  "'<?xml version=\"1.0\" encoding=\"UTF-8\"?><newline><xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"><newline><xsl:template match=\"/\"><newline>  <root><newline>    <xsl:for-each select=\"root/set/row\"><newline>      <tr><newline>        <xsl:for-each select=\"cell\"><newline>          <td><xsl:value-of select=\"name\" />: <xsl:value-of select=\"value\" /> (<xsl:value-of select=\"type\" />)</td><newline><newline>        </xsl:for-each><newline>      </tr><newline>    </xsl:for-each><newline>  </root><newline></xsl:template><newline></xsl:stylesheet>'"
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Function:  "XSLT_MEM_SQL"
Punctuation:  "("
Literal.String.Double:  "\"out\""
Punctuation:  ","
Literal.String.Double:  "\"select USRCODE, LOGONAT, NUMSESS from IOUSERS where rownum <= 2\""
Punctuation:  ","
Literal.String.Double:  "\""
Literal.String.Escape:  "%xslt%"
Literal.String.Double:  "\""
Punctuation:  ","
Literal.String.Double:  "\"CHARSET=ISO-8859-1\""
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Function:  "Open_Sql"
Punctuation:  "("
Literal.String.Double:  "\"select *<newline>\tfrom bar\""
Punctuation:  ");"
Text:  "<newline>"
