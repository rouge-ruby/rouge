Comment.Single:  "// hpccsystems.com"
Text:  "<newline><newline>"
Comment.Multiline:  "/******************<newline> Multi-line comment<newline>******************/"
Text:  "<newline><newline>"
Keyword:  "import"
Text:  " "
Name.Class:  "std.math.job"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "IMPORT"
Text:  " "
Name.Other:  "Str"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** TYPES ******************/"
Text:  "<newline><newline>"
Name.Other:  "R1"
Text:  " "
Operator:  ":="
Text:  " "
Keyword.Type:  "RECORD"
Text:  "<newline>    "
Keyword.Type:  "integer1"
Text:  "  "
Name.Other:  "F1"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "UNSIGNED4"
Text:  " "
Name.Other:  "F2"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "STRING100"
Text:  " "
Name.Other:  "F3"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "REAL4"
Text:  "     "
Name.Other:  "R1"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "REAL8"
Text:  "     "
Name.Other:  "R2"
Punctuation:  ";"
Text:  "<newline>    "
Name.Other:  "REAL9"
Text:  "     "
Name.Other:  "R2"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// This should not match a type"
Text:  "<newline>    "
Keyword.Type:  "boolean"
Text:  "   "
Name.Other:  "B1"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "decimal23"
Text:  " "
Name.Other:  "D1"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "udecimal3"
Text:  " "
Name.Other:  "D2"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Punctuation:  ";"
Text:  "<newline><newline>"
Name.Other:  "D1"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "dataset"
Punctuation:  "("
Literal.String.Single:  "'RTTEMP::SomeFile'"
Punctuation:  ","
Name.Other:  "R1"
Punctuation:  ","
Keyword:  "THOR"
Punctuation:  ");"
Text:  "<newline>"
Name.Other:  "D1"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "DATASET"
Punctuation:  "("
Literal.String.Single:  "'RTTEMP::SomeFile'"
Punctuation:  ","
Name.Other:  "R1"
Punctuation:  ","
Keyword:  "THOR"
Punctuation:  ");"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** TEMPLATES ******************/"
Text:  "<newline><newline>"
Keyword.Type:  "#append"
Text:  "<newline>"
Keyword.Type:  "#APPEND"
Text:  "<newline>"
Keyword.Type:  "#inmodule"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** NUMBERS AND STRINGS ******************/"
Text:  "<newline><newline>"
Name.Other:  "ArcCosine"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "acos"
Punctuation:  "("
Literal.Number.Float:  "0.55"
Punctuation:  ");"
Text:  "<newline><newline>"
Keyword.Type:  "DATA2"
Text:  " "
Name.Other:  "MyHexString"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "x'0D0A'"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// a 2-byte hexadecimal string"
Text:  "<newline>"
Name.Other:  "MyDataString"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "D'abcd'"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// same as: (DATA)'abcd'"
Text:  "<newline>"
Name.Other:  "MyUnicodeString"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "U'abcd'"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// same as: (UNICODE)'abcd'"
Text:  "<newline>"
Name.Other:  "MyUnicodeString"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "U'abcd\\353'"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// becomes 'abcd\uFFFD'"
Text:  "<newline>"
Name.Other:  "MyVarString"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "V'abcd'"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// same as: (VARSTRING)'abcd'"
Text:  "<newline>"
Name.Other:  "MyQString"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "Q'ABCD'"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// same as: (QSTRING)'ABCD'"
Text:  "<newline><newline>"
Name.Other:  "MyInt1"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyInt1 is the INTEGER value 10"
Text:  "<newline>"
Name.Other:  "MyInt2"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Hex:  "0x0A"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyInt2 is the INTEGER value 10"
Text:  "<newline>"
Name.Other:  "MyInt3"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Hex:  "0Ax"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyInt3 is the INTEGER value 10"
Text:  "<newline>"
Name.Other:  "MyInt4"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Bin:  "0b1010"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyInt4 is the INTEGER value 10"
Text:  "<newline>"
Name.Other:  "MyInt5"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Bin:  "1010b"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyInt5 is the INTEGER value 10"
Text:  "<newline>"
Name.Other:  "MyReal"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Float:  "10.0"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyReal is the REAL value 10.0"
Text:  "<newline>"
Name.Other:  "MyRea2"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Float:  "1.0e1"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyReal2 is the REAL value 10.0"
Text:  "<newline>"
Name.Other:  "MyRea3"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Float:  "1.0E1"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// value of MyReal3 is the REAL value 10.0"
Text:  "<newline><newline>"
Name.Other:  "MyFunc"
Punctuation:  "("
Keyword.Type:  "STRING1"
Text:  " "
Name.Other:  "val"
Punctuation:  ","
Text:  " "
Keyword.Type:  "SET"
Text:  " "
Keyword.Type:  "OF"
Text:  " "
Keyword.Type:  "STRING1"
Text:  " "
Name.Other:  "S"
Operator:  "="
Keyword:  "ALL"
Punctuation:  ")"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "val"
Text:  " "
Operator.Word:  "IN"
Text:  " "
Name.Other:  "S"
Punctuation:  ";"
Text:  "<newline><newline>"
Name.Other:  "eMails"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "REGEXFINDSET"
Punctuation:  "("
Literal.String.Single:  "'\\\\w+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3}'"
Text:  " "
Punctuation:  ","
Text:  " "
Name.Other:  "sampleStr"
Punctuation:  ");"
Text:  "<newline>"
Name.Other:  "eMails2"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "REGEXFINDSET"
Punctuation:  "("
Literal.String.Single:  "U'\\\\w+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3}'"
Punctuation:  ","
Text:  " "
Name.Other:  "sampleStr2"
Punctuation:  ");"
Text:  "<newline><newline>"
Comment.Single:  "//check for presence in passed set, if passed"
Text:  "<newline><newline>"
Keyword.Type:  "SET"
Text:  " "
Keyword.Type:  "OF"
Text:  " "
Keyword.Type:  "INTEGER4"
Text:  " "
Name.Other:  "MySet"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "IF"
Punctuation:  "("
Name.Other:  "SomeCondition"
Operator:  "="
Keyword.Constant:  "TRUE"
Punctuation:  ",["
Literal.Number.Integer:  "88888"
Punctuation:  ","
Literal.Number.Integer:  "99999"
Punctuation:  ","
Literal.Number.Integer:  "66666"
Punctuation:  ","
Literal.Number.Integer:  "33333"
Punctuation:  ","
Literal.Number.Integer:  "55555"
Punctuation:  "],"
Keyword:  "ALL"
Punctuation:  ");"
Text:  "<newline>"
Name.Other:  "MyRecs"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "MyFile"
Punctuation:  "("
Name.Other:  "Zip"
Text:  " "
Operator.Word:  "IN"
Text:  " "
Name.Other:  "MySet"
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Other:  "str"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "'---\\'---'"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** BLOCKS (not working currently) ******************/"
Text:  "<newline><newline>"
Keyword.Type:  "INTEGER"
Text:  " "
Name.Other:  "addone"
Punctuation:  "("
Keyword.Type:  "INTEGER"
Text:  " "
Name.Other:  "p"
Punctuation:  ")"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "EMBED(Python)<newline># Python code that returns one more than the value passed to it<newline>if p < 10:<newline>    return p+1<newline>else:<newline>    return 0<newline>ENDEMBED"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword.Type:  "REAL8"
Text:  " "
Name.Other:  "colors_should_be_different_here"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Float:  "10.5"
Punctuation:  ";"
Text:  "<newline><newline>"
Literal.String.Single:  "BEGINC++<newline>    #option action<newline>    struct tm localt; // localtime in \"tm\" structure<newline>    time_t timeinsecs; // variable to store time in secs<newline>    time(&timeinsecs);<newline>    localtime_r(&timeinsecs,&localt);<newline>    char temp[15];<newline>    strftime(temp , 15, \"%Y%m%d%H%M%S\", &localt); // Formats the localtime to YYYYMMDDhhmmss<newline>    strncpy(__result, temp, 14);<newline>ENDC++"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword.Type:  "REAL8"
Text:  " "
Name.Other:  "colors_should_be_different_here"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Float:  "10.5"
Punctuation:  ";"
Text:  "<newline><newline>"
Name.Other:  "AddOne"
Punctuation:  "("
Name.Other:  "num"
Punctuation:  ")"
Text:  " "
Operator:  ":="
Text:  " "
Keyword:  "FUNCTIONMACRO"
Text:  "<newline>    "
Keyword:  "LOCAL"
Text:  " "
Name.Other:  "numPlus"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "num"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ";"
Text:  " "
Comment.Single:  "//LOCAL required here"
Text:  "<newline>    "
Keyword:  "RETURN"
Text:  " "
Name.Other:  "numPlus"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "ENDMACRO"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** NESTED ******************/"
Text:  "<newline>"
Name.Other:  "MyMod"
Text:  " "
Operator:  ":="
Text:  " "
Keyword:  "MODULE"
Text:  "<newline>    "
Keyword:  "SHARED"
Text:  " "
Name.Other:  "x"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Integer:  "88"
Punctuation:  ";"
Text:  "<newline>    "
Name.Other:  "y"
Text:  " "
Operator:  ":="
Text:  " "
Literal.Number.Integer:  "42"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "EXPORT"
Text:  " "
Name.Other:  "InMod"
Text:  " "
Operator:  ":="
Text:  " "
Keyword:  "MODULE"
Text:  " "
Comment.Single:  "//nested MODULE"
Text:  "<newline>        "
Keyword:  "EXPORT"
Text:  " "
Name.Other:  "Val1"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "x"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  ";"
Text:  "<newline>        "
Keyword:  "EXPORT"
Text:  " "
Name.Other:  "Val2"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "y"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "END"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** PATTERNS ******************/"
Text:  "<newline><newline>"
Keyword.Type:  "PATTERN"
Text:  " "
Name.Other:  "ws"
Text:  " "
Operator:  ":="
Text:  " "
Keyword.Type:  "PATTERN"
Punctuation:  "("
Literal.String.Single:  "'[ \\t\\r<newline>]'"
Punctuation:  ");"
Text:  "<newline>"
Keyword.Type:  "PATTERN"
Text:  " "
Name.Other:  "arb"
Text:  " "
Operator:  ":="
Text:  " "
Keyword.Type:  "PATTERN"
Punctuation:  "("
Literal.String.Single:  "'[-!.,\\t a-zA-Z0-9]'"
Punctuation:  ")"
Operator:  "+"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "PATTERN"
Text:  " "
Name.Other:  "number"
Text:  " "
Operator:  ":="
Text:  " "
Keyword.Type:  "PATTERN"
Punctuation:  "("
Literal.String.Single:  "'[0-9]'"
Punctuation:  ")"
Operator:  "+"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "PATTERN"
Text:  " "
Name.Other:  "age"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "'('"
Text:  " "
Name.Other:  "number"
Text:  " "
Keyword:  "OPT"
Punctuation:  "("
Literal.String.Single:  "'/I'"
Punctuation:  ")"
Text:  " "
Literal.String.Single:  "')'"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "PATTERN"
Text:  " "
Name.Other:  "role"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "'['"
Text:  " "
Name.Other:  "arb"
Text:  " "
Literal.String.Single:  "']'"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "PATTERN"
Text:  " "
Name.Other:  "m_rank"
Text:  " "
Operator:  ":="
Text:  " "
Literal.String.Single:  "'<'"
Text:  " "
Name.Other:  "number"
Text:  " "
Literal.String.Single:  "'>'"
Punctuation:  ";"
Text:  "<newline>"
Keyword.Type:  "PATTERN"
Text:  " "
Name.Other:  "actor"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "arb"
Text:  " "
Keyword:  "OPT"
Punctuation:  "("
Name.Other:  "ws"
Text:  " "
Literal.String.Single:  "'(I)'"
Text:  " "
Name.Other:  "ws"
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Other:  "MyFunc"
Punctuation:  "("
Keyword.Type:  "STRING1"
Text:  " "
Name.Other:  "val"
Punctuation:  ","
Text:  " "
Keyword.Type:  "SET"
Text:  " "
Keyword.Type:  "OF"
Text:  " "
Keyword.Type:  "STRING1"
Text:  " "
Name.Other:  "S"
Operator:  "="
Keyword:  "ALL"
Punctuation:  ")"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "val"
Text:  " "
Operator.Word:  "IN"
Text:  " "
Name.Other:  "S"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** JOINS *******************/"
Text:  "<newline>"
Name.Other:  "Bld1"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "BUILD"
Punctuation:  "("
Name.Other:  "AlphaKey"
Text:  " "
Punctuation:  ","
Keyword:  "OVERWRITE"
Punctuation:  ");"
Text:  "<newline>"
Name.Other:  "Bld2"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "BUILD"
Punctuation:  "("
Name.Other:  "SeqKey"
Punctuation:  ","
Keyword:  "OVERWRITE"
Punctuation:  ");"
Text:  "<newline>"
Name.Other:  "peopleRecord"
Text:  " "
Operator:  ":="
Text:  " "
Keyword.Type:  "RECORD"
Text:  "<newline>    "
Keyword.Type:  "INTEGER8"
Text:  " "
Name.Other:  "id"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "STRING20"
Text:  " "
Name.Other:  "addr"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Punctuation:  ";"
Text:  "<newline><newline>"
Name.Other:  "peopleDataset"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "DATASET"
Punctuation:  "([{"
Literal.Number.Integer:  "3000"
Punctuation:  ","
Literal.String.Single:  "'LONDON'"
Punctuation:  "},{"
Literal.Number.Integer:  "3500"
Punctuation:  ","
Literal.String.Single:  "'SMITH'"
Punctuation:  "},"
Text:  "<newline>"
Punctuation:  "{"
Literal.Number.Integer:  "30"
Punctuation:  ","
Literal.String.Single:  "'TAYLOR'"
Punctuation:  "}],"
Text:  " "
Name.Other:  "peopleRecord"
Punctuation:  ");"
Text:  "<newline><newline>"
Name.Other:  "joinedRecord"
Text:  " "
Operator:  ":="
Text:  " "
Keyword.Type:  "RECORD"
Text:  "<newline>    "
Name.Other:  "PtblRec"
Punctuation:  ";"
Text:  "<newline>    "
Name.Other:  "peopleRecord"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Punctuation:  ";"
Text:  "<newline><newline>"
Name.Other:  "joinedRecord"
Text:  " "
Name.Other:  "doJoin"
Punctuation:  "("
Name.Other:  "peopleRecord"
Text:  " "
Name.Other:  "l"
Punctuation:  ","
Text:  " "
Name.Other:  "Ptbl"
Text:  " "
Name.Other:  "r"
Punctuation:  ")"
Text:  " "
Operator:  ":="
Text:  " "
Keyword:  "TRANSFORM"
Text:  "<newline>    "
Keyword:  "SELF"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "l"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "SELF"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "r"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Punctuation:  ";"
Text:  "<newline><newline>"
Name.Other:  "FilledRecs1"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "JOIN"
Punctuation:  "("
Name.Other:  "peopleDataset"
Punctuation:  ","
Text:  " "
Name.Other:  "Ptbl"
Punctuation:  ","
Keyword:  "LEFT"
Punctuation:  "."
Name.Other:  "id"
Operator:  "="
Keyword:  "RIGHT"
Punctuation:  "."
Name.Other:  "seq"
Punctuation:  ","
Text:  "<newline>                    "
Name.Other:  "doJoin"
Punctuation:  "("
Keyword:  "LEFT"
Punctuation:  ","
Keyword:  "RIGHT"
Punctuation:  "),"
Text:  " "
Keyword:  "KEYED"
Punctuation:  "("
Name.Other:  "SeqKey"
Punctuation:  "));"
Text:  "<newline>"
Name.Other:  "FilledRecs2"
Text:  " "
Operator:  ":="
Text:  " "
Name.Function:  "JOIN"
Punctuation:  "("
Name.Other:  "peopleDataset"
Punctuation:  ","
Text:  " "
Name.Other:  "Ptbl"
Punctuation:  ","
Keyword:  "LEFT"
Punctuation:  "."
Name.Other:  "addr"
Operator:  "="
Keyword:  "RIGHT"
Punctuation:  "."
Name.Other:  "Lname"
Punctuation:  ","
Text:  "<newline>                    "
Name.Other:  "doJoin"
Punctuation:  "("
Keyword:  "LEFT"
Punctuation:  ","
Keyword:  "RIGHT"
Punctuation:  "),"
Text:  " "
Keyword:  "KEYED"
Punctuation:  "("
Name.Other:  "AlphaKey"
Punctuation:  "));"
Text:  "<newline>                    <newline>"
Name.Function:  "SEQUENTIAL"
Punctuation:  "("
Name.Other:  "PtblOut"
Punctuation:  ","
Name.Other:  "Bld1"
Punctuation:  ","
Name.Other:  "Bld2"
Punctuation:  ","
Name.Function:  "OUTPUT"
Punctuation:  "("
Name.Other:  "FilledRecs1"
Punctuation:  "),"
Name.Function:  "OUTPUT"
Punctuation:  "("
Name.Other:  "FilledRecs2"
Punctuation:  "))"
Text:  "<newline><newline>"
Comment.Multiline:  "/****************** JOINS *******************/"
Text:  "<newline>"
Name.Function:  "OUTPUT"
Punctuation:  "("
Name.Other:  "d"
Punctuation:  ","
Text:  " "
Punctuation:  "{"
Name.Other:  "Label"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "Subject"
Punctuation:  ","
Text:  " "
Name.Other:  "Value"
Text:  " "
Operator:  ":="
Text:  " "
Name.Other:  "Result"
Punctuation:  "},"
Text:  " "
Keyword:  "NAMED"
Punctuation:  "("
Literal.String.Single:  "'BarChart'"
Punctuation:  "));"
Text:  "<newline>"
