Comment.Single:  "-- PART 1."
Text:  "<newline>"
Comment.Single:  "-- Tests for Elm.Basics package. Operators that got imported by default. See http://package.elm-lang.org/packages/elm-lang/core/5.1.1/Basics"
Text:  "<newline><newline>"
Comment.Single:  "-- Equality"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "=="
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "/="
Text:  " "
Name:  "b"
Text:  "<newline><newline>"
Comment.Single:  "-- Comparison"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  ">"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "<="
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  ">="
Text:  " "
Name:  "b"
Text:  "<newline><newline>"
Comment.Single:  "-- Booleans"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "&&"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "||"
Text:  " "
Name:  "b"
Text:  "<newline><newline>"
Comment.Single:  "-- Mathematics"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "-"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "/"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "^"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "//"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "a"
Text:  " "
Operator:  "%"
Text:  " "
Name:  "b"
Text:  "<newline><newline>"
Comment.Single:  "-- Strings and Lists"
Text:  "<newline>"
Literal.String:  "\""
Literal.String.Double:  "hello\""
Text:  " "
Operator:  "++"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "world\""
Text:  " "
Operator:  "=="
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "helloworld\""
Text:  "<newline>"
Punctuation:  "["
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "2"
Punctuation:  "]"
Text:  " "
Operator:  "++"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "3"
Operator:  ","
Literal.Number.Integer:  "5"
Operator:  ","
Literal.Number.Integer:  "8"
Punctuation:  "]"
Text:  " "
Operator:  "=="
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "2"
Operator:  ","
Literal.Number.Integer:  "3"
Operator:  ","
Literal.Number.Integer:  "5"
Operator:  ","
Literal.Number.Integer:  "8"
Punctuation:  "]"
Text:  "<newline><newline>"
Comment.Single:  "-- Higher-Order Helpers"
Text:  "<newline>"
Name:  "leftAligned"
Text:  " "
Operator:  "<|"
Text:  " "
Name:  "monospace"
Text:  " "
Operator:  "<|"
Text:  " "
Name:  "fromString"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "code\""
Text:  "<newline><newline>"
Name:  "ngon"
Text:  " "
Literal.Number.Integer:  "5"
Text:  " "
Literal.Number.Integer:  "30"
Text:  "<newline>  "
Operator:  "|>"
Text:  " "
Name:  "filled"
Text:  " "
Name:  "blue"
Text:  "<newline>  "
Operator:  "|>"
Text:  " "
Name:  "move"
Text:  " "
Punctuation:  "("
Literal.Number.Integer:  "10"
Operator:  ","
Literal.Number.Integer:  "10"
Punctuation:  ")"
Text:  "<newline>  "
Operator:  "|>"
Text:  " "
Name:  "scale"
Text:  " "
Literal.Number.Integer:  "2"
Text:  "<newline><newline>"
Name:  "not"
Text:  " "
Operator:  "<<"
Text:  " "
Name:  "isEven"
Text:  " "
Operator:  "<<"
Text:  " "
Name:  "sqrt"
Text:  "<newline><newline>"
Name:  "sqrt"
Text:  " "
Operator:  ">>"
Text:  " "
Name:  "isEven"
Text:  " "
Operator:  ">>"
Text:  " "
Name:  "not"
Text:  "<newline><newline><newline><newline>"
Comment.Single:  "-- PART 2."
Text:  "<newline>"
Comment.Single:  "-- elm-compiler test cases. See https://github.com/elm-lang/elm-compiler/tree/master/tests/test-files/good"
Text:  "<newline><newline>"
Comment.Single:  "-- LITERALS"
Text:  "<newline><newline>"
Comment.Single:  "-- Multiline"
Text:  "<newline>"
Name:  "s"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"\"\"<newline>here's a quote: \"<newline>\"\"\""
Text:  "<newline><newline>"
Comment.Single:  "-- Negatives"
Text:  "<newline>"
Punctuation:  "("
Operator:  "-"
Punctuation:  ")"
Text:  " "
Name:  "x"
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "x"
Text:  "<newline><newline>"
Name:  "minus"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Literal.Number.Integer:  "3"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "4"
Text:  "<newline><newline>"
Name:  "minusNegative"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Literal.Number.Integer:  "3"
Text:  " "
Operator:  "-"
Text:  " "
Operator:  "-"
Literal.Number.Integer:  "4"
Text:  "<newline><newline>"
Name:  "negativeMinusNegative"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Operator:  "-"
Literal.Number.Integer:  "3"
Text:  " "
Operator:  "-"
Text:  " "
Operator:  "-"
Literal.Number.Integer:  "4"
Text:  "<newline><newline>"
Name:  "negativeInParens"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Punctuation:  "("
Operator:  "-"
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "funcMinus"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Punctuation:  "("
Operator:  "-"
Punctuation:  ")"
Text:  " "
Literal.Number.Integer:  "3"
Text:  " "
Literal.Number.Integer:  "4"
Text:  "<newline><newline>"
Comment.Single:  "-- Numbers"
Text:  "<newline>"
Name:  "int"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "12345"
Text:  "<newline><newline>"
Name:  "exp1"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "4e9"
Text:  "<newline>"
Name:  "exp2"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "3E7"
Text:  "<newline>"
Name:  "exp3"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "2e-9"
Text:  "<newline>"
Name:  "exp4"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "1E+3"
Text:  "<newline><newline>"
Name:  "float1"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "3.14"
Text:  "<newline>"
Name:  "float2"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "0.67"
Text:  "<newline>"
Name:  "float3"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "6.022e26"
Text:  "<newline>"
Name:  "float4"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "0.23E4"
Text:  "<newline><newline>"
Name:  "hex1"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0xFFFFFFFF"
Text:  "<newline>"
Name:  "hex2"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0x0040"
Text:  "<newline>"
Name:  "hex3"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0xbeef"
Text:  "<newline>"
Name:  "hex4"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0xBEEF"
Text:  "<newline>"
Name:  "hex5"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0x0123789"
Text:  "<newline><newline><newline>"
Comment.Single:  "-- Quotes and Comments"
Text:  "<newline>"
Name:  "doubleQuote"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Char:  "'\\\"'"
Text:  "<newline><newline>"
Name:  "singleQuote"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Char:  "'\\''"
Text:  "<newline><newline>"
Comment.Multiline:  "{- this is an {- embeded comment -} -}"
Text:  "<newline>"
Name:  "commentStart"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "{-\""
Text:  "<newline><newline>"
Comment.Single:  "-- RECORDS"
Text:  "<newline><newline>"
Comment.Single:  "-- Access"
Text:  "<newline>"
Name:  "point"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Punctuation:  "{"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "3"
Operator:  ","
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "4"
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Name:  "x1"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Name:  "point"
Operator:  "."
Name:  "x"
Text:  "<newline><newline>"
Name:  "x2"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Operator:  "."
Name:  "x"
Text:  " "
Name:  "point"
Text:  "<newline><newline>"
Name:  "x3"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Punctuation:  "("
Name:  "point"
Punctuation:  ")"
Operator:  "."
Name:  "x"
Text:  "<newline><newline>"
Name:  "x4"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Punctuation:  "("
Operator:  "."
Name:  "x"
Punctuation:  ")"
Text:  " "
Name:  "point"
Text:  "<newline><newline><newline>"
Name:  "apply"
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  "<newline><newline>"
Name:  "x5"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Name:  "apply"
Text:  " "
Operator:  "."
Name:  "x"
Text:  " "
Name:  "point"
Text:  "<newline><newline>"
Comment.Single:  "-- Alias substitution"
Text:  "<newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Vec2Ext"
Text:  " "
Name:  "record"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Punctuation:  "{"
Text:  " "
Name:  "record"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Punctuation:  ":"
Keyword.Type:  "Float"
Operator:  ","
Text:  " "
Name:  "y"
Punctuation:  ":"
Keyword.Type:  "Float"
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline><newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Vec2"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Keyword.Type:  "Vec2Ext"
Text:  " "
Punctuation:  "{}"
Text:  "<newline><newline><newline>"
Name:  "extractVec"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Vec2Ext"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Vec2"
Text:  "<newline>"
Name:  "extractVec"
Text:  " "
Name:  "v"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Punctuation:  "{"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "v"
Operator:  "."
Name:  "x"
Operator:  ","
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "v"
Operator:  "."
Name:  "y"
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "-- Non Homogeneous Records"
Text:  "<newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Thing"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Punctuation:  "{"
Text:  " "
Name:  "x"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline>    "
Operator:  ","
Text:  " "
Name:  "y"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline><newline><newline>"
Name:  "bindFields"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Thing"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Thing"
Text:  "<newline>"
Name:  "bindFields"
Text:  " "
Name:  "thing"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Keyword:  "let"
Text:  "<newline>    "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "thing"
Operator:  "."
Name:  "x"
Text:  "<newline>    "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "thing"
Operator:  "."
Name:  "y"
Text:  "<newline>  "
Keyword:  "in"
Text:  "<newline>    "
Name:  "thing"
Text:  "<newline><newline><newline>"
Comment.Single:  "-- SOUNDNESS"
Text:  "<newline><newline>"
Name:  "apply"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "let"
Text:  " "
Name:  "g"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  "<newline>          "
Keyword:  "in"
Text:  "  "
Name:  "g"
Text:  "<newline><newline>"
Name:  "apply"
Text:  " "
Punctuation:  ":"
Text:  " "
Punctuation:  "("
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "apply"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "let"
Text:  " "
Name:  "g"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  "<newline>          "
Keyword:  "in"
Text:  "  "
Name:  "g"
Text:  "<newline><newline>"
Name:  "myId"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "let"
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "x"
Text:  " "
Keyword:  "in"
Text:  " "
Name:  "y"
Text:  "<newline><newline>"
Name:  "myId"
Text:  " "
Punctuation:  ":"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  "<newline>"
Name:  "myId"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "let"
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "x"
Text:  " "
Keyword:  "in"
Text:  " "
Name:  "y"
Text:  "<newline><newline>"
Name:  "px"
Text:  " "
Punctuation:  ":"
Text:  " "
Name:  "number"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>"
Name:  "px"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Literal.String:  "\""
Literal.String.Double:  "test\""
Text:  "<newline><newline>"
Comment.Single:  "-- LISTS"
Text:  "<newline>"
Name:  "nonEmptyList"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "4"
Operator:  ","
Literal.Number.Integer:  "5"
Punctuation:  "]"
Text:  "<newline>"
Name:  "emptyList"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "[]"
Text:  "<newline><newline>"
Comment.Single:  "-- DECLARATIONS"
Text:  "<newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Width"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Height"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline><newline>"
Comment.Single:  "-- CRASH"
Text:  "<newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "Debug"
Text:  "<newline><newline>"
Name:  "test"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Name:  "x"
Text:  " "
Keyword:  "then"
Text:  "<newline>        "
Literal.Number.Integer:  "2"
Text:  "<newline>    "
Keyword:  "else"
Text:  "<newline>        "
Keyword.Type:  "Debug"
Operator:  "."
Name:  "crash"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "unexpected value\""
Text:  "<newline><newline><newline>"
Comment.Single:  "-- CASES"
Text:  "<newline>"
Name:  "foo"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Keyword:  "case"
Text:  " "
Name:  "x"
Text:  " "
Keyword:  "of"
Text:  "<newline>        "
Literal.String.Char:  "'A'"
Text:  " "
Operator:  "->"
Text:  "<newline>            "
Literal.String:  "\""
Literal.String.Double:  "hello\""
Text:  "<newline><newline>        "
Name:  "_"
Text:  " "
Operator:  "->"
Text:  "<newline>            "
Literal.String:  "\""
Literal.String.Double:  "letter A was not seen\""
Text:  "<newline><newline>"
Keyword:  "type"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Name:  "a"
Text:  "<newline>    "
Operator:  "="
Text:  " "
Keyword.Type:  "Nil"
Text:  " <newline>    "
Operator:  "|"
Text:  " "
Keyword.Type:  "Cons"
Text:  " "
Name:  "a"
Text:  " "
Punctuation:  "("
Keyword.Type:  "List"
Text:  " "
Name:  "a"
Punctuation:  ")"
Text:  "<newline><newline><newline>"
Name:  "zip"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  ","
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  "<newline>"
Name:  "zip"
Text:  " "
Name:  "list1"
Text:  " "
Name:  "list2"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Keyword:  "case"
Text:  " "
Punctuation:  "("
Name:  "list1"
Operator:  ","
Text:  " "
Name:  "list2"
Punctuation:  ")"
Text:  " "
Keyword:  "of"
Text:  "<newline>        "
Punctuation:  "("
Keyword.Type:  "Nil"
Operator:  ","
Text:  " "
Name:  "_"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  "<newline>            "
Keyword.Type:  "Nil"
Text:  "<newline><newline>        "
Punctuation:  "("
Name:  "_"
Operator:  ","
Text:  " "
Keyword.Type:  "Nil"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  "<newline>            "
Keyword.Type:  "Nil"
Text:  "<newline><newline>        "
Punctuation:  "("
Keyword.Type:  "Cons"
Text:  " "
Name:  "x"
Text:  " "
Name:  "xs"
Operator:  ","
Text:  " "
Keyword.Type:  "Cons"
Text:  " "
Name:  "y"
Text:  " "
Name:  "ys"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  "<newline>            "
Keyword.Type:  "Cons"
Text:  " "
Punctuation:  "("
Name:  "x"
Operator:  ","
Text:  " "
Name:  "y"
Punctuation:  ")"
Text:  " "
Punctuation:  "("
Name:  "zip"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "ys"
Punctuation:  ")"
Text:  "<newline><newline><newline>"
Comment.Single:  "-- PART 3."
Text:  "<newline>"
Comment.Single:  "-- Examples from the Elm syntax description. See http://elm-lang.org/docs/syntax"
Text:  "<newline><newline>"
Comment.Single:  "-- Comments"
Text:  "<newline><newline>"
Comment.Single:  "-- a single line comment"
Text:  "<newline>"
Comment.Multiline:  "{- a multiline comment<newline>   {- can be nested -}<newline>-}"
Text:  "<newline><newline>"
Comment.Multiline:  "{--}"
Text:  "<newline>"
Name:  "add"
Text:  " "
Name:  "x"
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "x"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "y"
Text:  "<newline>"
Comment.Single:  "--}"
Text:  "<newline><newline>"
Comment.Single:  "-- Literals"
Text:  "<newline>"
Comment.Single:  "-- Boolean"
Text:  "<newline>"
Keyword.Type:  "True"
Text:  "  "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Bool"
Text:  "<newline>"
Keyword.Type:  "False"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Bool"
Text:  "<newline><newline>"
Literal.Number.Integer:  "42"
Text:  "    "
Punctuation:  ":"
Text:  " "
Name:  "number"
Text:  "  "
Comment.Single:  "-- Int or Float depending on usage"
Text:  "<newline>"
Literal.Number.Float:  "3.14"
Text:  "  "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline><newline>"
Literal.String.Char:  "'a'"
Text:  "   "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Char"
Text:  "<newline>"
Literal.String:  "\""
Literal.String.Double:  "abc\""
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline><newline>"
Comment.Single:  "-- multi-line String"
Text:  "<newline>"
Literal.String:  "\"\"\"<newline>This is useful for holding JSON or other<newline>content that has \"quotation marks\".<newline>\"\"\""
Text:  "<newline><newline>"
Keyword.Type:  "True"
Text:  " "
Operator:  "&&"
Text:  " "
Name:  "not"
Text:  " "
Punctuation:  "("
Keyword.Type:  "True"
Text:  " "
Operator:  "||"
Text:  " "
Keyword.Type:  "False"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "("
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "4"
Punctuation:  ")"
Text:  " "
Operator:  "*"
Text:  " "
Punctuation:  "("
Literal.Number.Integer:  "4"
Operator:  "^"
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "9"
Punctuation:  ")"
Text:  "<newline>"
Literal.String:  "\""
Literal.String.Double:  "abc\""
Text:  " "
Operator:  "++"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "def\""
Text:  "<newline><newline>"
Comment.Single:  "-- Lists"
Text:  "<newline>"
Punctuation:  "["
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "2"
Operator:  ","
Literal.Number.Integer:  "3"
Operator:  ","
Literal.Number.Integer:  "4"
Punctuation:  "]"
Text:  "<newline>"
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "2"
Operator:  ","
Literal.Number.Integer:  "3"
Operator:  ","
Literal.Number.Integer:  "4"
Punctuation:  "]"
Text:  "<newline>"
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "::"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "::"
Text:  " "
Literal.Number.Integer:  "3"
Text:  " "
Operator:  "::"
Text:  " "
Literal.Number.Integer:  "4"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "[]"
Text:  "<newline><newline>"
Comment.Single:  "-- Conditionals"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name:  "powerLevel"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "9000"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "OVER 9000!!!\""
Text:  " "
Keyword:  "else"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  "meh\""
Text:  "<newline><newline>"
Keyword:  "if"
Text:  " "
Name:  "key"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "40"
Text:  " "
Keyword:  "then"
Text:  "<newline>    "
Name:  "n"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline><newline>"
Keyword:  "else"
Text:  " "
Keyword:  "if"
Text:  " "
Name:  "key"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "38"
Text:  " "
Keyword:  "then"
Text:  "<newline>    "
Name:  "n"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline><newline>"
Keyword:  "else"
Text:  "<newline>    "
Name:  "n"
Text:  "<newline><newline><newline>"
Keyword:  "case"
Text:  " "
Name:  "maybe"
Text:  " "
Keyword:  "of"
Text:  "<newline>  "
Keyword.Type:  "Just"
Text:  " "
Name:  "xs"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "xs"
Text:  "<newline>  "
Keyword.Type:  "Nothing"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "[]"
Text:  "<newline><newline>"
Keyword:  "case"
Text:  " "
Name:  "xs"
Text:  " "
Keyword:  "of"
Text:  "<newline>  "
Name:  "hd"
Operator:  "::"
Name:  "tl"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Just"
Text:  " "
Punctuation:  "("
Name:  "hd"
Operator:  ","
Name:  "tl"
Punctuation:  ")"
Text:  "<newline>  "
Punctuation:  "[]"
Text:  "     "
Operator:  "->"
Text:  " "
Keyword.Type:  "Nothing"
Text:  "<newline><newline>"
Keyword:  "case"
Text:  " "
Name:  "n"
Text:  " "
Keyword:  "of"
Text:  "<newline>  "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "->"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>  "
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "->"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>  "
Name:  "_"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "fib"
Text:  " "
Punctuation:  "("
Name:  "n"
Operator:  "-"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "fib"
Text:  " "
Punctuation:  "("
Name:  "n"
Operator:  "-"
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- Union Types"
Text:  "<newline>"
Keyword:  "type"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Empty"
Text:  " "
Operator:  "|"
Text:  " "
Keyword.Type:  "Node"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Keyword.Type:  "List"
Text:  "<newline><newline>"
Comment.Single:  "-- Records"
Text:  "<newline>"
Name:  "point"
Text:  " "
Operator:  "="
Text:  "                         "
Comment.Single:  "-- create a record"
Text:  "<newline>  "
Punctuation:  "{"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "3"
Operator:  ","
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "4"
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Name:  "point"
Operator:  "."
Name:  "x"
Text:  "                         "
Comment.Single:  "-- access field"
Text:  "<newline><newline>"
Keyword.Type:  "List"
Operator:  "."
Name:  "map"
Text:  " "
Operator:  "."
Name:  "x"
Text:  " "
Punctuation:  "["
Name:  "point"
Operator:  ","
Punctuation:  "{"
Name:  "x"
Operator:  "="
Literal.Number.Integer:  "0"
Operator:  ","
Name:  "y"
Operator:  "="
Literal.Number.Integer:  "0"
Punctuation:  "}]"
Text:  "   "
Comment.Single:  "-- field access function"
Text:  "<newline><newline>"
Punctuation:  "{"
Text:  " "
Name:  "point"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "6"
Text:  " "
Punctuation:  "}"
Text:  "               "
Comment.Single:  "-- update a field"
Text:  "<newline><newline>"
Punctuation:  "{"
Text:  " "
Name:  "point"
Text:  " "
Operator:  "|"
Text:  "                       "
Comment.Single:  "-- update many fields"
Text:  "<newline>    "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "point"
Operator:  "."
Name:  "x"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Operator:  ","
Text:  "<newline>    "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "point"
Operator:  "."
Name:  "y"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Name:  "dist"
Text:  " "
Punctuation:  "{"
Name:  "x"
Operator:  ","
Name:  "y"
Punctuation:  "}"
Text:  " "
Operator:  "="
Text:  "                    "
Comment.Single:  "-- pattern matching on fields"
Text:  "<newline>  "
Name:  "sqrt"
Text:  " "
Punctuation:  "("
Name:  "x"
Operator:  "^"
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "y"
Operator:  "^"
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Location"
Text:  " "
Operator:  "="
Text:  "           "
Comment.Single:  "-- type aliases for records"
Text:  "<newline>  "
Punctuation:  "{"
Text:  " "
Name:  "line"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>  "
Operator:  ","
Text:  " "
Name:  "column"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>  "
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "-- Functions"
Text:  "<newline>"
Name:  "square"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Name:  "n"
Operator:  "^"
Literal.Number.Integer:  "2"
Text:  "<newline><newline>"
Name:  "hypotenuse"
Text:  " "
Name:  "a"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Name:  "sqrt"
Text:  " "
Punctuation:  "("
Name:  "square"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "square"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "distance"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  ","
Name:  "b"
Punctuation:  ")"
Text:  " "
Punctuation:  "("
Name:  "x"
Operator:  ","
Name:  "y"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Name:  "hypotenuse"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "-"
Name:  "x"
Punctuation:  ")"
Text:  " "
Punctuation:  "("
Name:  "b"
Operator:  "-"
Name:  "y"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "square"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Operator:  "\\"
Name:  "n"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "n"
Operator:  "^"
Literal.Number.Integer:  "2"
Text:  "<newline><newline>"
Name:  "squares"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Keyword.Type:  "List"
Operator:  "."
Name:  "map"
Text:  " "
Punctuation:  "("
Operator:  "\\"
Name:  "n"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "n"
Operator:  "^"
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  " "
Punctuation:  "("
Keyword.Type:  "List"
Operator:  "."
Name:  "range"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Literal.Number.Integer:  "100"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- Infix Operators"
Text:  "<newline>"
Punctuation:  "("
Operator:  "?"
Punctuation:  ")"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Maybe"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  "<newline>"
Punctuation:  "("
Operator:  "?"
Punctuation:  ")"
Text:  " "
Name:  "maybe"
Text:  " "
Name:  "default"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Keyword.Type:  "Maybe"
Operator:  "."
Name:  "withDefault"
Text:  " "
Name:  "default"
Text:  " "
Name:  "maybe"
Text:  "<newline><newline>"
Name:  "infixr"
Text:  " "
Literal.Number.Integer:  "9"
Text:  " "
Operator:  "?"
Text:  "<newline><newline>"
Name:  "viewNames1"
Text:  " "
Name:  "names"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Keyword.Type:  "String"
Operator:  "."
Name:  "join"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  ", \""
Text:  " "
Punctuation:  "("
Keyword.Type:  "List"
Operator:  "."
Name:  "sort"
Text:  " "
Name:  "names"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "viewNames2"
Text:  " "
Name:  "names"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Name:  "names"
Text:  "<newline>    "
Operator:  "|>"
Text:  " "
Keyword.Type:  "List"
Operator:  "."
Name:  "sort"
Text:  "<newline>    "
Operator:  "|>"
Text:  " "
Keyword.Type:  "String"
Operator:  "."
Name:  "join"
Text:  " "
Literal.String:  "\""
Literal.String.Double:  ", \""
Text:  "<newline><newline>"
Comment.Single:  "-- (arg |> func) is the same as (func arg)"
Text:  "<newline>"
Comment.Single:  "-- Just keep repeating that transformation!"
Text:  "<newline><newline>"
Comment.Single:  "-- Let Expressions"
Text:  "<newline>"
Keyword:  "let"
Text:  "<newline>  "
Name:  "twentyFour"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Literal.Number.Integer:  "3"
Text:  " "
Operator:  "*"
Text:  " "
Literal.Number.Integer:  "8"
Text:  "<newline><newline>  "
Name:  "sixteen"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Literal.Number.Integer:  "4"
Text:  " "
Operator:  "^"
Text:  " "
Literal.Number.Integer:  "2"
Text:  "<newline>"
Keyword:  "in"
Text:  "<newline>  "
Name:  "twentyFour"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "sixteen"
Text:  "<newline><newline>"
Keyword:  "let"
Text:  "<newline>  "
Punctuation:  "("
Text:  " "
Name:  "three"
Operator:  ","
Text:  " "
Name:  "four"
Text:  " "
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Punctuation:  "("
Text:  " "
Literal.Number.Integer:  "3"
Operator:  ","
Text:  " "
Literal.Number.Integer:  "4"
Text:  " "
Punctuation:  ")"
Text:  "<newline><newline>  "
Name:  "hypotenuse"
Text:  " "
Name:  "a"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Name:  "sqrt"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "^"
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "b"
Operator:  "^"
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "in"
Text:  "<newline>  "
Name:  "hypotenuse"
Text:  " "
Name:  "three"
Text:  " "
Name:  "four"
Text:  "<newline><newline>"
Keyword:  "let"
Text:  "<newline>  "
Name:  "name"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>  "
Name:  "name"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Literal.String:  "\""
Literal.String.Double:  "Hermann\""
Text:  "<newline><newline>  "
Name:  "increment"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>  "
Name:  "increment"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Name:  "n"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>"
Keyword:  "in"
Text:  "<newline>  "
Name:  "increment"
Text:  " "
Literal.Number.Integer:  "10"
Text:  "<newline><newline>"
Comment.Single:  "-- Applying Functions"
Text:  "<newline>"
Comment.Single:  "-- alias for appending lists and two lists"
Text:  "<newline>"
Name:  "append"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "ys"
Text:  " "
Operator:  "="
Text:  " "
Name:  "xs"
Text:  " "
Operator:  "++"
Text:  " "
Name:  "ys"
Text:  "<newline>"
Name:  "xs"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "2"
Operator:  ","
Literal.Number.Integer:  "3"
Punctuation:  "]"
Text:  "<newline>"
Name:  "ys"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "4"
Operator:  ","
Literal.Number.Integer:  "5"
Operator:  ","
Literal.Number.Integer:  "6"
Punctuation:  "]"
Text:  "<newline><newline>"
Comment.Single:  "-- All of the following expressions are equivalent:"
Text:  "<newline>"
Name:  "a1"
Text:  " "
Operator:  "="
Text:  " "
Name:  "append"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "ys"
Text:  "<newline>"
Name:  "a2"
Text:  " "
Operator:  "="
Text:  " "
Name:  "xs"
Text:  " "
Operator:  "++"
Text:  " "
Name:  "ys"
Text:  "<newline><newline>"
Name:  "b2"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "("
Operator:  "++"
Punctuation:  ")"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "ys"
Text:  "<newline><newline>"
Name:  "c1"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "("
Name:  "append"
Text:  " "
Name:  "xs"
Punctuation:  ")"
Text:  " "
Name:  "ys"
Text:  "<newline>"
Name:  "c2"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "(("
Operator:  "++"
Punctuation:  ")"
Text:  " "
Name:  "xs"
Punctuation:  ")"
Text:  " "
Name:  "ys"
Text:  "<newline><newline>"
Literal.Number.Integer:  "23"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "19"
Text:  "    "
Punctuation:  ":"
Text:  " "
Name:  "number"
Text:  "<newline>"
Literal.Number.Float:  "2.0"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "    "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline><newline>"
Literal.Number.Integer:  "6"
Text:  " "
Operator:  "*"
Text:  " "
Literal.Number.Integer:  "7"
Text:  "      "
Punctuation:  ":"
Text:  " "
Name:  "number"
Text:  "<newline>"
Literal.Number.Integer:  "10"
Text:  " "
Operator:  "*"
Text:  " "
Literal.Number.Float:  "4.2"
Text:  "   "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline><newline>"
Literal.Number.Integer:  "100"
Text:  " "
Operator:  "//"
Text:  " "
Literal.Number.Integer:  "2"
Text:  "  "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>"
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "/"
Text:  " "
Literal.Number.Integer:  "2"
Text:  "     "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline><newline>"
Punctuation:  "("
Operator:  ","
Punctuation:  ")"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Literal.Number.Integer:  "2"
Text:  "              "
Operator:  "=="
Text:  " "
Punctuation:  "("
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "("
Operator:  ",,,"
Punctuation:  ")"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Keyword.Type:  "True"
Text:  " "
Literal.String.Char:  "'a'"
Text:  " "
Punctuation:  "[]"
Text:  "  "
Operator:  "=="
Text:  " "
Punctuation:  "("
Literal.Number.Integer:  "1"
Operator:  ","
Keyword.Type:  "True"
Operator:  ","
Literal.String.Char:  "'a'"
Operator:  ","
Punctuation:  "[])"
Text:  "<newline><newline>"
Comment.Single:  "-- Modules"
Text:  "<newline>"
Keyword:  "module"
Text:  " "
Keyword.Type:  "MyModule"
Text:  " "
Keyword:  "exposing"
Text:  " "
Punctuation:  "("
Operator:  ".."
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- qualified imports"
Text:  "<newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "List"
Text:  "                    "
Comment.Single:  "-- List.map, List.foldl"
Text:  "<newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Keyword:  "as"
Text:  " "
Keyword.Type:  "L"
Text:  "               "
Comment.Single:  "-- L.map, L.foldl"
Text:  "<newline><newline>"
Comment.Single:  "-- open imports"
Text:  "<newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Keyword:  "exposing"
Text:  " "
Punctuation:  "("
Operator:  ".."
Punctuation:  ")"
Text:  "               "
Comment.Single:  "-- map, foldl, concat, ..."
Text:  "<newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "List"
Text:  " "
Keyword:  "exposing"
Text:  " "
Punctuation:  "("
Text:  " "
Name:  "map"
Operator:  ","
Text:  " "
Name:  "foldl"
Text:  " "
Punctuation:  ")"
Text:  "     "
Comment.Single:  "-- map, foldl"
Text:  "<newline><newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "Maybe"
Text:  " "
Keyword:  "exposing"
Text:  " "
Punctuation:  "("
Text:  " "
Keyword.Type:  "Maybe"
Text:  " "
Punctuation:  ")"
Text:  "         "
Comment.Single:  "-- Maybe"
Text:  "<newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "Maybe"
Text:  " "
Keyword:  "exposing"
Text:  " "
Punctuation:  "("
Text:  " "
Keyword.Type:  "Maybe"
Punctuation:  "("
Operator:  ".."
Punctuation:  ")"
Text:  " "
Punctuation:  ")"
Text:  "     "
Comment.Single:  "-- Maybe, Just, Nothing"
Text:  "<newline>"
Keyword:  "import"
Text:  " "
Keyword.Type:  "Maybe"
Text:  " "
Keyword:  "exposing"
Text:  " "
Punctuation:  "("
Text:  " "
Keyword.Type:  "Maybe"
Punctuation:  "("
Keyword.Type:  "Just"
Punctuation:  ")"
Text:  " "
Punctuation:  ")"
Text:  "   "
Comment.Single:  "-- Maybe, Just"
Text:  "<newline><newline>"
Comment.Single:  "-- Type Annotations"
Text:  "<newline>"
Name:  "answer"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>"
Name:  "answer"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Literal.Number.Integer:  "42"
Text:  "<newline><newline>"
Name:  "factorial"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>"
Name:  "factorial"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Keyword.Type:  "List"
Operator:  "."
Name:  "product"
Text:  " "
Punctuation:  "("
Keyword.Type:  "List"
Operator:  "."
Name:  "range"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Name:  "n"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "distance"
Text:  " "
Punctuation:  ":"
Text:  " "
Punctuation:  "{"
Text:  " "
Name:  "x"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Operator:  ","
Text:  " "
Name:  "y"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  " "
Punctuation:  "}"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Float"
Text:  "<newline>"
Name:  "distance"
Text:  " "
Punctuation:  "{"
Name:  "x"
Operator:  ","
Name:  "y"
Punctuation:  "}"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Name:  "sqrt"
Text:  " "
Punctuation:  "("
Name:  "x"
Operator:  "^"
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "y"
Operator:  "^"
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- Type Aliases"
Text:  "<newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Name"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Age"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline><newline>"
Name:  "info"
Text:  " "
Punctuation:  ":"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Name"
Operator:  ","
Keyword.Type:  "Age"
Punctuation:  ")"
Text:  "<newline>"
Name:  "info"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Punctuation:  "("
Literal.String:  "\""
Literal.String.Double:  "Steve\""
Operator:  ","
Text:  " "
Literal.Number.Integer:  "28"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "type"
Text:  " "
Keyword:  "alias"
Text:  " "
Keyword.Type:  "Point"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Name:  "x"
Punctuation:  ":"
Keyword.Type:  "Float"
Operator:  ","
Text:  " "
Name:  "y"
Punctuation:  ":"
Keyword.Type:  "Float"
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Name:  "origin"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Point"
Text:  "<newline>"
Name:  "origin"
Text:  " "
Operator:  "="
Text:  "<newline>  "
Punctuation:  "{"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Operator:  ","
Text:  " "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "-- JavaScript Interop"
Text:  "<newline>"
Comment.Single:  "-- incoming values"
Text:  "<newline>"
Keyword:  "port"
Text:  " "
Name:  "prices"
Text:  " "
Punctuation:  ":"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Float"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "msg"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Sub"
Text:  " "
Name:  "msg"
Text:  "<newline><newline>"
Comment.Single:  "-- outgoing values"
Text:  "<newline>"
Keyword:  "port"
Text:  " "
Name:  "time"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "Float"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Cmd"
Text:  " "
Name:  "msg"
Text:  "<newline>"
