Comment:  "#Comment on line 1"
Text:  "<newline>"
Comment:  "#Comment on line 2"
Text:  "<newline>"
Name.Tag:  "@tag1"
Text:  " "
Name.Tag:  "@tag2"
Text:  "<newline>"
Keyword.Declaration:  "Feature"
Punctuation:  ":"
Text:  " Feature Text<newline>  In order to test multiline forms<newline>  As a ragel writer<newline>  I need to check for complex combinations<newline><newline>  "
Comment:  "#Comment on line 9"
Text:  "<newline><newline>  "
Comment:  "#Comment on line 11"
Text:  "<newline><newline>  "
Keyword.Namespace:  "Background"
Punctuation:  ":"
Text:  "<newline>    "
Name.Function:  "Given "
Text:  "this is a background step<newline>    "
Name.Function:  "And "
Text:  "this is another one<newline><newline>  "
Name.Tag:  "@tag3"
Text:  " "
Name.Tag:  "@tag4"
Text:  "<newline>  "
Keyword.Namespace:  "Scenario"
Punctuation:  ":"
Text:  " Reading a Scenario<newline>    "
Name.Function:  "Given "
Text:  "there is a step<newline>    "
Name.Function:  "But "
Text:  "not another step<newline><newline>  "
Name.Tag:  "@tag3"
Text:  "<newline>  "
Keyword.Namespace:  "Scenario"
Punctuation:  ":"
Text:  " Reading a second scenario<newline>    With two lines of text<newline>    "
Comment:  "#Comment on line 24"
Text:  "<newline>    "
Name.Function:  "Given "
Text:  "a third step with a table<newline>    "
Punctuation:  "|"
Name.Variable:  "a"
Punctuation:  "|"
Name.Variable:  "b"
Punctuation:  "|"
Text:  "<newline>    "
Punctuation:  "|"
Name:  "c"
Punctuation:  "|"
Name:  "d"
Punctuation:  "|"
Text:  "<newline>    "
Punctuation:  "|"
Name:  "e"
Punctuation:  "|"
Name:  "f"
Punctuation:  "|"
Text:  "<newline>    "
Name.Function:  "And "
Text:  "I am still testing things<newline>      "
Punctuation:  "|"
Name.Variable:  "g"
Punctuation:  "|"
Name.Variable:  "h"
Punctuation:  "|"
Text:  "<newline>      "
Punctuation:  "|"
Name:  "e"
Punctuation:  "|"
Name:  "r"
Punctuation:  "|"
Text:  "<newline>      "
Punctuation:  "|"
Name:  "k"
Punctuation:  "|"
Name:  "i"
Punctuation:  "|"
Text:  "<newline>      "
Punctuation:  "|"
Name:  "n"
Punctuation:  "||"
Text:  "<newline>    "
Name.Function:  "And "
Text:  "I am done testing these tables<newline>    "
Comment:  "#Comment on line 29"
Text:  "<newline>    "
Name.Function:  "Then "
Text:  "I am happy<newline><newline>  "
Keyword.Namespace:  "Scenario"
Punctuation:  ":"
Text:  " Hammerzeit<newline>    "
Name.Function:  "Given "
Text:  "All work and no play<newline>      "
Literal.String:  "\"\"\"<newline>      Makes Homer something something<newline>      And something else<newline>      \"\"\""
Text:  "<newline>    "
Name.Function:  "Then "
Text:  "crazy<newline><newline>  "
Keyword.Namespace:  "Scenario Outline"
Punctuation:  ":"
Text:  " Variable highlighting<newline>    "
Name.Function:  "Given "
Text:  "a variable "
Name.Variable:  "<foo>"
Text:  "<newline>    "
Name.Function:  "When "
Name.Variable:  "<foo>"
Text:  " is surrounded by punctuation like ("
Name.Variable:  "<foo>"
Text:  " or "
Name.Variable:  "<bar>"
Text:  ")<newline>    "
Name.Function:  "Then "
Text:  "all variables should be highlighted properly.<newline><newline>    "
Name.Namespace:  "Examples"
Punctuation:  ":"
Text:  "<newline>      "
Punctuation:  "|"
Text:  " "
Name.Variable:  "foo"
Text:  "  "
Punctuation:  "|"
Text:  " "
Name.Variable:  "bar"
Text:  " "
Punctuation:  "|"
Text:  "<newline>      "
Punctuation:  "|"
Text:  " "
Name:  "1"
Text:  "    "
Punctuation:  "|"
Text:  " "
Name:  "2"
Text:  "   "
Punctuation:  "|"
Text:  "<newline>      "
Punctuation:  "|"
Text:  " "
Name:  "good"
Text:  " "
Punctuation:  "|"
Text:  " "
Name:  "bad"
Text:  " "
Punctuation:  "|"
Text:  "<newline><newline>"
Comment:  "#language:zh-CN"
Text:  "<newline>"
Keyword.Declaration:  "\u529F\u80FD"
Punctuation:  ":"
Text:  "\u52A0\u6CD5<newline><newline>  "
Keyword.Namespace:  "\u573A\u666F"
Punctuation:  ":"
Text:  " \u4E24\u4E2A\u6570\u76F8\u52A0<newline>    \u5047\u5982\u6211\u5DF2\u7ECF\u5728\u8BA1\u7B97\u5668\u91CC\u8F93\u51656<newline>    \u800C\u4E14\u6211\u5DF2\u7ECF\u5728\u8BA1\u7B97\u5668\u91CC\u8F93\u51657<newline>    \u5F53\u6211\u6309\u76F8\u52A0\u6309\u94AE<newline>    \u90A3\u4E48\u6211\u5E94\u8BE5\u5728\u5C4F\u5E55\u4E0A\u770B\u5230\u7684\u7ED3\u679C\u662F13<newline><newline>"
Keyword.Declaration:  "Feature"
Punctuation:  ":"
Text:  " Highlander<newline><newline>  "
Keyword.Namespace:  "Rule"
Punctuation:  ":"
Text:  " There can be only One<newline><newline>    "
Keyword.Namespace:  "Example"
Punctuation:  ":"
Text:  " Only One -- More than one alive<newline>      "
Name.Function:  "Given "
Text:  "there are 3 ninjas<newline>      "
Name.Function:  "And "
Text:  "there are more than one ninja alive<newline>      "
Name.Function:  "When "
Text:  "2 ninjas meet, they will fight<newline>      "
Name.Function:  "Then "
Text:  "one ninja dies (but not me)<newline>      "
Name.Function:  "And "
Text:  "there is one ninja less alive<newline><newline>    "
Keyword.Namespace:  "Example"
Punctuation:  ":"
Text:  " Only One -- One alive<newline>      "
Name.Function:  "Given "
Text:  "there is only 1 ninja alive<newline>      "
Name.Function:  "Then "
Text:  "he (or she) will live forever ;-)<newline><newline>  "
Keyword.Namespace:  "Rule"
Punctuation:  ":"
Text:  " There can be Two (in some cases)<newline>"
