Name:  "String"
Text:  " "
Name:  "json"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"\"\"<newline>  {<newline>    \"formula\": \"(a+b)/2\",<newline>    \"iid\": \"c-1\"<newline>  }<newline>\"\"\""
Text:  "<newline><newline>"
Name:  "String"
Text:  " "
Name:  "json"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "'''<newline>  {<newline>    \"formula\": \"(a+b)/2\",<newline>    \"iid\": \"c-1\"<newline>  }<newline>'''"
Text:  "<newline><newline>"
Comment.Single:  "// This source code comes from http://www.odelia-technologies.com/node/200"
Text:  "<newline><newline>"
Keyword.Namespace:  "package"
Text:  " "
Name.Namespace:  "com.odelia.groovy.simpleworkflow"
Text:  "<newline><newline><newline>"
Keyword.Declaration:  "class"
Text:  " "
Name.Class:  "SimpleWorkflowEngine"
Text:  " "
Operator:  "{"
Text:  "<newline>    "
Keyword.Type:  "def"
Text:  " "
Name:  "workflowMap"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "[:]"
Text:  "<newline>    "
Keyword.Type:  "def"
Text:  " "
Name:  "context"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "[:]"
Text:  "<newline>    "
Keyword.Type:  "def"
Text:  " "
Name:  "beforeActivityName"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "'beforeActivity'"
Text:  "<newline>    "
Keyword.Type:  "def"
Text:  " "
Name:  "afterActivityName"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "'afterActivity'"
Text:  "<newline><newline>    "
Name:  "SimpleWorkflowEngine"
Operator:  "("
Name:  "workflow"
Operator:  ","
Text:  " "
Name:  "context"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "[:])"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "this"
Operator:  "."
Name.Attribute:  "context"
Text:  " "
Operator:  "="
Text:  " "
Name:  "context"
Text:  "<newline>        "
Name:  "parseWorkflow"
Operator:  "("
Name:  "workflow"
Operator:  ")"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "parseWorkflow"
Operator:  "("
Name:  "workflow"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Name:  "workflowMap"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name:  "WorkflowParser"
Operator:  "()."
Name.Attribute:  "parse"
Operator:  "("
Name:  "workflow"
Operator:  ")"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "getActivityValue"
Operator:  "("
Name:  "activity"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "assert"
Text:  " "
Name:  "activity"
Text:  " "
Keyword:  "instanceof"
Text:  " "
Name:  "String"
Text:  "<newline>        "
Name.Function:  "if"
Text:  " "
Operator:  "(!"
Name:  "workflowMap"
Operator:  "["
Name:  "activity"
Operator:  "])"
Text:  "<newline>            "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "RuntimeException"
Operator:  "("
Literal.String.Double:  "\"$activity activity doesn't exist\""
Operator:  ")"
Text:  "<newline>        "
Name:  "workflowMap"
Operator:  "["
Name:  "activity"
Operator:  "]"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "execute"
Operator:  "("
Name:  "activity"
Operator:  ","
Text:  " "
Name:  "pause"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name:  "workflowMap"
Operator:  "["
Name:  "beforeActivityName"
Operator:  "])"
Text:  " "
Operator:  "{"
Text:  "<newline>            "
Name:  "getActivityValue"
Operator:  "("
Name:  "beforeActivityName"
Operator:  ")("
Name:  "context"
Operator:  ","
Text:  " "
Name:  "activity"
Operator:  ")"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Keyword.Type:  "def"
Text:  " "
Name:  "activityValue"
Text:  " "
Operator:  "="
Text:  " "
Name:  "getActivityValue"
Operator:  "("
Name:  "activity"
Operator:  ")"
Text:  "<newline><newline>        "
Comment.Single:  "// Determine the next activity to execute"
Text:  "<newline>        "
Keyword.Type:  "def"
Text:  " "
Name:  "nextActivity"
Text:  "<newline>        "
Name.Function:  "switch"
Text:  " "
Operator:  "("
Name:  "activityValue"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>            "
Keyword:  "case"
Text:  " "
Name.Label:  "String:"
Text:  " "
Name:  "nextActivity"
Text:  " "
Operator:  "="
Text:  " "
Name:  "activityValue"
Operator:  ";"
Text:  " "
Keyword:  "break"
Text:  "<newline>            "
Keyword:  "case"
Text:  " "
Name.Label:  "Closure:"
Text:  " "
Name:  "nextActivity"
Text:  " "
Operator:  "="
Text:  " "
Name:  "activityValue"
Operator:  "("
Name:  "context"
Operator:  ");"
Text:  " "
Keyword:  "break"
Text:  "<newline>            "
Keyword:  "case"
Text:  " "
Name.Label:  "Class:"
Text:  " "
Name:  "nextActivity"
Text:  " "
Operator:  "="
Text:  " "
Name:  "activityValue"
Operator:  "."
Name.Attribute:  "newInstance"
Operator:  "()("
Name:  "context"
Operator:  ")"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name:  "workflowMap"
Operator:  "["
Name:  "afterActivityName"
Operator:  "])"
Text:  " "
Operator:  "{"
Text:  "<newline>            "
Name:  "getActivityValue"
Operator:  "("
Name:  "afterActivityName"
Operator:  ")("
Name:  "context"
Operator:  ","
Text:  " "
Name:  "activity"
Operator:  ","
Text:  " "
Name:  "nextActivity"
Operator:  ")"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Keyword:  "if"
Text:  " "
Operator:  "(!"
Name:  "pause"
Text:  " "
Operator:  "&&"
Text:  " "
Name:  "nextActivity"
Operator:  ")"
Text:  "<newline>            "
Name:  "call"
Operator:  "("
Name:  "nextActivity"
Operator:  ")"
Text:  "<newline>        "
Keyword:  "else"
Text:  "<newline>            "
Name:  "nextActivity"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "call"
Operator:  "("
Name:  "activity"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Name:  "execute"
Operator:  "("
Name:  "activity"
Operator:  ","
Text:  " "
Keyword.Constant:  "false"
Operator:  ")"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "nextActivity"
Operator:  "("
Name:  "activity"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Name:  "execute"
Operator:  "("
Name:  "activity"
Operator:  ","
Text:  " "
Keyword.Constant:  "true"
Operator:  ")"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "main"
Operator:  "("
Name:  "String"
Operator:  "[]"
Text:  " "
Name:  "args"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name:  "args"
Operator:  "."
Name.Attribute:  "size"
Operator:  "()"
Text:  " "
Operator:  "!="
Text:  " "
Literal.Number.Integer:  "2"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>            "
Name:  "println"
Text:  " "
Literal.String.Single:  "'Usage: com.odelia.groovy.simpleworkflow.SimpleWorkflowEngine <dsl_filename> <activity_name>'"
Text:  "<newline>            "
Keyword:  "return"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Name:  "SimpleWorkflowEngine"
Operator:  "."
Name.Attribute:  "newInstance"
Operator:  "("
Keyword:  "new"
Text:  " "
Name:  "File"
Operator:  "("
Name:  "args"
Operator:  "["
Literal.Number.Integer:  "0"
Operator:  "]))("
Name:  "args"
Operator:  "["
Literal.Number.Integer:  "1"
Operator:  "])"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>"
Operator:  "}"
Text:  "<newline><newline>"
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "class"
Text:  " "
Name.Class:  "WorkflowParser"
Text:  " "
Operator:  "{"
Text:  "<newline>    "
Keyword.Type:  "def"
Text:  " "
Name:  "map"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "[:]"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "methodMissing"
Operator:  "("
Name:  "String"
Text:  " "
Name:  "name"
Operator:  ","
Text:  " "
Name:  "args"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Name:  "map"
Operator:  "["
Name:  "name"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Name:  "args"
Operator:  "["
Literal.Number.Integer:  "0"
Operator:  "]"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "parse"
Operator:  "("
Name:  "Closure"
Text:  " "
Name:  "wf"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Name:  "wf"
Operator:  "."
Name.Attribute:  "delegate"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Text:  "<newline>        "
Name:  "wf"
Operator:  "."
Name.Attribute:  "resolveStrategy"
Text:  " "
Operator:  "="
Text:  " "
Name:  "Closure"
Operator:  "."
Name.Attribute:  "DELEGATE_FIRST"
Text:  "<newline>        "
Name:  "wf"
Operator:  "()"
Text:  "<newline>        "
Name:  "map"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name:  "workflow"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "{"
Text:  " "
Name:  "it"
Text:  " "
Operator:  "->"
Text:  "<newline>        "
Name:  "it"
Operator:  "."
Name.Attribute:  "delegate"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Text:  "<newline>        "
Name:  "it"
Operator:  "."
Name.Attribute:  "resolveStrategy"
Text:  " "
Operator:  "="
Text:  " "
Name:  "Closure"
Operator:  "."
Name.Attribute:  "DELEGATE_FIRST"
Text:  "<newline>        "
Name:  "it"
Operator:  "()"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Keyword.Type:  "def"
Text:  " "
Name.Function:  "parse"
Operator:  "("
Name:  "File"
Text:  " "
Name:  "workflowDef"
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Keyword.Type:  "def"
Text:  " "
Name:  "binding"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name:  "Binding"
Operator:  "(["
Name.Label:  "workflow:"
Text:  " "
Name:  "workflow"
Operator:  "])"
Text:  "<newline>        "
Keyword.Type:  "def"
Text:  " "
Name:  "shell"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name:  "GroovyShell"
Operator:  "("
Name:  "binding"
Operator:  ")"
Text:  "<newline>        "
Name:  "shell"
Operator:  "."
Name.Attribute:  "evaluate"
Operator:  "("
Name:  "workflowDef"
Operator:  ")"
Text:  "<newline>        "
Name:  "map"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline>"
Operator:  "}"
Text:  "<newline><newline>"
Comment.Single:  "// comment at \"EOF\""
Text:  "<newline>"
