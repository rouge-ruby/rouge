Text:  "<newline>"
Comment.Single:  "-- Initial tests"
Text:  "<newline><newline>"
Name:  "_a'"
Text:  "<newline>"
Keyword.Type:  "Ab'"
Text:  "<newline>"
Keyword.Type:  "'Cd'"
Text:  "<newline><newline>"
Comment.Single:  "---------------------------------------------------------------------"
Text:  "<newline>"
Comment.Single:  "-- SmallCheck: another lightweight testing library."
Text:  "<newline>"
Comment.Single:  "-- Colin Runciman, August 2006"
Text:  "<newline>"
Comment.Single:  "-- Version 0.2 (November 2006)"
Text:  "<newline>"
Comment.Single:  "--"
Text:  "<newline>"
Comment.Single:  "-- After QuickCheck, by Koen Claessen and John Hughes (2000-2004)."
Text:  "<newline>"
Comment.Single:  "---------------------------------------------------------------------"
Text:  "<newline><newline>"
Keyword.Reserved:  "module"
Text:  " "
Name.Namespace:  "SmallCheck"
Text:  " "
Punctuation:  "("
Text:  "<newline>  "
Name.Function:  "smallCheck"
Punctuation:  ","
Text:  " "
Name.Function:  "depthCheck"
Punctuation:  ","
Text:  "<newline>  "
Keyword.Type:  "Property"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Testable"
Punctuation:  ","
Text:  "<newline>  "
Name.Function:  "forAll"
Punctuation:  ","
Text:  " "
Name.Function:  "forAllElem"
Punctuation:  ","
Text:  "<newline>  "
Name.Function:  "exists"
Punctuation:  ","
Text:  " "
Name.Function:  "existsDeeperBy"
Punctuation:  ","
Text:  " "
Name.Function:  "thereExists"
Punctuation:  ","
Text:  " "
Name.Function:  "thereExistsElem"
Punctuation:  ","
Text:  "<newline>  "
Punctuation:  "("
Operator:  "==>"
Punctuation:  "),"
Text:  "<newline>  "
Keyword.Type:  "Series"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Punctuation:  "("
Operator:  ".."
Punctuation:  "),"
Text:  "<newline>  "
Punctuation:  "("
Operator:  "\\/"
Punctuation:  "),"
Text:  " "
Punctuation:  "("
Operator:  "><"
Punctuation:  "),"
Text:  " "
Name.Function:  "two"
Punctuation:  ","
Text:  " "
Name.Function:  "three"
Punctuation:  ","
Text:  " "
Name.Function:  "four"
Punctuation:  ","
Text:  "<newline>  "
Name.Function:  "cons0"
Punctuation:  ","
Text:  " "
Name.Function:  "cons1"
Punctuation:  ","
Text:  " "
Name.Function:  "cons2"
Punctuation:  ","
Text:  " "
Name.Function:  "cons3"
Punctuation:  ","
Text:  " "
Name.Function:  "cons4"
Punctuation:  ","
Text:  "<newline>  "
Name.Function:  "alts0"
Punctuation:  ","
Text:  " "
Name.Function:  "alts1"
Punctuation:  ","
Text:  " "
Name.Function:  "alts2"
Punctuation:  ","
Text:  " "
Name.Function:  "alts3"
Punctuation:  ","
Text:  " "
Name.Function:  "alts4"
Punctuation:  ","
Text:  "<newline>  "
Keyword.Type:  "N"
Punctuation:  "("
Operator:  ".."
Punctuation:  "),"
Text:  " "
Keyword.Type:  "Nat"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Natural"
Punctuation:  ","
Text:  "<newline>  "
Name.Function:  "depth"
Punctuation:  ","
Text:  " "
Name.Function:  "inc"
Punctuation:  ","
Text:  " "
Name.Function:  "dec"
Text:  "<newline>  "
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline><newline>"
Keyword.Reserved:  "import"
Text:  " "
Name.Namespace:  "Data.List"
Text:  " "
Punctuation:  "("
Name.Function:  "intersperse"
Punctuation:  ")"
Text:  "<newline>"
Keyword.Reserved:  "import"
Text:  " "
Name.Namespace:  "Control.Monad"
Text:  " "
Punctuation:  "("
Name.Function:  "when"
Punctuation:  ")"
Text:  "<newline>"
Keyword.Reserved:  "import"
Text:  " "
Name.Namespace:  "System.IO"
Text:  " "
Punctuation:  "("
Name.Function:  "stdout"
Punctuation:  ","
Text:  " "
Name.Function:  "hFlush"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "------------------ <Series of depth-bounded values> -----------------"
Text:  "<newline><newline>"
Comment.Single:  "-- Series arguments should be interpreted as a depth bound (>=0)"
Text:  "<newline>"
Comment.Single:  "-- Series results should have finite length"
Text:  "<newline><newline>"
Keyword.Reserved:  "type"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "["
Name:  "a"
Punctuation:  "]"
Text:  "<newline><newline>"
Comment.Single:  "-- sum"
Text:  "<newline>"
Keyword.Reserved:  "infixr"
Text:  " "
Literal.Number.Integer:  "7"
Text:  " "
Operator:  "\\/"
Text:  "<newline>"
Punctuation:  "("
Operator:  "\\/"
Punctuation:  ")"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  "<newline>"
Name:  "s1"
Text:  " "
Operator:  "\\/"
Text:  " "
Name:  "s2"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "s1"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "++"
Text:  " "
Name:  "s2"
Text:  " "
Name:  "d"
Text:  "<newline><newline>"
Comment.Single:  "-- product"
Text:  "<newline>"
Keyword.Reserved:  "infixr"
Text:  " "
Literal.Number.Integer:  "8"
Text:  " "
Operator:  "><"
Text:  "<newline>"
Punctuation:  "("
Operator:  "><"
Punctuation:  ")"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ")"
Text:  "<newline>"
Name:  "s1"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "s2"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "[("
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "s1"
Text:  " "
Name:  "d"
Punctuation:  ","
Text:  " "
Name:  "y"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "s2"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline><newline>"
Comment.Single:  "------------------- <methods for type enumeration> ------------------"
Text:  "<newline><newline>"
Comment.Single:  "-- enumerated data values should be finite and fully defined"
Text:  "<newline>"
Comment.Single:  "-- enumerated functional values should be total and strict"
Text:  "<newline><newline>"
Comment.Single:  "-- bounds:"
Text:  "<newline>"
Comment.Single:  "-- for data values, the depth of nested constructor applications"
Text:  "<newline>"
Comment.Single:  "-- for functional values, both the depth of nested case analysis"
Text:  "<newline>"
Comment.Single:  "-- and the depth of results"
Text:  "<newline> <newline>"
Keyword.Reserved:  "class"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Operator:  "::"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name.Builtin:  "()"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Name.Builtin:  "()"
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name.Builtin:  "()"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "b"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "[("
Operator:  "-"
Name:  "d"
Punctuation:  ")"
Operator:  ".."
Name:  "d"
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name:  "i"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "i"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "f"
Text:  " "
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Punctuation:  "("
Name:  "i"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  "))"
Text:  "<newline>                       "
Keyword.Reserved:  "else"
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "g"
Text:  " "
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Punctuation:  "("
Name:  "abs"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  "))"
Text:  "<newline>                       "
Keyword.Reserved:  "else"
Text:  " "
Name:  "z"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "z"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts0"
Text:  " "
Name:  "d"
Punctuation:  ","
Text:  " "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts1"
Text:  " "
Name:  "d"
Punctuation:  ","
Text:  " "
Name:  "g"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts1"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Keyword.Type:  "Integer"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "toInteger"
Text:  " "
Punctuation:  "("
Name:  "i"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Int"
Punctuation:  ")"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "f"
Text:  " "
Operator:  "."
Text:  " "
Punctuation:  "("
Name:  "fromInteger"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Integer"
Operator:  "->"
Keyword.Type:  "Int"
Punctuation:  ")"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "newtype"
Text:  " "
Keyword.Type:  "N"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "N"
Text:  " "
Name:  "a"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Show"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Show"
Text:  " "
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Name:  "a"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "show"
Text:  " "
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Name:  "i"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Name:  "show"
Text:  " "
Name:  "i"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Integral"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Name:  "a"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Name:  "map"
Text:  " "
Keyword.Type:  "N"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "0"
Operator:  ".."
Name:  "d'"
Punctuation:  "]"
Text:  "<newline>               "
Keyword.Reserved:  "where"
Text:  "<newline>               "
Name:  "d'"
Text:  " "
Operator:  "="
Text:  " "
Name:  "fromInteger"
Text:  " "
Punctuation:  "("
Name:  "toInteger"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Name:  "i"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "i"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "f"
Text:  " "
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Punctuation:  "("
Name:  "i"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  "))"
Text:  "<newline>                           "
Keyword.Reserved:  "else"
Text:  " "
Name:  "z"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "z"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts0"
Text:  " "
Name:  "d"
Punctuation:  ","
Text:  " "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts1"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "type"
Text:  " "
Keyword.Type:  "Nat"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "N"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>"
Keyword.Reserved:  "type"
Text:  " "
Keyword.Type:  "Natural"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "N"
Text:  " "
Keyword.Type:  "Integer"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Keyword.Type:  "Float"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  " "
Name:  "d"
Text:  "   "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "encodeFloat"
Text:  " "
Name:  "sig"
Text:  " "
Name:  "exp"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "sig"
Punctuation:  ","
Name:  "exp"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  ","
Text:  "<newline>                 "
Name:  "odd"
Text:  " "
Name:  "sig"
Text:  " "
Operator:  "||"
Text:  " "
Name:  "sig"
Operator:  "=="
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "&&"
Text:  " "
Name:  "exp"
Operator:  "=="
Literal.Number.Integer:  "0"
Text:  " "
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "f"
Text:  " "
Operator:  "."
Text:  " "
Name:  "decodeFloat"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline>             <newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Keyword.Type:  "Double"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "frac"
Text:  " "
Punctuation:  "("
Name:  "x"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Float"
Punctuation:  ")"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "f"
Text:  " "
Operator:  "."
Text:  " "
Punctuation:  "("
Name:  "frac"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Double"
Operator:  "->"
Keyword.Type:  "Float"
Punctuation:  ")"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "frac"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Real"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Fractional"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Real"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Fractional"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "frac"
Text:  " "
Operator:  "="
Text:  " "
Name:  "fromRational"
Text:  " "
Operator:  "."
Text:  " "
Name:  "toRational"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Keyword.Type:  "Char"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  " "
Name:  "d"
Text:  "   "
Operator:  "="
Text:  " "
Name:  "take"
Text:  " "
Punctuation:  "("
Name:  "d"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Punctuation:  "["
Literal.String.Char:  "'a'"
Operator:  ".."
Literal.String.Char:  "'z'"
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name:  "c"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "f"
Text:  " "
Punctuation:  "("
Keyword.Type:  "N"
Text:  " "
Punctuation:  "("
Name:  "fromEnum"
Text:  " "
Name:  "c"
Text:  " "
Operator:  "-"
Text:  " "
Name:  "fromEnum"
Text:  " "
Literal.String.Char:  "'a'"
Punctuation:  "))"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>         "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Operator:  "="
Text:  " "
Name:  "series"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "series"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Operator:  "="
Text:  " "
Name:  "map"
Text:  " "
Name:  "uncurry"
Text:  " "
Operator:  "."
Text:  " "
Name:  "coseries"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "c"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>         "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ","
Name:  "c"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Operator:  "="
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "[("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ","
Name:  "c"
Punctuation:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ",("
Name:  "b"
Punctuation:  ","
Name:  "c"
Punctuation:  "))"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Operator:  "="
Text:  " "
Name:  "map"
Text:  " "
Name:  "uncurry3"
Text:  " "
Operator:  "."
Text:  " "
Name:  "coseries"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "c"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>         "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ","
Name:  "c"
Punctuation:  ","
Name:  "d"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "   "
Operator:  "="
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "[("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ","
Name:  "c"
Punctuation:  ","
Name:  "d"
Punctuation:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ",("
Name:  "b"
Punctuation:  ",("
Name:  "c"
Punctuation:  ","
Name:  "d"
Punctuation:  ")))"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Operator:  "="
Text:  " "
Name:  "map"
Text:  " "
Name:  "uncurry4"
Text:  " "
Operator:  "."
Text:  " "
Name:  "coseries"
Text:  "<newline><newline>"
Name:  "uncurry3"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Operator:  "->"
Name:  "d"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "(("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ","
Name:  "c"
Punctuation:  ")"
Operator:  "->"
Name:  "d"
Punctuation:  ")"
Text:  "<newline>"
Name:  "uncurry3"
Text:  " "
Name:  "f"
Text:  " "
Punctuation:  "("
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  " "
Name:  "y"
Text:  " "
Name:  "z"
Text:  "<newline><newline>"
Name:  "uncurry4"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Operator:  "->"
Name:  "d"
Operator:  "->"
Name:  "e"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "(("
Name:  "a"
Punctuation:  ","
Name:  "b"
Punctuation:  ","
Name:  "c"
Punctuation:  ","
Name:  "d"
Punctuation:  ")"
Operator:  "->"
Name:  "e"
Punctuation:  ")"
Text:  "<newline>"
Name:  "uncurry4"
Text:  " "
Name:  "f"
Text:  " "
Punctuation:  "("
Name:  "w"
Punctuation:  ","
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f"
Text:  " "
Name:  "w"
Text:  " "
Name:  "x"
Text:  " "
Name:  "y"
Text:  " "
Name:  "z"
Text:  "<newline><newline>"
Name:  "two"
Text:  "   "
Operator:  "::"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "a"
Punctuation:  ")"
Text:  "<newline>"
Name:  "two"
Text:  "   "
Name:  "s"
Text:  " "
Operator:  "="
Text:  " "
Name:  "s"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "s"
Text:  "<newline><newline>"
Name:  "three"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "a"
Punctuation:  ","
Name:  "a"
Punctuation:  ")"
Text:  "<newline>"
Name:  "three"
Text:  " "
Name:  "s"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "[("
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "x"
Punctuation:  ",("
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  "))"
Text:  " "
Operator:  "<-"
Text:  " "
Punctuation:  "("
Name:  "s"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "s"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "s"
Punctuation:  ")"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "four"
Text:  "  "
Operator:  "::"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "a"
Punctuation:  ","
Name:  "a"
Punctuation:  ","
Name:  "a"
Punctuation:  ")"
Text:  "<newline>"
Name:  "four"
Text:  "  "
Name:  "s"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "[("
Name:  "w"
Punctuation:  ","
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "w"
Punctuation:  ",("
Name:  "x"
Punctuation:  ",("
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")))"
Text:  " "
Operator:  "<-"
Text:  " "
Punctuation:  "("
Name:  "s"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "s"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "s"
Text:  " "
Operator:  "><"
Text:  " "
Name:  "s"
Punctuation:  ")"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "cons0"
Text:  " "
Operator:  "::"
Text:  " <newline>         "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  "<newline>"
Name:  "cons0"
Text:  " "
Name:  "c"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Name:  "c"
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "cons1"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  "<newline>         "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "b"
Text:  "<newline>"
Name:  "cons1"
Text:  " "
Name:  "c"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Name:  "c"
Text:  " "
Name:  "z"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Name:  "z"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "d"
Operator:  "-"
Literal.Number.Integer:  "1"
Punctuation:  ")]"
Text:  "<newline><newline>"
Name:  "cons2"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>         "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "c"
Text:  "<newline>"
Name:  "cons2"
Text:  " "
Name:  "c"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Name:  "c"
Text:  " "
Name:  "y"
Text:  " "
Name:  "z"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Punctuation:  "("
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "d"
Operator:  "-"
Literal.Number.Integer:  "1"
Punctuation:  ")]"
Text:  "<newline><newline>"
Name:  "cons3"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "c"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>         "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Operator:  "->"
Name:  "d"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "d"
Text:  "<newline>"
Name:  "cons3"
Text:  " "
Name:  "c"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Name:  "c"
Text:  " "
Name:  "x"
Text:  " "
Name:  "y"
Text:  " "
Name:  "z"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Punctuation:  "("
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "d"
Operator:  "-"
Literal.Number.Integer:  "1"
Punctuation:  ")]"
Text:  "<newline><newline>"
Name:  "cons4"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "c"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>         "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Operator:  "->"
Name:  "d"
Operator:  "->"
Name:  "e"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "e"
Text:  "<newline>"
Name:  "cons4"
Text:  " "
Name:  "c"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Name:  "c"
Text:  " "
Name:  "w"
Text:  " "
Name:  "x"
Text:  " "
Name:  "y"
Text:  " "
Name:  "z"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Punctuation:  "("
Name:  "w"
Punctuation:  ","
Name:  "x"
Punctuation:  ","
Name:  "y"
Punctuation:  ","
Name:  "z"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "d"
Operator:  "-"
Literal.Number.Integer:  "1"
Punctuation:  ")]"
Text:  "<newline><newline>"
Name:  "alts0"
Text:  " "
Operator:  "::"
Text:  "  "
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  "<newline>"
Name:  "alts0"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  "<newline><newline>"
Name:  "alts1"
Text:  " "
Operator:  "::"
Text:  "  "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  "<newline>"
Name:  "alts1"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "dec"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline>          "
Keyword.Reserved:  "else"
Text:  " "
Punctuation:  "["
Name.Function:  "\\"
Keyword.Reserved:  "_"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "alts2"
Text:  " "
Operator:  "::"
Text:  "  "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "c"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Punctuation:  ")"
Text:  "<newline>"
Name:  "alts2"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "dec"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline>          "
Keyword.Reserved:  "else"
Text:  " "
Punctuation:  "["
Name.Function:  "\\"
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "alts3"
Text:  " "
Operator:  "::"
Text:  "  "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "c"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Operator:  "->"
Name:  "d"
Punctuation:  ")"
Text:  "<newline>"
Name:  "alts3"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "dec"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline>          "
Keyword.Reserved:  "else"
Text:  " "
Punctuation:  "["
Name.Function:  "\\"
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "alts4"
Text:  " "
Operator:  "::"
Text:  "  "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "c"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "d"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "e"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Keyword.Type:  "Series"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Operator:  "->"
Name:  "c"
Operator:  "->"
Name:  "d"
Operator:  "->"
Name:  "e"
Punctuation:  ")"
Text:  "<newline>"
Name:  "alts4"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "series"
Text:  " "
Punctuation:  "("
Name:  "dec"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline>          "
Keyword.Reserved:  "else"
Text:  " "
Punctuation:  "["
Name.Function:  "\\"
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Keyword.Type:  "Bool"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "     "
Operator:  "="
Text:  " "
Name:  "cons0"
Text:  " "
Keyword.Type:  "True"
Text:  " "
Operator:  "\\/"
Text:  " "
Name:  "cons0"
Text:  " "
Keyword.Type:  "False"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name:  "x"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "x"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "b1"
Text:  " "
Keyword.Reserved:  "else"
Text:  " "
Name:  "b2"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "b1"
Punctuation:  ","
Name:  "b2"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Maybe"
Text:  " "
Name:  "a"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "     "
Operator:  "="
Text:  " "
Name:  "cons0"
Text:  " "
Keyword.Type:  "Nothing"
Text:  " "
Operator:  "\\/"
Text:  " "
Name:  "cons1"
Text:  " "
Keyword.Type:  "Just"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name:  "m"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Reserved:  "case"
Text:  " "
Name:  "m"
Text:  " "
Keyword.Reserved:  "of"
Text:  "<newline>                       "
Keyword.Type:  "Nothing"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "z"
Text:  "<newline>                       "
Keyword.Type:  "Just"
Text:  " "
Name:  "x"
Text:  "  "
Operator:  "->"
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  "<newline>               "
Operator:  "|"
Text:  "  "
Name:  "z"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts0"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  ","
Text:  "<newline>                  "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts1"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Either"
Text:  " "
Name:  "a"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "     "
Operator:  "="
Text:  " "
Name:  "cons1"
Text:  " "
Keyword.Type:  "Left"
Text:  " "
Operator:  "\\/"
Text:  " "
Name:  "cons1"
Text:  " "
Keyword.Type:  "Right"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name:  "e"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Reserved:  "case"
Text:  " "
Name:  "e"
Text:  " "
Keyword.Reserved:  "of"
Text:  "<newline>                       "
Keyword.Type:  "Left"
Text:  " "
Name:  "x"
Text:  "  "
Operator:  "->"
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  "<newline>                       "
Keyword.Type:  "Right"
Text:  " "
Name:  "y"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "g"
Text:  " "
Name:  "y"
Text:  "<newline>               "
Operator:  "|"
Text:  "  "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts1"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  ","
Text:  "<newline>                  "
Name:  "g"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts1"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "["
Name:  "a"
Punctuation:  "]"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  "     "
Operator:  "="
Text:  " "
Name:  "cons0"
Text:  " "
Keyword.Type:  "[]"
Text:  " "
Operator:  "\\/"
Text:  " "
Name:  "cons2"
Text:  " "
Punctuation:  "("
Operator:  ":"
Punctuation:  ")"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name:  "xs"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Reserved:  "case"
Text:  " "
Name:  "xs"
Text:  " "
Keyword.Reserved:  "of"
Text:  "<newline>                        "
Keyword.Type:  "[]"
Text:  "      "
Operator:  "->"
Text:  " "
Name:  "y"
Text:  "<newline>                        "
Punctuation:  "("
Name:  "x"
Operator:  ":"
Name:  "xs'"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "f"
Text:  " "
Name:  "x"
Text:  " "
Name:  "xs'"
Text:  "<newline>               "
Operator:  "|"
Text:  "   "
Name:  "y"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts0"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  ","
Text:  "<newline>                   "
Name:  "f"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "alts2"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Comment.Single:  "-- Warning: the coseries instance here may generate duplicates."
Text:  "<newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Serial"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "series"
Text:  " "
Operator:  "="
Text:  " "
Name:  "coseries"
Text:  "<newline>  "
Name:  "coseries"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Name.Function:  "\\"
Name:  "f"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "g"
Text:  " "
Punctuation:  "["
Name:  "f"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Punctuation:  "]"
Text:  "<newline>               "
Operator:  "|"
Text:  " "
Name:  "g"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "              <newline><newline>"
Comment.Single:  "-- For customising the depth measure.  Use with care!"
Text:  "<newline><newline>"
Name:  "depth"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>"
Name:  "depth"
Text:  " "
Name:  "d"
Text:  " "
Name:  "d'"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "    "
Operator:  "="
Text:  " "
Name:  "d'"
Operator:  "+"
Literal.Number.Integer:  "1"
Operator:  "-"
Name:  "d"
Text:  "<newline>           "
Operator:  "|"
Text:  " "
Name:  "otherwise"
Text:  " "
Operator:  "="
Text:  " "
Name:  "error"
Text:  " "
Literal.String:  "\"SmallCheck.depth: argument < 0\""
Text:  "<newline><newline>"
Name:  "dec"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>"
Name:  "dec"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "d"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  "     "
Operator:  "="
Text:  " "
Name:  "d"
Operator:  "-"
Literal.Number.Integer:  "1"
Text:  "<newline>      "
Operator:  "|"
Text:  " "
Name:  "otherwise"
Text:  " "
Operator:  "="
Text:  " "
Name:  "error"
Text:  " "
Literal.String:  "\"SmallCheck.dec: argument <= 0\""
Text:  "<newline><newline>"
Name:  "inc"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  "<newline>"
Name:  "inc"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Name:  "d"
Operator:  "+"
Literal.Number.Integer:  "1"
Text:  "<newline><newline>"
Comment.Single:  "-- show the extension of a function (in part, bounded both by"
Text:  "<newline>"
Comment.Single:  "-- the number and depth of arguments)"
Text:  "<newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Show"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Show"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Show"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "show"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " <newline>    "
Keyword.Reserved:  "if"
Text:  " "
Name:  "maxarheight"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>    "
Operator:  "&&"
Text:  " "
Name:  "sumarwidth"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "length"
Text:  " "
Name:  "ars"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "length"
Text:  " "
Literal.String:  "\"->;\""
Text:  " "
Operator:  "<"
Text:  " "
Name:  "widthLimit"
Text:  " "
Keyword.Reserved:  "then"
Text:  "<newline>      "
Literal.String:  "\"{\""
Operator:  "++"
Punctuation:  "("
Text:  "<newline>      "
Name:  "concat"
Text:  " "
Operator:  "$"
Text:  " "
Name:  "intersperse"
Text:  " "
Literal.String:  "\";\""
Text:  " "
Operator:  "$"
Text:  " "
Punctuation:  "["
Name:  "a"
Operator:  "++"
Literal.String:  "\"->\""
Operator:  "++"
Name:  "r"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "r"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "ars"
Punctuation:  "]"
Text:  "<newline>      "
Punctuation:  ")"
Operator:  "++"
Literal.String:  "\"}\""
Text:  "<newline>    "
Keyword.Reserved:  "else"
Text:  "<newline>      "
Name:  "concat"
Text:  " "
Operator:  "$"
Text:  " "
Punctuation:  "["
Name:  "a"
Operator:  "++"
Literal.String:  "\"->"
Literal.String.Escape:  "<newline>"
Literal.String:  "\""
Operator:  "++"
Name:  "indent"
Text:  " "
Name:  "r"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "r"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "ars"
Punctuation:  "]"
Text:  "<newline>    "
Keyword.Reserved:  "where"
Text:  "<newline>    "
Name:  "ars"
Text:  " "
Operator:  "="
Text:  " "
Name:  "take"
Text:  " "
Name:  "lengthLimit"
Text:  " "
Punctuation:  "["
Text:  " "
Punctuation:  "("
Name:  "show"
Text:  " "
Name:  "x"
Punctuation:  ","
Text:  " "
Name:  "show"
Text:  " "
Punctuation:  "("
Name:  "f"
Text:  " "
Name:  "x"
Punctuation:  "))"
Text:  "<newline>                           "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "series"
Text:  " "
Name:  "depthLimit"
Text:  " "
Punctuation:  "]"
Text:  "<newline>    "
Name:  "maxarheight"
Text:  " "
Operator:  "="
Text:  " "
Name:  "maximum"
Text:  "  "
Punctuation:  "["
Text:  " "
Name:  "max"
Text:  " "
Punctuation:  "("
Name:  "height"
Text:  " "
Name:  "a"
Punctuation:  ")"
Text:  " "
Punctuation:  "("
Name:  "height"
Text:  " "
Name:  "r"
Punctuation:  ")"
Text:  "<newline>                           "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "r"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "ars"
Text:  " "
Punctuation:  "]"
Text:  "<newline>    "
Name:  "sumarwidth"
Text:  " "
Operator:  "="
Text:  " "
Name:  "sum"
Text:  "       "
Punctuation:  "["
Text:  " "
Name:  "length"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "length"
Text:  " "
Name:  "r"
Text:  " <newline>                           "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "a"
Punctuation:  ","
Name:  "r"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "ars"
Punctuation:  "]"
Text:  "<newline>    "
Name:  "indent"
Text:  " "
Operator:  "="
Text:  " "
Name:  "unlines"
Text:  " "
Operator:  "."
Text:  " "
Name:  "map"
Text:  " "
Punctuation:  "("
Literal.String:  "\"  \""
Operator:  "++"
Punctuation:  ")"
Text:  " "
Operator:  "."
Text:  " "
Name:  "lines"
Text:  "<newline>    "
Name:  "height"
Text:  " "
Operator:  "="
Text:  " "
Name:  "length"
Text:  " "
Operator:  "."
Text:  " "
Name:  "lines"
Text:  "<newline>    "
Punctuation:  "("
Name:  "widthLimit"
Punctuation:  ","
Name:  "lengthLimit"
Punctuation:  ","
Name:  "depthLimit"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "("
Literal.Number.Integer:  "80"
Punctuation:  ","
Literal.Number.Integer:  "20"
Punctuation:  ","
Literal.Number.Integer:  "3"
Punctuation:  ")"
Operator:  "::"
Punctuation:  "("
Keyword.Type:  "Int"
Punctuation:  ","
Keyword.Type:  "Int"
Punctuation:  ","
Keyword.Type:  "Int"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "---------------- <properties and their evaluation> ------------------"
Text:  "<newline><newline>"
Comment.Single:  "-- adapted from QuickCheck originals: here results come in lists,"
Text:  "<newline>"
Comment.Single:  "-- properties have depth arguments, stamps (for classifying random"
Text:  "<newline>"
Comment.Single:  "-- tests) are omitted, existentials are introduced"
Text:  "<newline><newline>"
Keyword.Reserved:  "newtype"
Text:  " "
Keyword.Type:  "PR"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Prop"
Text:  " "
Punctuation:  "["
Keyword.Type:  "Result"
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "data"
Text:  " "
Keyword.Type:  "Result"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Result"
Text:  " "
Punctuation:  "{"
Name:  "ok"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Maybe"
Text:  " "
Keyword.Type:  "Bool"
Punctuation:  ","
Text:  " "
Name:  "arguments"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "["
Keyword.Type:  "String"
Punctuation:  "]}"
Text:  "<newline><newline>"
Name:  "nothing"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Result"
Text:  "<newline>"
Name:  "nothing"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Result"
Text:  " "
Punctuation:  "{"
Name:  "ok"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Nothing"
Punctuation:  ","
Text:  " "
Name:  "arguments"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "[]"
Punctuation:  "}"
Text:  "<newline><newline>"
Name:  "result"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Result"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "PR"
Text:  "<newline>"
Name:  "result"
Text:  " "
Name:  "res"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Prop"
Text:  " "
Punctuation:  "["
Name:  "res"
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "newtype"
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "PR"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword.Reserved:  "class"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "a"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "property"
Text:  " "
Operator:  "::"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "PR"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Keyword.Type:  "Bool"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "property"
Text:  " "
Name:  "b"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Prop"
Text:  " "
Punctuation:  "["
Keyword.Type:  "Result"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Just"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Keyword.Type:  "[]"
Punctuation:  "]"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Keyword.Type:  "PR"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "property"
Text:  " "
Name:  "prop"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "="
Text:  " "
Name:  "prop"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Show"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "property"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f'"
Text:  " "
Keyword.Reserved:  "where"
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Name:  "f'"
Text:  " "
Operator:  "="
Text:  " "
Name:  "forAll"
Text:  " "
Name:  "series"
Text:  " "
Name:  "f"
Text:  "<newline><newline>"
Keyword.Reserved:  "instance"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "property"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Property"
Text:  " "
Name:  "f"
Punctuation:  ")"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f"
Text:  " "
Name:  "d"
Text:  "<newline><newline>"
Name:  "evaluate"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Keyword.Type:  "Result"
Text:  "<newline>"
Name:  "evaluate"
Text:  " "
Name:  "x"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Name:  "rs"
Text:  " "
Keyword.Reserved:  "where"
Text:  " "
Keyword.Type:  "Prop"
Text:  " "
Name:  "rs"
Text:  " "
Operator:  "="
Text:  " "
Name:  "property"
Text:  " "
Name:  "x"
Text:  " "
Name:  "d"
Text:  "<newline><newline>"
Name:  "forAll"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Show"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Property"
Text:  "<newline>"
Name:  "forAll"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Operator:  "$"
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Prop"
Text:  " "
Operator:  "$"
Text:  "<newline>  "
Punctuation:  "["
Text:  " "
Name:  "r"
Punctuation:  "{"
Name:  "arguments"
Text:  " "
Operator:  "="
Text:  " "
Name:  "show"
Text:  " "
Name:  "x"
Text:  " "
Operator:  ":"
Text:  " "
Name:  "arguments"
Text:  " "
Name:  "r"
Punctuation:  "}"
Text:  "<newline>  "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "d"
Punctuation:  ","
Text:  " "
Name:  "r"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "evaluate"
Text:  " "
Punctuation:  "("
Name:  "f"
Text:  " "
Name:  "x"
Punctuation:  ")"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  "<newline><newline>"
Name:  "forAllElem"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Show"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Punctuation:  "["
Name:  "a"
Punctuation:  "]"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Property"
Text:  "<newline>"
Name:  "forAllElem"
Text:  " "
Name:  "xs"
Text:  " "
Operator:  "="
Text:  " "
Name:  "forAll"
Text:  " "
Punctuation:  "("
Name:  "const"
Text:  " "
Name:  "xs"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "thereExists"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Series"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Property"
Text:  "<newline>"
Name:  "thereExists"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Operator:  "$"
Text:  " "
Name.Function:  "\\"
Name:  "d"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Prop"
Text:  " "
Operator:  "$"
Text:  "<newline>  "
Punctuation:  "["
Text:  " "
Keyword.Type:  "Result"
Text:  "<newline>      "
Punctuation:  "("
Text:  " "
Keyword.Type:  "Just"
Text:  " "
Operator:  "$"
Text:  " "
Name:  "or"
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "all"
Text:  " "
Name:  "pass"
Text:  " "
Punctuation:  "("
Name:  "evaluate"
Text:  " "
Punctuation:  "("
Name:  "f"
Text:  " "
Name:  "x"
Punctuation:  ")"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline>                  "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "xs"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "]"
Text:  " "
Punctuation:  ")"
Text:  "<newline>      "
Keyword.Type:  "[]"
Text:  " "
Punctuation:  "]"
Text:  " <newline>  "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "pass"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Result"
Text:  " "
Keyword.Type:  "Nothing"
Text:  " "
Keyword.Reserved:  "_"
Punctuation:  ")"
Text:  "  "
Operator:  "="
Text:  " "
Keyword.Type:  "True"
Text:  "<newline>  "
Name:  "pass"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Result"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Just"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "_"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Name:  "b"
Text:  "<newline><newline>"
Name:  "thereExistsElem"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "b"
Text:  " "
Operator:  "=>"
Text:  " "
Punctuation:  "["
Name:  "a"
Punctuation:  "]"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Property"
Text:  "<newline>"
Name:  "thereExistsElem"
Text:  " "
Name:  "xs"
Text:  " "
Operator:  "="
Text:  " "
Name:  "thereExists"
Text:  " "
Punctuation:  "("
Name:  "const"
Text:  " "
Name:  "xs"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "exists"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>            "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Property"
Text:  "<newline>"
Name:  "exists"
Text:  " "
Operator:  "="
Text:  " "
Name:  "thereExists"
Text:  " "
Name:  "series"
Text:  "<newline><newline>"
Name:  "existsDeeperBy"
Text:  " "
Operator:  "::"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Serial"
Text:  " "
Name:  "a"
Punctuation:  ","
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>                    "
Punctuation:  "("
Keyword.Type:  "Int"
Operator:  "->"
Keyword.Type:  "Int"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "("
Name:  "a"
Operator:  "->"
Name:  "b"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Property"
Text:  "<newline>"
Name:  "existsDeeperBy"
Text:  " "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Name:  "thereExists"
Text:  " "
Punctuation:  "("
Name:  "series"
Text:  " "
Operator:  "."
Text:  " "
Name:  "f"
Punctuation:  ")"
Text:  "<newline> <newline>"
Keyword.Reserved:  "infixr"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "==>"
Text:  "<newline><newline>"
Punctuation:  "("
Operator:  "==>"
Punctuation:  ")"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Bool"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Property"
Text:  "<newline>"
Keyword.Type:  "True"
Text:  " "
Operator:  "==>"
Text:  "  "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Punctuation:  "("
Name:  "property"
Text:  " "
Name:  "x"
Punctuation:  ")"
Text:  "<newline>"
Keyword.Type:  "False"
Text:  " "
Operator:  "==>"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "Property"
Text:  " "
Punctuation:  "("
Name:  "const"
Text:  " "
Punctuation:  "("
Name:  "result"
Text:  " "
Name:  "nothing"
Punctuation:  "))"
Text:  "<newline><newline>"
Comment.Single:  "--------------------- <top-level test drivers> ----------------------"
Text:  "<newline><newline>"
Comment.Single:  "-- similar in spirit to QuickCheck but with iterative deepening"
Text:  "<newline><newline>"
Comment.Single:  "-- test for values of depths 0..d stopping when a property"
Text:  "<newline>"
Comment.Single:  "-- fails or when it has been checked for all these values"
Text:  "<newline>"
Name:  "smallCheck"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "IO"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>"
Name:  "smallCheck"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Name:  "iterCheck"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Just"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "depthCheck"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "IO"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>"
Name:  "depthCheck"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Name:  "iterCheck"
Text:  " "
Name:  "d"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Just"
Text:  " "
Name:  "d"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "iterCheck"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Testable"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "=>"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Maybe"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "a"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "IO"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>"
Name:  "iterCheck"
Text:  " "
Name:  "dFrom"
Text:  " "
Name:  "mdTo"
Text:  " "
Name:  "t"
Text:  " "
Operator:  "="
Text:  " "
Name:  "iter"
Text:  " "
Name:  "dFrom"
Text:  "<newline>  "
Keyword.Reserved:  "where"
Text:  "<newline>  "
Name:  "iter"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "IO"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>  "
Name:  "iter"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>    "
Keyword.Reserved:  "let"
Text:  " "
Keyword.Type:  "Prop"
Text:  " "
Name:  "results"
Text:  " "
Operator:  "="
Text:  " "
Name:  "property"
Text:  " "
Name:  "t"
Text:  " "
Name:  "d"
Text:  "<newline>    "
Punctuation:  "("
Name:  "ok"
Punctuation:  ","
Name:  "s"
Punctuation:  ")"
Text:  " "
Operator:  "<-"
Text:  " "
Name:  "check"
Text:  " "
Punctuation:  "("
Name:  "mdTo"
Operator:  "=="
Keyword.Type:  "Nothing"
Punctuation:  ")"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Type:  "True"
Text:  " "
Name:  "results"
Text:  "<newline>    "
Name:  "maybe"
Text:  " "
Punctuation:  "("
Name:  "iter"
Text:  " "
Punctuation:  "("
Name:  "d"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  "))"
Text:  "<newline>          "
Punctuation:  "("
Name.Function:  "\\"
Name:  "dTo"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "ok"
Text:  " "
Operator:  "&&"
Text:  " "
Name:  "d"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "dTo"
Text:  "<newline>                        "
Keyword.Reserved:  "then"
Text:  " "
Name:  "iter"
Text:  " "
Punctuation:  "("
Name:  "d"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  "<newline>                        "
Keyword.Reserved:  "else"
Text:  " "
Name:  "return"
Text:  " "
Name:  "s"
Punctuation:  ")"
Text:  "<newline>          "
Name:  "mdTo"
Text:  "<newline><newline>"
Name:  "check"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Bool"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Bool"
Text:  " "
Operator:  "->"
Text:  " "
Punctuation:  "["
Keyword.Type:  "Result"
Punctuation:  "]"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "IO"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Bool"
Punctuation:  ","
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>"
Name:  "check"
Text:  " "
Name:  "i"
Text:  " "
Name:  "n"
Text:  " "
Name:  "x"
Text:  " "
Name:  "ok"
Text:  " "
Name:  "rs"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "null"
Text:  " "
Name:  "rs"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>  "
Keyword.Reserved:  "let"
Text:  " "
Name:  "s"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"  Completed \""
Operator:  "++"
Name:  "show"
Text:  " "
Name:  "n"
Operator:  "++"
Literal.String:  "\" test(s)\""
Text:  "<newline>      "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "if"
Text:  " "
Name:  "i"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Literal.String:  "\".\""
Text:  " "
Keyword.Reserved:  "else"
Text:  " "
Literal.String:  "\" without failure.\""
Text:  "<newline>      "
Name:  "z"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "x"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  "     "
Operator:  "="
Text:  " "
Literal.String:  "\"  But \""
Operator:  "++"
Name:  "show"
Text:  " "
Name:  "x"
Operator:  "++"
Literal.String:  "\" did not meet ==> condition.\""
Text:  "<newline>        "
Operator:  "|"
Text:  " "
Name:  "otherwise"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"\""
Text:  "<newline>  "
Name:  "return"
Text:  " "
Punctuation:  "("
Name:  "ok"
Punctuation:  ","
Text:  " "
Name:  "s"
Text:  " "
Operator:  "++"
Text:  " "
Name:  "y"
Text:  " "
Operator:  "++"
Text:  " "
Name:  "z"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "check"
Text:  " "
Name:  "i"
Text:  " "
Name:  "n"
Text:  " "
Name:  "x"
Text:  " "
Name:  "ok"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Result"
Text:  " "
Keyword.Type:  "Nothing"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  ":"
Text:  " "
Name:  "rs"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>  "
Name:  "progressReport"
Text:  " "
Name:  "i"
Text:  " "
Name:  "n"
Text:  " "
Name:  "x"
Text:  "<newline>  "
Name:  "check"
Text:  " "
Name:  "i"
Text:  " "
Punctuation:  "("
Name:  "n"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Punctuation:  "("
Name:  "x"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Name:  "ok"
Text:  " "
Name:  "rs"
Text:  "<newline><newline>"
Name:  "check"
Text:  " "
Name:  "i"
Text:  " "
Name:  "n"
Text:  " "
Name:  "x"
Text:  " "
Name:  "f"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Result"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Just"
Text:  " "
Keyword.Type:  "True"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  ":"
Text:  " "
Name:  "rs"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>  "
Name:  "progressReport"
Text:  " "
Name:  "i"
Text:  " "
Name:  "n"
Text:  " "
Name:  "x"
Text:  "<newline>  "
Name:  "check"
Text:  " "
Name:  "i"
Text:  " "
Punctuation:  "("
Name:  "n"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Name:  "x"
Text:  " "
Name:  "f"
Text:  " "
Name:  "rs"
Text:  "<newline><newline>"
Name:  "check"
Text:  " "
Name:  "i"
Text:  " "
Name:  "n"
Text:  " "
Name:  "x"
Text:  " "
Name:  "f"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Result"
Text:  " "
Punctuation:  "("
Keyword.Type:  "Just"
Text:  " "
Keyword.Type:  "False"
Punctuation:  ")"
Text:  " "
Name:  "args"
Text:  " "
Operator:  ":"
Text:  " "
Name:  "rs"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>  "
Keyword.Reserved:  "let"
Text:  " "
Name:  "s"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"  Failed test no. \""
Operator:  "++"
Name:  "show"
Text:  " "
Punctuation:  "("
Name:  "n"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Operator:  "++"
Literal.String:  "\". Test values follow.\""
Text:  "<newline>      "
Name:  "s'"
Text:  " "
Operator:  "="
Text:  " "
Name:  "s"
Text:  " "
Operator:  "++"
Text:  " "
Literal.String:  "\": \""
Text:  " "
Operator:  "++"
Text:  " "
Name:  "concat"
Text:  " "
Punctuation:  "("
Name:  "intersperse"
Text:  " "
Literal.String:  "\", \""
Text:  " "
Name:  "args"
Punctuation:  ")"
Text:  "<newline>  "
Keyword.Reserved:  "if"
Text:  " "
Name:  "i"
Text:  " "
Keyword.Reserved:  "then"
Text:  "<newline>      "
Name:  "check"
Text:  " "
Name:  "i"
Text:  " "
Punctuation:  "("
Name:  "n"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Name:  "x"
Text:  " "
Keyword.Type:  "False"
Text:  " "
Name:  "rs"
Text:  "<newline>    "
Keyword.Reserved:  "else"
Text:  "<newline>      "
Name:  "return"
Text:  " "
Punctuation:  "("
Keyword.Type:  "False"
Punctuation:  ","
Text:  " "
Name:  "s'"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "progressReport"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "Bool"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "Int"
Text:  " "
Operator:  "->"
Text:  " "
Keyword.Type:  "IO"
Text:  " "
Name.Builtin:  "()"
Text:  "<newline>"
Name:  "progressReport"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Keyword.Reserved:  "_"
Text:  " "
Operator:  "="
Text:  " "
Name:  "return"
Text:  " "
Name.Builtin:  "()"
Text:  "<newline><newline>"
Name:  "foo"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>"
Name:  "foo"
Text:  " "
Operator:  "="
Text:  " "
Name:  "replicate"
Text:  " "
Name:  "n"
Text:  " "
Literal.String.Char:  "'"
Literal.String.Escape:  "\\x1f363"
Literal.String.Char:  "'"
Text:  "<newline>  "
Keyword.Reserved:  "where"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "32"
Text:  "<newline><newline>"
Name:  "bar"
Text:  " "
Operator:  "::"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>"
Name:  "bar"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\""
Literal.String.Escape:  "\\x1f389\\x1f363\\x1f389"
Literal.String:  "\""
Text:  "<newline><newline>"
Name:  "quasi1"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "["
Name:  "quoter"
Operator:  "|"
Text:  "Some quoted text"
Operator:  "|]"
Text:  "<newline><newline>"
Name:  "quasi2"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "["
Name:  "quoter'"
Operator:  "|"
Text:  "Some text with a | in it"
Operator:  "|]"
Text:  "<newline><newline>"
Name:  "quasi3"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "["
Name:  "here"
Operator:  "|"
Text:  "Newlines<newline>are part of<newline>the quotation<newline>"
Operator:  "|]"
Text:  "<newline><newline>"
Punctuation:  "["
Text:  " "
Keyword.Type:  "H"
Operator:  "."
Name:  "label"
Text:  " "
Punctuation:  "["
Text:  " "
Keyword.Type:  "H"
Operator:  "."
Name:  "for'"
Text:  " "
Name:  "hName"
Punctuation:  ","
Text:  " "
Keyword.Type:  "H"
Operator:  "."
Name:  "class'"
Text:  " "
Literal.String:  "\"col-sm-2 col-form-label\""
Text:  " "
Punctuation:  "]"
Text:  " "
Punctuation:  "["
Text:  " "
Name:  "text"
Text:  " "
Name:  "msg"
Text:  " "
Punctuation:  "]"
Text:  "<newline>"
