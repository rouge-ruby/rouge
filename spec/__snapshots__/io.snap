Comment.Multiline:  "/+ nested /+ comments +/ ftw +/"
Text:  "<newline><newline>"
Name:  "foo"
Text:  " "
Keyword:  "@"
Name:  "bar"
Text:  "<newline>"
Name:  "foo"
Text:  " "
Keyword:  "@@"
Name:  "bar"
Punctuation:  "("
Name:  "baz"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "#!/usr/bin/env io"
Text:  "<newline><newline>"
Comment.Multiline:  "/* The Computer Language Shootout<newline>   http://shootout.alioth.debian.org<newline>   contributed by Robert Brandner */"
Text:  "<newline><newline><newline>"
Name:  "mkbuf"
Text:  " "
Keyword:  ":="
Text:  " "
Name.Builtin:  "method"
Punctuation:  "("
Name:  "n"
Operator:  ","
Text:  "<newline>\t"
Name:  "b"
Text:  " "
Keyword:  ":="
Text:  " "
Name.Class:  "List"
Text:  " "
Name.Builtin:  "clone"
Text:  "<newline>\t"
Name:  "b"
Text:  " "
Name:  "preallocateToSize"
Punctuation:  "("
Name:  "n"
Punctuation:  ")"
Text:  "<newline>\t"
Name:  "n"
Text:  " "
Name:  "repeat"
Punctuation:  "("
Name:  "b"
Text:  " "
Name:  "append"
Punctuation:  "("
Keyword.Constant:  "true"
Punctuation:  "))"
Text:  "<newline>\t"
Name.Builtin:  "return"
Text:  " "
Name:  "b"
Text:  "<newline>"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "nsieve"
Text:  " "
Keyword:  ":="
Text:  " "
Name.Builtin:  "method"
Punctuation:  "("
Name:  "n"
Operator:  ","
Text:  "<newline>\t"
Name:  "primes"
Text:  " "
Keyword:  ":="
Text:  " "
Name:  "mkbuf"
Punctuation:  "("
Name:  "n"
Punctuation:  ")"
Text:  "<newline>\t"
Name:  "cnt"
Text:  " "
Keyword:  ":="
Text:  " "
Literal.Number.Float:  "0"
Text:  "<newline>\t"
Name.Builtin:  "for"
Punctuation:  "("
Name:  "i"
Operator:  ","
Text:  " "
Literal.Number.Float:  "2"
Operator:  ","
Text:  " "
Name:  "n"
Operator:  ","
Text:  "<newline>\t\t"
Name.Builtin:  "if"
Punctuation:  "("
Name:  "primes"
Text:  " "
Name:  "at"
Punctuation:  "("
Name:  "i"
Punctuation:  ")"
Operator:  ","
Text:  "<newline>\t\t\t"
Name:  "k"
Text:  " "
Keyword:  ":="
Text:  " "
Name:  "i"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "i"
Text:  "<newline>\t\t\t"
Name:  "while"
Text:  " "
Punctuation:  "("
Name:  "k"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "n"
Operator:  ","
Text:  "<newline>\t\t\t\t"
Name:  "primes"
Text:  " "
Name:  "atPut"
Punctuation:  "("
Name:  "k"
Operator:  ","
Text:  " "
Keyword.Constant:  "false"
Punctuation:  ")"
Text:  "<newline>\t\t\t\t"
Name:  "k"
Text:  " "
Operator:  "="
Text:  " "
Name:  "k"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "i"
Text:  "<newline>\t\t\t"
Punctuation:  ")"
Text:  "<newline>\t\t\t"
Name:  "cnt"
Text:  " "
Operator:  "="
Text:  " "
Name:  "cnt"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Float:  "1"
Text:  "<newline>\t\t"
Punctuation:  ")"
Text:  "<newline>\t"
Punctuation:  ")"
Text:  "<newline>\t"
Name:  "writeln"
Punctuation:  "("
Literal.String:  "\"Primes up to\""
Operator:  ","
Text:  " "
Name:  "n"
Text:  " "
Name:  "asString"
Text:  " "
Name:  "alignRight"
Punctuation:  "("
Literal.Number.Float:  "9"
Operator:  ","
Text:  " "
Literal.String:  "\" \""
Punctuation:  ")"
Operator:  ","
Text:  " "
Name:  "cnt"
Text:  " "
Name:  "asString"
Text:  " "
Name:  "alignRight"
Punctuation:  "("
Literal.Number.Float:  "9"
Operator:  ","
Text:  " "
Literal.String:  "\" \""
Punctuation:  "))"
Text:  "<newline>"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "n"
Text:  " "
Keyword:  ":="
Text:  " "
Name.Class:  "System"
Text:  " "
Name.Builtin:  "args"
Text:  " "
Name:  "at"
Punctuation:  "("
Literal.Number.Float:  "1"
Punctuation:  ")"
Text:  " "
Name:  "asNumber"
Text:  "<newline>"
Name:  "nsieve"
Punctuation:  "("
Text:  " "
Punctuation:  "("
Literal.Number.Float:  "2"
Operator:  "^"
Name:  "n"
Punctuation:  ")"
Operator:  "*"
Literal.Number.Float:  "10000"
Text:  " "
Punctuation:  ")"
Text:  "<newline>"
Name:  "nsieve"
Punctuation:  "("
Text:  " "
Punctuation:  "("
Literal.Number.Float:  "2"
Operator:  "^"
Punctuation:  "("
Name:  "n"
Operator:  "-"
Literal.Number.Float:  "1"
Punctuation:  "))"
Operator:  "*"
Literal.Number.Float:  "10000"
Text:  " "
Punctuation:  ")"
Text:  "<newline>"
Name:  "nsieve"
Punctuation:  "("
Text:  " "
Punctuation:  "("
Literal.Number.Float:  "2"
Operator:  "^"
Punctuation:  "("
Name:  "n"
Operator:  "-"
Literal.Number.Float:  "2"
Punctuation:  "))"
Operator:  "*"
Literal.Number.Float:  "10000"
Text:  " "
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "// comment at eof"
Text:  "<newline>"
