Comment.Single:  "// Types"
Text:  "<newline>"
Name.Variable:  "App"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "IApplication"
Text:  "<newline>"
Name.Variable:  "Employees"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "IReference"
Punctuation:  "."
Name:  "\u0420\u0410\u0411"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable.Global:  "References"
Punctuation:  "."
Name:  "ReferenceFactory"
Punctuation:  "("
Literal.String.Double:  "\"\u0420\u0410\u0411\""
Punctuation:  ")."
Name:  "GetComponent"
Text:  "<newline><newline>"
Comment.Single:  "// Operators"
Text:  "<newline>"
Name.Variable.Global:  "Result"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number:  "1"
Text:  " "
Operator:  "/"
Text:  " "
Literal.Number:  "2"
Text:  "<newline><newline>"
Comment.Single:  "// Numbers"
Text:  "<newline>"
Name.Variable:  "Integer"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "5"
Text:  "<newline>"
Name.Variable:  "Float"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "5.5"
Text:  "<newline>"
Name.Variable:  "WordBool"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "True"
Text:  "<newline><newline>"
Comment.Single:  "// Strings"
Text:  "<newline>"
Name.Variable:  "Double_Quotes"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"An example\""
Text:  "<newline>"
Name.Variable:  "Single_Quotes"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "'An example'"
Text:  "<newline><newline>"
Comment.Single:  "// Comments"
Text:  "<newline><newline>"
Comment.Multiline:  "/********************************************<newline> * \u041F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u043F\u0438\u0441\u043E\u043A \u043A\u043E\u0434\u043E\u0432 \u0438\u043B\u0438 \u0418\u0414 \u0440\u0430\u0431\u043E\u0442\u043D\u0438\u043A\u043E\u0432, *<newline> * \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044E.            *<newline> ********************************************/"
Text:  "<newline><newline>"
Comment.Single:  "// Example code"
Text:  "<newline><newline>"
Name.Variable:  "ADD_EQUAL_NUMBER_TEMPLATE"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"%s.%s = %s\""
Text:  "<newline>"
Name.Variable:  "ADD_EQUAL_STATE_TEMPLATE"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"%s.%s = '%s'\""
Text:  "<newline>"
Name.Variable:  "EMPLOYEES_REFERENCE"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"\u0420\u0410\u0411\""
Text:  "<newline>"
Comment.Single:  "// \u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C, \u0441\u0443\u0449\u0443\u0441\u0442\u0432\u0443\u0435\u0442 \u043B\u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u0441 \u0418\u0414 UserID"
Text:  "<newline>"
Name.Function:  "ExceptionsOff"
Punctuation:  "()"
Text:  "<newline>"
Name.Function:  "FreeException"
Punctuation:  "()"
Text:  "<newline>"
Name.Variable.Global:  "ServiceFactory"
Punctuation:  "."
Name:  "GetUserByID"
Punctuation:  "("
Name.Variable:  "UserID"
Punctuation:  ")"
Text:  "<newline>"
Name.Function:  "ExceptionsOn"
Punctuation:  "()"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name.Function:  "ExceptionExists"
Punctuation:  "()"
Text:  "<newline>  "
Name.Function:  "Raise"
Punctuation:  "("
Name.Function:  "CreateException"
Punctuation:  "("
Literal.String.Double:  "\"EDIRInvalidTypeOfParam\""
Punctuation:  ";"
Text:  "<newline>    "
Name.Function:  "LoadStringFmt"
Punctuation:  "("
Literal.String.Double:  "\"DIR21A2F148_1B41_40F3_9152_6E09E712025A\""
Punctuation:  ";"
Text:  " "
Literal.String.Double:  "\"COMMON\""
Punctuation:  ";"
Text:  "<newline>      "
Name.Function:  "ArrayOf"
Punctuation:  "("
Name.Variable:  "UserID"
Punctuation:  "));"
Text:  " "
Name.Builtin:  "ecException"
Punctuation:  "))"
Text:  " "
Comment.Single:  "// \u041D\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0441 \u0418\u0414 = %s"
Text:  "<newline>"
Keyword:  "endif"
Text:  "<newline>"
Name.Variable:  "Employees"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword.Type:  "IReference"
Punctuation:  "."
Name:  "\u0420\u0410\u0411"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "CreateReference"
Punctuation:  "("
Name.Variable:  "EMPLOYEES_REFERENCE"
Punctuation:  ";"
Text:  " "
Name.Function:  "ArrayOf"
Punctuation:  "("
Literal.String.Double:  "\"\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\""
Punctuation:  ";"
Text:  " "
Name.Builtin:  "SYSREQ_STATE"
Punctuation:  ");"
Text:  " "
Name.Builtin:  "FALSE"
Punctuation:  ")"
Text:  "<newline>"
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Events"
Punctuation:  "."
Name:  "DisableAll"
Text:  "<newline>"
Name.Variable:  "EmployeesTableName"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "TableName"
Text:  "<newline>"
Name.Variable:  "EmployeesUserWhereID"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "AddWhere"
Punctuation:  "("
Name.Function:  "Format"
Punctuation:  "("
Name.Variable:  "ADD_EQUAL_NUMBER_TEMPLATE"
Punctuation:  ";"
Text:  " "
Name.Function:  "ArrayOf"
Punctuation:  "("
Name.Variable:  "EmployeesTableName"
Punctuation:  ";"
Text:  "<newline>  "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Requisites"
Punctuation:  "("
Literal.String.Double:  "\"\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\""
Punctuation:  ")."
Name:  "SQLFieldName"
Punctuation:  ";"
Text:  " "
Name.Variable:  "UserID"
Punctuation:  ")))"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name.Variable:  "OnlyActive"
Text:  "<newline>  "
Name.Variable:  "EmployeesStateWhereID"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "AddWhere"
Punctuation:  "("
Name.Function:  "Format"
Punctuation:  "("
Name.Variable:  "ADD_EQUAL_STATE_TEMPLATE"
Punctuation:  ";"
Text:  " "
Name.Function:  "ArrayOf"
Punctuation:  "("
Name.Variable:  "EmployeesTableName"
Punctuation:  ";"
Text:  "<newline>    "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Requisites"
Punctuation:  "("
Name.Builtin:  "SYSREQ_STATE"
Punctuation:  ")."
Name:  "SQLFieldName"
Punctuation:  ";"
Text:  " "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Requisites"
Punctuation:  "("
Name.Builtin:  "SYSREQ_STATE"
Punctuation:  ")."
Name:  "Items"
Punctuation:  "."
Name:  "IDByValue"
Punctuation:  "("
Literal.String.Double:  "\"\u0414\u0435\u0439\u0441\u0442\u0432\u0443\u044E\u0449\u0430\u044F\""
Punctuation:  "))))"
Text:  "<newline>"
Keyword:  "endif"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name.Function:  "Assigned"
Punctuation:  "("
Name.Variable:  "OurOrgID"
Punctuation:  ")"
Text:  "<newline>  "
Name.Variable:  "EmployeesOurOrgIDWhereID"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "AddWhere"
Punctuation:  "("
Name.Function:  "Format"
Punctuation:  "("
Name.Variable:  "ADD_EQUAL_STATE_TEMPLATE"
Punctuation:  ";"
Text:  " "
Name.Function:  "ArrayOf"
Punctuation:  "("
Name.Variable:  "EmployeesTableName"
Punctuation:  ";"
Text:  "<newline>    "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Requisites"
Punctuation:  "("
Literal.String.Double:  "\"\u041D\u0430\u0448\u0430\u041E\u0440\u0433\""
Punctuation:  ")."
Name:  "SQLFieldName"
Punctuation:  ";"
Text:  " "
Name.Variable:  "OurOrgID"
Punctuation:  ")))"
Text:  "<newline>"
Keyword:  "endif"
Text:  "<newline>"
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Open"
Punctuation:  "()"
Text:  "<newline>"
Name.Variable.Global:  "Result"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "CreateStringList"
Punctuation:  "()"
Text:  "<newline>"
Keyword:  "foreach"
Text:  " "
Name.Variable:  "Employee"
Text:  " "
Keyword:  "in"
Text:  " "
Name.Variable:  "Employees"
Text:  "<newline>  "
Keyword:  "if"
Text:  " "
Name.Variable:  "IsResultCode"
Text:  "<newline>    "
Name.Variable.Global:  "Result"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Name.Variable:  "Employee"
Punctuation:  "."
Name.Builtin:  "SYSREQ_CODE"
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "else"
Text:  "<newline>    "
Name.Variable.Global:  "Result"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Name.Variable:  "Employee"
Punctuation:  "."
Name.Builtin:  "SYSREQ_ID"
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "endif"
Text:  "<newline>"
Keyword:  "endforeach"
Text:  "<newline>"
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Close"
Punctuation:  "()"
Text:  "<newline>"
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "DelWhere"
Punctuation:  "("
Name.Variable:  "EmployeesUserWhereID"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name.Variable:  "OnlyActive"
Text:  "<newline>  "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "DelWhere"
Punctuation:  "("
Name.Variable:  "EmployeesStateWhereID"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "endif"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name.Function:  "Assigned"
Punctuation:  "("
Name.Variable:  "OurOrgID"
Punctuation:  ")"
Text:  "<newline>  "
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "DelWhere"
Punctuation:  "("
Name.Variable:  "EmployeesOurOrgIDWhereID"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "endif"
Text:  "<newline>"
Name.Variable:  "Employees"
Punctuation:  "."
Name:  "Events"
Punctuation:  "."
Name:  "EnableAll"
Text:  "<newline>"
