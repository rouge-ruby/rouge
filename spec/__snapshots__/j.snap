Comment.Single:  "NB. Single line comment"
Text:  "<newline><newline>"
Name:  "Note"
Text:  " "
Literal.String.Single:  "'Multiline comment'"
Text:  "<newline>"
Comment.Multiline:  "The verb `Note` starts a multiline comment.<newline>')' in the next line ends this comment.<newline>"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "Note"
Punctuation:  "=:"
Text:  " "
Literal.String.Single:  "'This is not a comment'"
Text:  "<newline><newline>"
Comment.Single:  "NB. Primitives"
Text:  "<newline>"
Name.Function:  "="
Text:  " "
Punctuation:  "=."
Text:  " "
Punctuation:  "=:"
Text:  "     "
Name.Function:  "<"
Text:  " "
Name.Function:  "<."
Text:  " "
Name.Function:  "<:"
Text:  "     "
Name.Function:  ">"
Text:  " "
Name.Function:  ">."
Text:  " "
Name.Function:  ">:"
Text:  "<newline>"
Name.Function:  "+"
Text:  " "
Name.Function:  "+."
Text:  " "
Name.Function:  "+:"
Text:  "     "
Name.Function:  "-"
Text:  " "
Name.Function:  "-."
Text:  " "
Name.Function:  "-:"
Text:  "     "
Name.Function:  "*"
Text:  " "
Name.Function:  "*."
Text:  " "
Name.Function:  "*:"
Text:  "     "
Name.Function:  "%"
Text:  " "
Name.Function:  "%."
Text:  " "
Name.Function:  "%:"
Text:  "<newline>"
Name.Function:  "^"
Text:  " "
Name.Function:  "^."
Text:  " "
Operator:  "^:"
Text:  "     "
Name.Function:  "$"
Text:  " "
Name.Function:  "$."
Text:  " "
Name.Function:  "$:"
Text:  "     "
Operator:  "~"
Text:  " "
Name.Function:  "~."
Text:  " "
Name.Function:  "~:"
Text:  "     "
Name.Function:  "|"
Text:  " "
Name.Function:  "|."
Text:  " "
Name.Function:  "|:"
Text:  "<newline>"
Operator:  "."
Text:  " "
Operator:  ".."
Text:  " "
Operator:  ".:"
Text:  "     "
Operator:  ":"
Text:  " "
Operator:  ":."
Text:  " "
Operator:  "::"
Text:  "     "
Name.Function:  ","
Text:  " "
Name.Function:  ",."
Text:  " "
Name.Function:  ",:"
Text:  "     "
Name.Function:  ";"
Text:  " "
Operator:  ";."
Text:  " "
Name.Function:  ";:"
Text:  "<newline>"
Name.Function:  "#"
Text:  " "
Name.Function:  "#."
Text:  " "
Name.Function:  "#:"
Text:  "     "
Name.Function:  "!"
Text:  " "
Operator:  "!."
Text:  " "
Operator:  "!:"
Text:  "     "
Operator:  "/"
Text:  " "
Operator:  "/."
Text:  " "
Name.Function:  "/:"
Text:  "     "
Operator:  "\\"
Text:  " "
Operator:  "\\."
Text:  " "
Name.Function:  "\\:"
Text:  "<newline>"
Name.Function:  "["
Text:  "    "
Name.Function:  "[:"
Text:  "     "
Name.Function:  "]"
Text:  "           "
Name.Function:  "{"
Text:  " "
Name.Function:  "{."
Text:  " "
Name.Function:  "{:"
Text:  " "
Name.Function:  "{::"
Text:  " "
Operator:  "}"
Text:  " "
Name.Function:  "}."
Text:  " "
Name.Function:  "}:"
Text:  " "
Operator:  "}::"
Text:  "<newline>"
Operator:  "\""
Text:  " "
Name.Function:  "\"."
Text:  " "
Name.Function:  "\":"
Text:  "     "
Operator:  "`"
Text:  "    "
Operator:  "`:"
Text:  "     "
Operator:  "@"
Text:  " "
Operator:  "@."
Text:  " "
Operator:  "@:"
Text:  "     "
Operator:  "&"
Text:  " "
Operator:  "&."
Text:  " "
Operator:  "&:"
Text:  " "
Operator:  "&.:"
Text:  "<newline>"
Name.Function:  "?"
Text:  " "
Name.Function:  "?."
Text:  "<newline>"
Keyword.Constant:  "a."
Text:  " "
Keyword.Constant:  "a:"
Text:  " "
Name.Function:  "A."
Text:  " "
Operator:  "b."
Text:  " "
Name.Function:  "C."
Text:  " "
Operator:  "d."
Text:  " "
Operator:  "D."
Text:  " "
Operator:  "D:"
Text:  " "
Name.Function:  "e."
Text:  " "
Name.Function:  "E."
Text:  " "
Operator:  "f."
Text:  " "
Operator:  "F."
Text:  " "
Operator:  "F.."
Text:  " "
Operator:  "F.:"
Text:  " "
Operator:  "F:"
Text:  "<newline>"
Operator:  "F:."
Text:  " "
Operator:  "F::"
Text:  " "
Operator:  "H."
Text:  " "
Name.Function:  "i."
Text:  " "
Name.Function:  "i:"
Text:  " "
Name.Function:  "I."
Text:  " "
Name.Function:  "j."
Text:  " "
Name.Function:  "L."
Text:  " "
Operator:  "L:"
Text:  " "
Operator:  "M."
Text:  " "
Name.Function:  "o."
Text:  " "
Name.Function:  "p."
Text:  " "
Name.Function:  "p.."
Text:  " "
Name.Function:  "p:"
Text:  " "
Name.Function:  "q:"
Text:  "<newline>"
Name.Function:  "r."
Text:  " "
Name.Function:  "s:"
Text:  " "
Operator:  "S:"
Text:  " "
Operator:  "t."
Text:  " "
Operator:  "t:"
Text:  " "
Operator:  "T."
Text:  " "
Name.Function:  "u."
Text:  " "
Name.Function:  "u:"
Text:  " "
Name.Function:  "v."
Text:  " "
Name.Function:  "x:"
Text:  " "
Name.Function:  "Z:"
Text:  "<newline>"
Name.Function:  "_9:"
Text:  " "
Name.Function:  "_8:"
Text:  " "
Name.Function:  "_7:"
Text:  " "
Name.Function:  "_6:"
Text:  " "
Name.Function:  "_5:"
Text:  " "
Name.Function:  "_4:"
Text:  " "
Name.Function:  "_3:"
Text:  " "
Name.Function:  "_2:"
Text:  " "
Name.Function:  "_1:"
Text:  " "
Name.Function:  "0:"
Text:  " "
Name.Function:  "1:"
Text:  " "
Name.Function:  "2:"
Text:  " "
Name.Function:  "3:"
Text:  "<newline>"
Name.Function:  "4:"
Text:  " "
Name.Function:  "5:"
Text:  " "
Name.Function:  "6:"
Text:  " "
Name.Function:  "7:"
Text:  " "
Name.Function:  "8:"
Text:  " "
Name.Function:  "9:"
Text:  " "
Name.Function:  "_:"
Text:  "<newline><newline>"
Comment.Single:  "NB. Control words"
Text:  "<newline>"
Keyword:  "do."
Text:  " "
Keyword:  "end."
Text:  "<newline>"
Keyword:  "if."
Text:  " "
Keyword:  "elseif."
Text:  " "
Keyword:  "else."
Text:  "<newline>"
Keyword:  "select."
Text:  " "
Keyword:  "case."
Text:  " "
Keyword:  "fcase."
Text:  "<newline>"
Keyword:  "for."
Text:  "<newline>"
Keyword:  "while."
Text:  "<newline>"
Keyword:  "whilst."
Text:  "<newline>"
Keyword:  "break."
Text:  " "
Keyword:  "continue."
Text:  "<newline>"
Keyword:  "assert."
Text:  "<newline>"
Keyword:  "try."
Text:  " "
Keyword:  "catch."
Text:  " "
Keyword:  "catchd."
Text:  " "
Keyword:  "catcht."
Text:  "<newline>"
Keyword:  "throw."
Text:  "<newline>"
Keyword:  "return."
Text:  "<newline><newline>"
Comment.Single:  "NB. Control words with identifiers"
Text:  "<newline>"
Keyword:  "for_"
Name:  "elem"
Keyword:  "."
Text:  "<newline>"
Keyword:  "label_"
Name.Label:  "lbl"
Keyword:  "."
Text:  " "
Keyword:  "goto_"
Name.Label:  "lbl"
Keyword:  "."
Text:  "<newline><newline>"
Comment.Single:  "NB. Names"
Text:  "<newline>"
Name:  "foo"
Text:  "       "
Name:  "foo_bar"
Text:  "<newline>"
Name:  "foo_loc_"
Text:  "  "
Name:  "foo_bar_loc_"
Text:  "  "
Name:  "foo_1_"
Text:  "  "
Name:  "foo__"
Text:  "   "
Comment.Single:  "NB. Explicit locatives"
Text:  "<newline>"
Name:  "foo__obj"
Text:  "  "
Name:  "foo_bar__obj"
Text:  "  "
Name:  "foo__o1__o2"
Text:  "     "
Comment.Single:  "NB. Object locatives"
Text:  "<newline><newline>"
Comment.Single:  "NB. Numeric constants"
Text:  "<newline>"
Literal.Number:  "0"
Text:  " "
Literal.Number:  "1"
Text:  " "
Literal.Number:  "_1"
Text:  "                "
Comment.Single:  "NB. Integers 0, 1, -1"
Text:  "<newline>"
Literal.Number:  "_"
Text:  " "
Literal.Number:  "__"
Text:  " "
Literal.Number:  "_."
Text:  "               "
Comment.Single:  "NB. Infinity, negative infinity, NaN"
Text:  "<newline>"
Literal.Number:  "0.8"
Text:  " "
Literal.Number:  "1.23e_9"
Text:  " "
Literal.Number:  "_3e15"
Text:  "     "
Comment.Single:  "NB. Floating-point numbers"
Text:  "<newline>"
Literal.Number:  "1.5j2"
Text:  " "
Literal.Number:  "3.3ar1"
Text:  " "
Literal.Number:  "2ad60"
Text:  "    "
Comment.Single:  "NB. Complex numbers"
Text:  "<newline>"
Literal.Number:  "5r3"
Text:  " "
Literal.Number:  "_1r2"
Text:  "              "
Comment.Single:  "NB. Rational numbers"
Text:  "<newline>"
Literal.Number:  "1.2p3"
Text:  " "
Literal.Number:  "7x_1.5"
Text:  "          "
Comment.Single:  "NB. 1.2*\u03C0^3, 7*e^-1.5"
Text:  "<newline>"
Literal.Number:  "2b0010"
Text:  " "
Literal.Number:  "16babc789.12"
Text:  "   "
Comment.Single:  "NB. Binary/hexadecimal numbers"
Text:  "<newline>"
Literal.Number:  "9999999999999999999x"
Text:  "  "
Comment.Single:  "NB. An extended precision integer"
Text:  "<newline><newline>"
Comment.Single:  "NB. String literals"
Text:  "<newline>"
Literal.String.Single:  "'foo bar'"
Text:  "<newline>"
Literal.String.Single:  "'foo "
Literal.String.Escape:  "''"
Literal.String.Single:  "bar"
Literal.String.Escape:  "''"
Literal.String.Single:  "'"
Text:  "   "
Comment.Single:  "NB. `''` escapes single-quote"
Text:  "<newline><newline>"
Comment.Single:  "NB. Invalid tokens"
Text:  "<newline>"
Error:  "foo:"
Text:  " "
Error:  "for_."
Text:  " "
Error:  "{::."
Text:  " "
Error:  ".:."
Text:  " "
Error:  "10:"
Text:  " "
Error:  "NB.."
Text:  "<newline><newline>"
Comment.Single:  "NB. Multiline String"
Text:  "<newline>"
Keyword.Pseudo:  "noun"
Text:  " "
Keyword.Pseudo:  "define"
Text:  "<newline>"
Literal.String.Heredoc:  "This is a 'heredoc' string.<newline>You can include LF<newline>"
Error:  "<newline>"
Literal.String.Heredoc:  "  or single-quote ' here.<newline>"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "NB. Explicit definitions"
Text:  "<newline>"
Keyword.Pseudo:  "verb"
Text:  " "
Keyword.Pseudo:  "define"
Text:  "<newline>  "
Comment.Single:  "NB. Monadic case"
Text:  "<newline>  "
Keyword:  "if."
Text:  " "
Name.Function:  "#"
Name.Builtin.Pseudo:  "y"
Text:  " "
Keyword:  "do."
Text:  "<newline>    "
Name:  "echo"
Text:  " "
Name.Builtin.Pseudo:  "y"
Text:  "<newline>  "
Keyword:  "end."
Text:  "<newline>"
Punctuation:  ":"
Text:  "<newline>  "
Comment.Single:  "NB. Dyadic case"
Text:  "<newline>  "
Keyword:  "if."
Text:  " "
Name.Builtin.Pseudo:  "x"
Text:  " "
Name.Function:  "<:"
Text:  " "
Name.Function:  "#"
Name.Builtin.Pseudo:  "y"
Text:  " "
Keyword:  "do."
Text:  "<newline>    "
Name:  "echo"
Text:  " "
Name.Builtin.Pseudo:  "x"
Text:  " "
Name.Function:  "{."
Text:  " "
Name.Builtin.Pseudo:  "y"
Text:  "<newline>  "
Keyword:  "end."
Text:  "<newline>"
Punctuation:  ")"
Text:  "<newline>"
Keyword.Pseudo:  "adverb"
Text:  " "
Keyword.Pseudo:  "def"
Text:  " "
Punctuation:  "'"
Name.Function:  "[:"
Text:  " "
Name.Builtin.Pseudo:  "u"
Operator:  "^:"
Literal.Number:  "_1"
Text:  " "
Name.Builtin.Pseudo:  "u"
Operator:  "/"
Punctuation:  "'"
Text:  "  "
Comment.Single:  "NB. Single line form"
Text:  "<newline>"
Comment.Single:  "NB. More complicated example"
Text:  "<newline>"
Keyword.Pseudo:  "0"
Text:  " "
Keyword.Pseudo:  "define"
Text:  " "
Keyword.Pseudo:  "13"
Text:  " "
Keyword.Pseudo:  "def"
Text:  " "
Keyword.Pseudo:  "0"
Text:  " "
Keyword.Pseudo:  "noun"
Text:  " "
Keyword.Pseudo:  ":"
Text:  " "
Keyword.Pseudo:  "0"
Text:  "<newline>"
Literal.String.Heredoc:  "the right noun<newline>"
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin.Pseudo:  "x"
Text:  " "
Name.Function:  ","
Text:  " "
Name.Builtin.Pseudo:  "y"
Text:  "<newline>"
Punctuation:  ")"
Text:  "<newline>"
Literal.String.Heredoc:  "the left noun<newline>"
Punctuation:  ")"
Text:  "<newline>"
