Comment.Single:  "////// badcase.java //////"
Text:  "<newline><newline>"
Comment.Single:  "// this used to take ages"
Text:  "<newline>"
Keyword.Type:  "void"
Text:  " "
Name.Function:  "foo"
Operator:  "()"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name:  "xxxxxxxxxxxxxxxxxxxxxx"
Operator:  "{"
Text:  " "
Operator:  "}"
Text:  "<newline><newline>"
Comment.Single:  "// numbers"
Text:  "<newline>"
Comment.Single:  "// [jneen] via http://docs.oracle.com/javase/7/docs/technotes/guides/language/underscores-literals.html"
Text:  "<newline><newline>"
Keyword.Type:  "float"
Text:  " "
Name:  "pi1"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "3"
Name:  "_"
Operator:  "."
Literal.Number.Integer:  "1415"
Name.Constant:  "F"
Operator:  ";"
Text:  "      "
Comment.Single:  "// Invalid; cannot put underscores adjacent to a decimal point"
Text:  "<newline>"
Keyword.Type:  "float"
Text:  " "
Name:  "pi2"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "3"
Operator:  "."
Name.Attribute:  "_1415F"
Operator:  ";"
Text:  "      "
Comment.Single:  "// Invalid; cannot put underscores adjacent to a decimal point"
Text:  "<newline>"
Keyword.Type:  "long"
Text:  " "
Name:  "socialSecurityNumber1"
Text:  "<newline>  "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "999_99_9999"
Name:  "_L"
Operator:  ";"
Text:  "         "
Comment.Single:  "// Invalid; cannot put underscores prior to an L suffix"
Text:  "<newline><newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x1"
Text:  " "
Operator:  "="
Text:  " "
Name:  "_52"
Operator:  ";"
Text:  "              "
Comment.Single:  "// This is an identifier, not a numeric literal"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x2"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "5_2"
Operator:  ";"
Text:  "              "
Comment.Single:  "// OK (decimal literal)"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x3"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "52"
Name:  "_"
Operator:  ";"
Text:  "              "
Comment.Single:  "// Invalid; cannot put underscores at the end of a literal"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x4"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "5_______2"
Operator:  ";"
Text:  "        "
Comment.Single:  "// OK (decimal literal)"
Text:  "<newline><newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x5"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Name:  "_x52"
Operator:  ";"
Text:  "            "
Comment.Single:  "// Invalid; cannot put underscores in the 0x radix prefix"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x6"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Name:  "x_52"
Operator:  ";"
Text:  "            "
Comment.Single:  "// Invalid; cannot put underscores at the beginning of a number"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x7"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0x5_2"
Operator:  ";"
Text:  "            "
Comment.Single:  "// OK (hexadecimal literal)"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x8"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0x52"
Name:  "_"
Operator:  ";"
Text:  "            "
Comment.Single:  "// Invalid; cannot put underscores at the end of a number"
Text:  "<newline><newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x9"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0_52"
Operator:  ";"
Text:  "             "
Comment.Single:  "// OK (octal literal)"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x10"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Oct:  "05_2"
Operator:  ";"
Text:  "            "
Comment.Single:  "// OK (octal literal)"
Text:  "<newline>"
Keyword.Type:  "int"
Text:  " "
Name:  "x11"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Oct:  "052"
Name:  "_"
Operator:  ";"
Text:  "            "
Comment.Single:  "// Invalid; cannot put underscores at the end of a number"
Text:  "<newline><newline><newline>"
Comment.Single:  "////// test.java /////////"
Text:  "<newline>"
Comment.Multiline:  "/*<newline> * Created on 13-Mar-2004<newline> * Created by James Yeh<newline> * Copyright (C) 2004, 2005, 2006 Aelitis, All Rights Reserved.<newline> *<newline> * This program is free software; you can redistribute it and/or<newline> * modify it under the terms of the GNU General Public License<newline> * as published by the Free Software Foundation; either version 2<newline> * of the License, or (at your option) any later version.<newline> * This program is distributed in the hope that it will be useful,<newline> * but WITHOUT ANY WARRANTY; without even the implied warranty of<newline> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<newline> * GNU General Public License for more details.<newline> * You should have received a copy of the GNU General Public License<newline> * along with this program; if not, write to the Free Software<newline> * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.<newline> * <newline> * AELITIS, SAS au capital de 46,603.30 euros<newline> * 8 Allee Lenotre, La Grille Royale, 78600 Le Mesnil le Roi, France.<newline> *<newline> */"
Text:  "<newline><newline>"
Keyword.Namespace:  "package"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.platform.macosx"
Operator:  ";"
Text:  "<newline><newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.core3.logging.*"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.core3.util.AEMonitor"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.core3.util.Debug"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.core3.util.SystemProperties"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.platform.PlatformManager"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.platform.PlatformManagerCapabilities"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.platform.PlatformManagerListener"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.platform.macosx.access.jnilib.OSXAccess"
Operator:  ";"
Text:  "<newline><newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "org.gudy.azureus2.plugins.platform.PlatformManagerException"
Operator:  ";"
Text:  "<newline><newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "java.io.BufferedReader"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "java.io.File"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "java.io.IOException"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "java.io.InputStreamReader"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "java.text.MessageFormat"
Operator:  ";"
Text:  "<newline>"
Keyword.Namespace:  "import"
Text:  " "
Name.Namespace:  "java.util.HashSet"
Operator:  ";"
Text:  "<newline><newline><newline>"
Comment.Multiline:  "/**<newline> * Performs platform-specific operations with Mac OS X<newline> *<newline> * @author James Yeh<newline> * @version 1.0 Initial Version<newline> * @see PlatformManager<newline> */"
Text:  "<newline>"
Keyword.Declaration:  "public"
Text:  " "
Keyword.Declaration:  "class"
Text:  " "
Name.Class:  "PlatformManagerImpl"
Text:  " "
Keyword.Declaration:  "implements"
Text:  " "
Name.Class:  "PlatformManager"
Text:  "<newline>"
Operator:  "{"
Text:  "<newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "LogIDs"
Text:  " "
Name.Constant:  "LOGID"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "LogIDs"
Operator:  "."
Name.Attribute:  "CORE"
Operator:  ";"
Text:  "<newline><newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "PlatformManagerImpl"
Text:  " "
Name:  "singleton"
Operator:  ";"
Text:  "<newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "AEMonitor"
Text:  " "
Name:  "class_mon"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "AEMonitor"
Operator:  "("
Literal.String:  "\"PlatformManager\""
Operator:  ");"
Text:  "<newline><newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "String"
Text:  " "
Name.Constant:  "USERDATA_PATH"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "File"
Operator:  "("
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "getProperty"
Operator:  "("
Literal.String:  "\"user.home\""
Operator:  ")"
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\"/Library/Application Support/\""
Operator:  ")."
Name.Attribute:  "getPath"
Operator:  "();"
Text:  "<newline><newline>    "
Comment.Single:  "//T: PlatformManagerCapabilities"
Text:  "<newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "HashSet"
Text:  " "
Name:  "capabilitySet"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "HashSet"
Operator:  "();"
Text:  "<newline><newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "String"
Text:  " "
Name:  "exampleTextBlock"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Heredoc:  "\"\"\"<newline>        <soap-env:Envelope xmlns:soap-env=\"http://schemas.xmlsoap.org/soap/envelope/\"><newline>            <soap-env:Body><newline>                <p>Hello, world</p><newline>            </soap-env:Body><newline>        </soap-env:Envelope><newline>        \"\"\""
Operator:  ";"
Text:  "<newline><newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "String"
Text:  " "
Name:  "emptyTextBlock"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Heredoc:  "\"\"\"<newline>        \"\"\""
Operator:  ";"
Text:  "<newline><newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "String"
Text:  " "
Name:  "withoutFinalNewlineTextBlock"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Heredoc:  "\"\"\"<newline>        line 1<newline>        line 2\"\"\""
Operator:  ";"
Text:  "<newline><newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "String"
Text:  " "
Name:  "quotesEscapingTextBlock"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Heredoc:  "\"\"\"<newline>        String text = \\\"\"\"<newline>            A text block inside a text block<newline>        \\\"\"\";<newline>        \"\"\""
Operator:  ";"
Text:  "<newline><newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "String"
Text:  " "
Name:  "quotesEscaping2TextBlock"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Heredoc:  "\"\"\"<newline>        The empty string literal<newline>        is formed from \" characters<newline>        as follows: \\\"\\\"\"\"\""
Operator:  ";"
Text:  "<newline><newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Declaration:  "final"
Text:  " "
Name.Class:  "String"
Text:  " "
Name:  "quotesEscaping3TextBlock"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Heredoc:  "\"\"\"<newline>         1 \"<newline>         2 \"\"<newline>         3 \"\"\\\"<newline>         4 \"\"\\\"\"<newline>         5 \"\"\\\"\"\"<newline>         6 \"\"\\\"\"\"\\\"<newline>         7 \"\"\\\"\"\"\\\"\"<newline>         8 \"\"\\\"\"\"\\\"\"\"<newline>         9 \"\"\\\"\"\"\\\"\"\"\\\"<newline>        10 \"\"\\\"\"\"\\\"\"\"\\\"\"<newline>        11 \"\"\\\"\"\"\\\"\"\"\\\"\"\"<newline>        12 \"\"\\\"\"\"\\\"\"\"\\\"\"\"\\\"<newline>        \"\"\""
Operator:  ";"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Gets the platform manager singleton, which was already initialized<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "PlatformManagerImpl"
Text:  " "
Name.Function:  "getSingleton"
Operator:  "()"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name:  "singleton"
Operator:  ";"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Tries to enable cocoa-java access and instantiates the singleton<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "static"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Name:  "initializeSingleton"
Operator:  "();"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Instantiates the singleton<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "initializeSingleton"
Operator:  "()"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "try"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name:  "class_mon"
Operator:  "."
Name.Attribute:  "enter"
Operator:  "();"
Text:  "<newline>            "
Name:  "singleton"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "PlatformManagerImpl"
Operator:  "();"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "Throwable"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>        \t"
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Literal.String:  "\"Failed to initialize platform manager\""
Text:  "<newline>\t\t\t\t\t"
Operator:  "+"
Text:  " "
Literal.String:  "\" for Mac OS X\""
Operator:  ","
Text:  " "
Name:  "e"
Operator:  "));"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "finally"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name:  "class_mon"
Operator:  "."
Name.Attribute:  "exit"
Operator:  "();"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Creates a new PlatformManager and initializes its capabilities<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Name.Function:  "PlatformManagerImpl"
Operator:  "()"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "RecoverableFileDelete"
Operator:  ");"
Text:  "<newline>        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "ShowFileInBrowser"
Operator:  ");"
Text:  "<newline>        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "ShowPathInCommandLine"
Operator:  ");"
Text:  "<newline>        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "CreateCommandLineProcess"
Operator:  ");"
Text:  "<newline>        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "GetUserDataDirectory"
Operator:  ");"
Text:  "<newline>        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "UseNativeScripting"
Operator:  ");"
Text:  "<newline>        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "PlaySystemAlert"
Operator:  ");"
Text:  "<newline>        <newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name.Class:  "OSXAccess"
Operator:  "."
Name.Attribute:  "isLoaded"
Operator:  "())"
Text:  " "
Operator:  "{"
Text:  "<newline>\t        "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "add"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Operator:  "."
Name.Attribute:  "GetVersion"
Operator:  ");"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name.Function:  "getPlatformType"
Operator:  "()"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name.Constant:  "PT_MACOSX"
Operator:  ";"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Name.Class:  "String"
Text:  " "
Name.Function:  "getVersion"
Operator:  "()"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>    \t"
Keyword:  "if"
Text:  " "
Operator:  "(!"
Name.Class:  "OSXAccess"
Operator:  "."
Name.Attribute:  "isLoaded"
Operator:  "())"
Text:  " "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Unsupported capability called on platform manager\""
Operator:  ");"
Text:  "<newline>    \t"
Operator:  "}"
Text:  "<newline>    \t<newline>    \t"
Keyword:  "return"
Text:  " "
Name.Class:  "OSXAccess"
Operator:  "."
Name.Attribute:  "getVersion"
Operator:  "();"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     * @see org.gudy.azureus2.core3.util.SystemProperties#getUserPath()<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Name.Class:  "String"
Text:  " "
Name.Function:  "getUserDataDirectory"
Operator:  "()"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name.Constant:  "USERDATA_PATH"
Operator:  ";"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>\t"
Keyword.Declaration:  "public"
Text:  " "
Name.Class:  "File"
Text:  "<newline>\t"
Name.Function:  "getLocation"
Operator:  "("
Text:  "<newline>\t\t"
Keyword.Type:  "long"
Text:  "\t"
Name:  "location_id"
Text:  " "
Operator:  ")"
Text:  "<newline>\t<newline>\t\t"
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>\t"
Operator:  "{"
Text:  "<newline>\t\t"
Keyword:  "if"
Text:  " "
Operator:  "("
Text:  " "
Name:  "location_id"
Text:  " "
Operator:  "=="
Text:  " "
Name.Constant:  "LOC_USER_DATA"
Text:  " "
Operator:  "){"
Text:  "<newline>\t\t\t<newline>\t\t\t"
Keyword:  "return"
Operator:  "("
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "File"
Operator:  "("
Text:  " "
Name.Constant:  "USERDATA_PATH"
Text:  " "
Operator:  "));"
Text:  "<newline>\t\t"
Operator:  "}"
Text:  "<newline>\t\t<newline>\t\t"
Keyword:  "return"
Operator:  "("
Text:  " "
Keyword.Constant:  "null"
Text:  " "
Operator:  ");"
Text:  "<newline>\t"
Operator:  "}"
Text:  "<newline>    "
Comment.Multiline:  "/**<newline>     * Not implemented; returns True<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "boolean"
Text:  " "
Name.Function:  "isApplicationRegistered"
Operator:  "()"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Keyword.Constant:  "true"
Operator:  ";"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    <newline>\t"
Keyword.Declaration:  "public"
Text:  " "
Name.Class:  "String"
Text:  "<newline>\t"
Name.Function:  "getApplicationCommandLine"
Operator:  "()"
Text:  "<newline>\t\t"
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>\t"
Operator:  "{"
Text:  "<newline>\t\t"
Keyword:  "try"
Operator:  "{"
Text:  "\t    <newline>\t\t\t"
Name.Class:  "String"
Text:  "\t"
Name:  "bundle_path"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "getProperty"
Operator:  "("
Literal.String:  "\"user.dir\""
Operator:  ")"
Text:  " "
Operator:  "+"
Name.Class:  "SystemProperties"
Operator:  "."
Name.Attribute:  "SEP"
Operator:  "+"
Text:  " "
Name.Class:  "SystemProperties"
Operator:  "."
Name.Attribute:  "getApplicationName"
Operator:  "()"
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\".app\""
Operator:  ";"
Text:  "<newline><newline>\t\t\t"
Name.Class:  "File"
Text:  " "
Name:  "osx_app_bundle"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "File"
Operator:  "("
Text:  " "
Name:  "bundle_path"
Text:  " "
Operator:  ")."
Name.Attribute:  "getAbsoluteFile"
Operator:  "();"
Text:  "<newline>\t\t\t<newline>\t\t\t"
Keyword:  "if"
Operator:  "("
Text:  " "
Operator:  "!"
Name:  "osx_app_bundle"
Operator:  "."
Name.Attribute:  "exists"
Operator:  "()"
Text:  " "
Operator:  ")"
Text:  " "
Operator:  "{"
Text:  "<newline>\t\t\t\t"
Name.Class:  "String"
Text:  " "
Name:  "msg"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"OSX app bundle not found: [\""
Text:  " "
Operator:  "+"
Name:  "osx_app_bundle"
Operator:  "."
Name.Attribute:  "toString"
Operator:  "()+"
Text:  " "
Literal.String:  "\"]\""
Operator:  ";"
Text:  "<newline>\t\t\t\t"
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "out"
Operator:  "."
Name.Attribute:  "println"
Operator:  "("
Text:  " "
Name:  "msg"
Text:  " "
Operator:  ");"
Text:  "<newline>\t\t\t\t"
Keyword:  "if"
Text:  " "
Operator:  "("
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "isEnabled"
Operator:  "())"
Text:  "<newline>\t\t\t\t\t"
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Name:  "msg"
Operator:  "));"
Text:  "\t\t<newline>\t\t\t\t"
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Text:  " "
Name:  "msg"
Text:  " "
Operator:  ");"
Text:  "<newline>\t\t\t"
Operator:  "}"
Text:  "<newline>\t\t\t<newline>\t\t\t"
Keyword:  "return"
Text:  " "
Literal.String:  "\"open -a \\\"\""
Text:  " "
Operator:  "+"
Name:  "osx_app_bundle"
Operator:  "."
Name.Attribute:  "toString"
Operator:  "()+"
Text:  " "
Literal.String:  "\"\\\"\""
Operator:  ";"
Text:  "<newline>\t\t\t"
Comment.Single:  "//return osx_app_bundle.toString() +\"/Contents/MacOS/JavaApplicationStub\";"
Text:  "<newline>\t\t\t<newline>\t\t"
Operator:  "}"
Text:  "<newline>\t\t"
Keyword:  "catch"
Operator:  "("
Text:  " "
Name.Class:  "Throwable"
Text:  " "
Name:  "t"
Text:  " "
Operator:  "){"
Text:  "\t<newline>\t\t\t"
Name:  "t"
Operator:  "."
Name.Attribute:  "printStackTrace"
Operator:  "();"
Text:  "<newline>\t\t\t"
Keyword:  "return"
Text:  " "
Keyword.Constant:  "null"
Operator:  ";"
Text:  "<newline>\t\t"
Operator:  "}"
Text:  "<newline>\t"
Operator:  "}"
Text:  "<newline>\t<newline>\t<newline>\t"
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "boolean"
Text:  "<newline>\t"
Name.Function:  "isAdditionalFileTypeRegistered"
Operator:  "("
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "name"
Operator:  ","
Text:  "\t\t\t\t"
Comment.Single:  "// e.g. \"BitTorrent\""
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "type"
Text:  " "
Operator:  ")"
Text:  "\t\t\t\t"
Comment.Single:  "// e.g. \".torrent\""
Text:  "<newline>\t<newline>\t\t"
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>\t"
Operator:  "{"
Text:  "<newline>\t    "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Unsupported capability called on platform manager\""
Operator:  ");"
Text:  "<newline>\t"
Operator:  "}"
Text:  "<newline>\t<newline>\t"
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  "<newline>\t"
Name.Function:  "unregisterAdditionalFileType"
Operator:  "("
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "name"
Operator:  ","
Text:  "\t\t\t\t"
Comment.Single:  "// e.g. \"BitTorrent\""
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "type"
Text:  " "
Operator:  ")"
Text:  "\t\t\t\t"
Comment.Single:  "// e.g. \".torrent\""
Text:  "<newline>\t\t<newline>\t\t"
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>\t"
Operator:  "{"
Text:  "<newline>\t\t"
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Unsupported capability called on platform manager\""
Operator:  ");"
Text:  "<newline>\t"
Operator:  "}"
Text:  "<newline>\t<newline>\t"
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  "<newline>\t"
Name.Function:  "registerAdditionalFileType"
Operator:  "("
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "name"
Operator:  ","
Text:  "\t\t\t\t"
Comment.Single:  "// e.g. \"BitTorrent\""
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "description"
Operator:  ","
Text:  "\t\t"
Comment.Single:  "// e.g. \"BitTorrent File\""
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "type"
Operator:  ","
Text:  "\t\t\t\t"
Comment.Single:  "// e.g. \".torrent\""
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t\t"
Name:  "content_type"
Text:  " "
Operator:  ")"
Text:  "\t\t"
Comment.Single:  "// e.g. \"application/x-bittorrent\""
Text:  "<newline>\t<newline>\t\t"
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>\t"
Operator:  "{"
Text:  "<newline>\t   "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Unsupported capability called on platform manager\""
Operator:  ");"
Text:  "<newline>\t"
Operator:  "}"
Text:  "<newline>\t<newline>    "
Comment.Multiline:  "/**<newline>     * Not implemented; does nothing<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "registerApplication"
Operator:  "()"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Comment.Single:  "// handled by LaunchServices and/0r user interaction"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "createProcess"
Operator:  "("
Name.Class:  "String"
Text:  " "
Name:  "cmd"
Operator:  ","
Text:  " "
Keyword.Type:  "boolean"
Text:  " "
Name:  "inheritsHandles"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "try"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name:  "performRuntimeExec"
Operator:  "("
Name:  "cmd"
Operator:  "."
Name.Attribute:  "split"
Operator:  "("
Literal.String:  "\" \""
Operator:  "));"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "Throwable"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Failed to create process\""
Operator:  ","
Text:  " "
Name:  "e"
Operator:  ");"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "performRecoverableFileDelete"
Operator:  "("
Name.Class:  "String"
Text:  " "
Name:  "path"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Name.Class:  "File"
Text:  " "
Name:  "file"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "File"
Operator:  "("
Name:  "path"
Operator:  ");"
Text:  "<newline>        "
Keyword:  "if"
Operator:  "(!"
Name:  "file"
Operator:  "."
Name.Attribute:  "exists"
Operator:  "())"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>\t        \t"
Keyword:  "if"
Text:  " "
Operator:  "("
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "isEnabled"
Operator:  "())"
Text:  "<newline>\t\t\t\t\t\t\t"
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Name.Class:  "LogEvent"
Operator:  "."
Name.Attribute:  "LT_WARNING"
Operator:  ","
Text:  " "
Literal.String:  "\"Cannot find \""
Text:  "<newline>\t\t\t\t\t\t\t\t\t"
Operator:  "+"
Text:  " "
Name:  "file"
Operator:  "."
Name.Attribute:  "getName"
Operator:  "()));"
Text:  "<newline>            "
Keyword:  "return"
Operator:  ";"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Keyword.Type:  "boolean"
Text:  " "
Name:  "useOSA"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "!"
Name.Class:  "NativeInvocationBridge"
Operator:  "."
Name.Attribute:  "sharedInstance"
Operator:  "()."
Name.Attribute:  "isEnabled"
Operator:  "()"
Text:  " "
Operator:  "||"
Text:  " "
Operator:  "!"
Name.Class:  "NativeInvocationBridge"
Operator:  "."
Name.Attribute:  "sharedInstance"
Operator:  "()."
Name.Attribute:  "performRecoverableFileDelete"
Operator:  "("
Name:  "file"
Operator:  ");"
Text:  "<newline><newline>        "
Keyword:  "if"
Operator:  "("
Name:  "useOSA"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Keyword:  "try"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Name.Class:  "StringBuffer"
Text:  " "
Name:  "sb"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "StringBuffer"
Operator:  "();"
Text:  "<newline>                "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"tell application \\\"\""
Operator:  ");"
Text:  "<newline>                "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"Finder\""
Operator:  ");"
Text:  "<newline>                "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"\\\" to move (posix file \\\"\""
Operator:  ");"
Text:  "<newline>                "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Name:  "path"
Operator:  ");"
Text:  "<newline>                "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"\\\" as alias) to the trash\""
Operator:  ");"
Text:  "<newline><newline>                "
Name:  "performOSAScript"
Operator:  "("
Name:  "sb"
Operator:  ");"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>            "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "Throwable"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Failed to move file\""
Operator:  ","
Text:  " "
Name:  "e"
Operator:  ");"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "boolean"
Text:  " "
Name.Function:  "hasCapability"
Operator:  "("
Name.Class:  "PlatformManagerCapabilities"
Text:  " "
Name:  "capability"
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name:  "capabilitySet"
Operator:  "."
Name.Attribute:  "contains"
Operator:  "("
Name:  "capability"
Operator:  ");"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "dispose"
Operator:  "()"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Name.Class:  "NativeInvocationBridge"
Operator:  "."
Name.Attribute:  "sharedInstance"
Operator:  "()."
Name.Attribute:  "dispose"
Operator:  "();"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "setTCPTOSEnabled"
Operator:  "("
Keyword.Type:  "boolean"
Text:  " "
Name:  "enabled"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Unsupported capability called on platform manager\""
Operator:  ");"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>\t"
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  "<newline>    "
Name.Function:  "copyFilePermissions"
Operator:  "("
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t"
Name:  "from_file_name"
Operator:  ","
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t"
Name:  "to_file_name"
Text:  " "
Operator:  ")"
Text:  "<newline>\t<newline>\t\t"
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>\t"
Operator:  "{"
Text:  "<newline>\t    "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Unsupported capability called on platform manager\""
Operator:  ");"
Text:  "\t\t<newline>\t"
Operator:  "}"
Text:  "<newline>\t<newline>    "
Comment.Multiline:  "/**<newline>     * {@inheritDoc}<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "showFile"
Operator:  "("
Name.Class:  "String"
Text:  " "
Name:  "path"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Name.Class:  "File"
Text:  " "
Name:  "file"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "File"
Operator:  "("
Name:  "path"
Operator:  ");"
Text:  "<newline>        "
Keyword:  "if"
Operator:  "(!"
Name:  "file"
Operator:  "."
Name.Attribute:  "exists"
Operator:  "())"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>        \t"
Keyword:  "if"
Text:  " "
Operator:  "("
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "isEnabled"
Operator:  "())"
Text:  "<newline>        \t\t"
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Name.Class:  "LogEvent"
Operator:  "."
Name.Attribute:  "LT_WARNING"
Operator:  ","
Text:  " "
Literal.String:  "\"Cannot find \""
Text:  "<newline>        \t\t\t\t"
Operator:  "+"
Text:  " "
Name:  "file"
Operator:  "."
Name.Attribute:  "getName"
Operator:  "()));"
Text:  "<newline>            "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"File not found\""
Operator:  ");"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Name:  "showInFinder"
Operator:  "("
Name:  "file"
Operator:  ");"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Single:  "// Public utility methods not shared across the interface"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Plays the system alert (the jingle is specified by the user in System Preferences)<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "playSystemAlert"
Operator:  "()"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "try"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name:  "performRuntimeExec"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "String"
Operator:  "[]{"
Literal.String:  "\"beep\""
Operator:  "});"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "IOException"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>        \t"
Keyword:  "if"
Text:  " "
Operator:  "("
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "isEnabled"
Operator:  "())"
Text:  "<newline>        \t\t"
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Name.Class:  "LogEvent"
Operator:  "."
Name.Attribute:  "LT_WARNING"
Operator:  ","
Text:  "<newline>\t\t\t\t\t\t"
Literal.String:  "\"Cannot play system alert\""
Operator:  "));"
Text:  "<newline>        \t"
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Literal.String:  "\"\""
Operator:  ","
Text:  " "
Name:  "e"
Operator:  "));"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * <p>Shows the given file or directory in Finder</p><newline>     * @param path Absolute path to the file or directory<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "showInFinder"
Operator:  "("
Name.Class:  "File"
Text:  " "
Name:  "path"
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword.Type:  "boolean"
Text:  " "
Name:  "useOSA"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "!"
Name.Class:  "NativeInvocationBridge"
Operator:  "."
Name.Attribute:  "sharedInstance"
Operator:  "()."
Name.Attribute:  "isEnabled"
Operator:  "()"
Text:  " "
Operator:  "||"
Text:  " "
Operator:  "!"
Name.Class:  "NativeInvocationBridge"
Operator:  "."
Name.Attribute:  "sharedInstance"
Operator:  "()."
Name.Attribute:  "showInFinder"
Operator:  "("
Name:  "path"
Operator:  ");"
Text:  "<newline><newline>        "
Keyword:  "if"
Operator:  "("
Name:  "useOSA"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "StringBuffer"
Text:  " "
Name:  "sb"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "StringBuffer"
Operator:  "();"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"tell application \\\"\""
Operator:  ");"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Name:  "getFileBrowserName"
Operator:  "());"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"\\\" to reveal (posix file \\\"\""
Operator:  ");"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Name:  "path"
Operator:  ");"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"\\\" as alias)\""
Operator:  ");"
Text:  "<newline><newline>            "
Keyword:  "try"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Name:  "performOSAScript"
Operator:  "("
Name:  "sb"
Operator:  ");"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>            "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "IOException"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogAlert"
Operator:  "("
Name.Class:  "LogAlert"
Operator:  "."
Name.Attribute:  "UNREPEATABLE"
Operator:  ","
Text:  " "
Name.Class:  "LogAlert"
Operator:  "."
Name.Attribute:  "AT_ERROR"
Operator:  ","
Text:  " "
Name:  "e"
Text:  "<newline>\t\t\t\t\t\t"
Operator:  "."
Name.Attribute:  "getMessage"
Operator:  "()));"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * <p>Shows the given file or directory in Terminal by executing cd /absolute/path/to</p><newline>     * @param path Absolute path to the file or directory<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "showInTerminal"
Operator:  "("
Name.Class:  "String"
Text:  " "
Name:  "path"
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Name:  "showInTerminal"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "File"
Operator:  "("
Name:  "path"
Operator:  "));"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * <p>Shows the given file or directory in Terminal by executing cd /absolute/path/to</p><newline>     * @param path Absolute path to the file or directory<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "showInTerminal"
Operator:  "("
Name.Class:  "File"
Text:  " "
Name:  "path"
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name:  "path"
Operator:  "."
Name.Attribute:  "isFile"
Operator:  "())"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name:  "path"
Text:  " "
Operator:  "="
Text:  " "
Name:  "path"
Operator:  "."
Name.Attribute:  "getParentFile"
Operator:  "();"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name:  "path"
Text:  " "
Operator:  "!="
Text:  " "
Keyword.Constant:  "null"
Text:  " "
Operator:  "&&"
Text:  " "
Name:  "path"
Operator:  "."
Name.Attribute:  "isDirectory"
Operator:  "())"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "StringBuffer"
Text:  " "
Name:  "sb"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "StringBuffer"
Operator:  "();"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"tell application \\\"\""
Operator:  ");"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"Terminal\""
Operator:  ");"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"\\\" to do script \\\"cd \""
Operator:  ");"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Name:  "path"
Operator:  "."
Name.Attribute:  "getAbsolutePath"
Operator:  "()."
Name.Attribute:  "replaceAll"
Operator:  "("
Literal.String:  "\" \""
Operator:  ","
Text:  " "
Literal.String:  "\"\\\\ \""
Operator:  "));"
Text:  "<newline>            "
Name:  "sb"
Operator:  "."
Name.Attribute:  "append"
Operator:  "("
Literal.String:  "\"\\\"\""
Operator:  ");"
Text:  "<newline><newline>            "
Keyword:  "try"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Name:  "performOSAScript"
Operator:  "("
Name:  "sb"
Operator:  ");"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>            "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "IOException"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogAlert"
Operator:  "("
Name.Class:  "LogAlert"
Operator:  "."
Name.Attribute:  "UNREPEATABLE"
Operator:  ","
Text:  " "
Name.Class:  "LogAlert"
Operator:  "."
Name.Attribute:  "AT_ERROR"
Operator:  ","
Text:  " "
Name:  "e"
Text:  "<newline>\t\t\t\t\t\t"
Operator:  "."
Name.Attribute:  "getMessage"
Operator:  "()));"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "else"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>        \t"
Keyword:  "if"
Text:  " "
Operator:  "("
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "isEnabled"
Operator:  "())"
Text:  "<newline>        \t\t"
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Name.Class:  "LogEvent"
Operator:  "."
Name.Attribute:  "LT_WARNING"
Operator:  ","
Text:  " "
Literal.String:  "\"Cannot find \""
Text:  "<newline>        \t\t\t\t"
Operator:  "+"
Text:  " "
Name:  "path"
Operator:  "."
Name.Attribute:  "getName"
Operator:  "()));"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Single:  "// Internal utility methods"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Compiles a new AppleScript instance and runs it<newline>     * @param cmd AppleScript command to execute; do not surround command with extra quotation marks<newline>     * @return Output of the script<newline>     * @throws IOException If the script failed to execute<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "String"
Text:  " "
Name.Function:  "performOSAScript"
Operator:  "("
Name.Class:  "CharSequence"
Text:  " "
Name:  "cmd"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "IOException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name.Function:  "performOSAScript"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "CharSequence"
Operator:  "[]{"
Name:  "cmd"
Operator:  "});"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Compiles a new AppleScript instance and runs it<newline>     * @param cmds AppleScript Sequence of commands to execute; do not surround command with extra quotation marks<newline>     * @return Output of the script<newline>     * @throws IOException If the script failed to execute<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "String"
Text:  " "
Name.Function:  "performOSAScript"
Operator:  "("
Name.Class:  "CharSequence"
Operator:  "[]"
Text:  " "
Name:  "cmds"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "IOException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword.Type:  "long"
Text:  " "
Name:  "start"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "currentTimeMillis"
Operator:  "();"
Text:  "<newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"Executing OSAScript: \""
Operator:  ");"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Operator:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Operator:  ";"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "cmds"
Operator:  "."
Name.Attribute:  "length"
Operator:  ";"
Text:  " "
Name:  "i"
Operator:  "++)"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"\\t\""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "cmds"
Operator:  "["
Name:  "i"
Operator:  "]);"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Name.Class:  "String"
Operator:  "[]"
Text:  " "
Name:  "cmdargs"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "String"
Operator:  "["
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "cmds"
Operator:  "."
Name.Attribute:  "length"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Operator:  "];"
Text:  "<newline>        "
Name:  "cmdargs"
Operator:  "["
Literal.Number.Integer:  "0"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"osascript\""
Operator:  ";"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Operator:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Operator:  ";"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "cmds"
Operator:  "."
Name.Attribute:  "length"
Operator:  ";"
Text:  " "
Name:  "i"
Operator:  "++)"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name:  "cmdargs"
Operator:  "["
Name:  "i"
Text:  " "
Operator:  "*"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"-e\""
Operator:  ";"
Text:  "<newline>            "
Name:  "cmdargs"
Operator:  "["
Name:  "i"
Text:  " "
Operator:  "*"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "2"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "String"
Operator:  "."
Name.Attribute:  "valueOf"
Operator:  "("
Name:  "cmds"
Operator:  "["
Name:  "i"
Operator:  "]);"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Name.Class:  "Process"
Text:  " "
Name:  "osaProcess"
Text:  " "
Operator:  "="
Text:  " "
Name:  "performRuntimeExec"
Operator:  "("
Name:  "cmdargs"
Operator:  ");"
Text:  "<newline>        "
Name.Class:  "BufferedReader"
Text:  " "
Name:  "reader"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "BufferedReader"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "InputStreamReader"
Operator:  "("
Name:  "osaProcess"
Operator:  "."
Name.Attribute:  "getInputStream"
Operator:  "()));"
Text:  "<newline>        "
Name.Class:  "String"
Text:  " "
Name:  "line"
Text:  " "
Operator:  "="
Text:  " "
Name:  "reader"
Operator:  "."
Name.Attribute:  "readLine"
Operator:  "();"
Text:  "<newline>        "
Name:  "reader"
Operator:  "."
Name.Attribute:  "close"
Operator:  "();"
Text:  "<newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"OSAScript Output: \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "line"
Operator:  ");"
Text:  "<newline><newline>        "
Name:  "reader"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "BufferedReader"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "InputStreamReader"
Operator:  "("
Name:  "osaProcess"
Operator:  "."
Name.Attribute:  "getErrorStream"
Operator:  "()));"
Text:  "<newline>        "
Name.Class:  "String"
Text:  " "
Name:  "errorMsg"
Text:  " "
Operator:  "="
Text:  " "
Name:  "reader"
Operator:  "."
Name.Attribute:  "readLine"
Operator:  "();"
Text:  "<newline>        "
Name:  "reader"
Operator:  "."
Name.Attribute:  "close"
Operator:  "();"
Text:  "<newline><newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"OSAScript Error (if any): \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "errorMsg"
Operator:  ");"
Text:  "<newline><newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Name.Class:  "MessageFormat"
Operator:  "."
Name.Attribute:  "format"
Operator:  "("
Literal.String:  "\"OSAScript execution ended ({0}ms)\""
Operator:  ","
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "Object"
Operator:  "[]{"
Name.Class:  "String"
Operator:  "."
Name.Attribute:  "valueOf"
Operator:  "("
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "currentTimeMillis"
Operator:  "()"
Text:  " "
Operator:  "-"
Text:  " "
Name:  "start"
Operator:  ")}));"
Text:  "<newline><newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name:  "errorMsg"
Text:  " "
Operator:  "!="
Text:  " "
Keyword.Constant:  "null"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "IOException"
Operator:  "("
Name:  "errorMsg"
Operator:  ");"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Keyword:  "return"
Text:  " "
Name:  "line"
Operator:  ";"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Compiles a new AppleScript instance and runs it<newline>     * @param script AppleScript file (.scpt) to execute<newline>     * @return Output of the script<newline>     * @throws IOException If the script failed to execute<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "String"
Text:  " "
Name.Function:  "performOSAScript"
Operator:  "("
Name.Class:  "File"
Text:  " "
Name:  "script"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "IOException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword.Type:  "long"
Text:  " "
Name:  "start"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "currentTimeMillis"
Operator:  "();"
Text:  "<newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"Executing OSAScript from file: \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "script"
Operator:  "."
Name.Attribute:  "getPath"
Operator:  "());"
Text:  "<newline><newline>        "
Name.Class:  "Process"
Text:  " "
Name:  "osaProcess"
Text:  " "
Operator:  "="
Text:  " "
Name:  "performRuntimeExec"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "String"
Operator:  "[]{"
Literal.String:  "\"osascript\""
Operator:  ","
Text:  " "
Name:  "script"
Operator:  "."
Name.Attribute:  "getPath"
Operator:  "()});"
Text:  "<newline>        "
Name.Class:  "BufferedReader"
Text:  " "
Name:  "reader"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "BufferedReader"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "InputStreamReader"
Operator:  "("
Name:  "osaProcess"
Operator:  "."
Name.Attribute:  "getInputStream"
Operator:  "()));"
Text:  "<newline>        "
Name.Class:  "String"
Text:  " "
Name:  "line"
Text:  " "
Operator:  "="
Text:  " "
Name:  "reader"
Operator:  "."
Name.Attribute:  "readLine"
Operator:  "();"
Text:  "<newline>        "
Name:  "reader"
Operator:  "."
Name.Attribute:  "close"
Operator:  "();"
Text:  "<newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"OSAScript Output: \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "line"
Operator:  ");"
Text:  "<newline><newline>        "
Name:  "reader"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "BufferedReader"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "InputStreamReader"
Operator:  "("
Name:  "osaProcess"
Operator:  "."
Name.Attribute:  "getErrorStream"
Operator:  "()));"
Text:  "<newline>        "
Name.Class:  "String"
Text:  " "
Name:  "errorMsg"
Text:  " "
Operator:  "="
Text:  " "
Name:  "reader"
Operator:  "."
Name.Attribute:  "readLine"
Operator:  "();"
Text:  "<newline>        "
Name:  "reader"
Operator:  "."
Name.Attribute:  "close"
Operator:  "();"
Text:  "<newline><newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"OSAScript Error (if any): \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "errorMsg"
Operator:  ");"
Text:  "<newline><newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Name.Class:  "MessageFormat"
Operator:  "."
Name.Attribute:  "format"
Operator:  "("
Literal.String:  "\"OSAScript execution ended ({0}ms)\""
Operator:  ","
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "Object"
Operator:  "[]{"
Name.Class:  "String"
Operator:  "."
Name.Attribute:  "valueOf"
Operator:  "("
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "currentTimeMillis"
Operator:  "()"
Text:  " "
Operator:  "-"
Text:  " "
Name:  "start"
Operator:  ")}));"
Text:  "<newline><newline>        "
Keyword:  "if"
Text:  " "
Operator:  "("
Name:  "errorMsg"
Text:  " "
Operator:  "!="
Text:  " "
Keyword.Constant:  "null"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "IOException"
Operator:  "("
Name:  "errorMsg"
Operator:  ");"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Keyword:  "return"
Text:  " "
Name:  "line"
Operator:  ";"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Compiles a new AppleScript instance to the specified location<newline>     * @param cmd         Command to compile; do not surround command with extra quotation marks<newline>     * @param destination Destination location of the AppleScript file<newline>     * @return True if compiled successfully<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Type:  "boolean"
Text:  " "
Name.Function:  "compileOSAScript"
Operator:  "("
Name.Class:  "CharSequence"
Text:  " "
Name:  "cmd"
Operator:  ","
Text:  " "
Name.Class:  "File"
Text:  " "
Name:  "destination"
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name.Function:  "compileOSAScript"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "CharSequence"
Operator:  "[]{"
Name:  "cmd"
Operator:  "},"
Text:  " "
Name:  "destination"
Operator:  ");"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * Compiles a new AppleScript instance to the specified location<newline>     * @param cmds Sequence of commands to compile; do not surround command with extra quotation marks<newline>     * @param destination Destination location of the AppleScript file<newline>     * @return True if compiled successfully<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Keyword.Type:  "boolean"
Text:  " "
Name.Function:  "compileOSAScript"
Operator:  "("
Name.Class:  "CharSequence"
Operator:  "[]"
Text:  " "
Name:  "cmds"
Operator:  ","
Text:  " "
Name.Class:  "File"
Text:  " "
Name:  "destination"
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword.Type:  "long"
Text:  " "
Name:  "start"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "currentTimeMillis"
Operator:  "();"
Text:  "<newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"Compiling OSAScript: \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "destination"
Operator:  "."
Name.Attribute:  "getPath"
Operator:  "());"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Operator:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Operator:  ";"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "cmds"
Operator:  "."
Name.Attribute:  "length"
Operator:  ";"
Text:  " "
Name:  "i"
Operator:  "++)"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"\\t\""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "cmds"
Operator:  "["
Name:  "i"
Operator:  "]);"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Name.Class:  "String"
Operator:  "[]"
Text:  " "
Name:  "cmdargs"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "String"
Operator:  "["
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "cmds"
Operator:  "."
Name.Attribute:  "length"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "3"
Operator:  "];"
Text:  "<newline>        "
Name:  "cmdargs"
Operator:  "["
Literal.Number.Integer:  "0"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"osacompile\""
Operator:  ";"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Operator:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Operator:  ";"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "cmds"
Operator:  "."
Name.Attribute:  "length"
Operator:  ";"
Text:  " "
Name:  "i"
Operator:  "++)"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name:  "cmdargs"
Operator:  "["
Name:  "i"
Text:  " "
Operator:  "*"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"-e\""
Operator:  ";"
Text:  "<newline>            "
Name:  "cmdargs"
Operator:  "["
Name:  "i"
Text:  " "
Operator:  "*"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "2"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "String"
Operator:  "."
Name.Attribute:  "valueOf"
Operator:  "("
Name:  "cmds"
Operator:  "["
Name:  "i"
Operator:  "]);"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Name:  "cmdargs"
Operator:  "["
Name:  "cmdargs"
Operator:  "."
Name.Attribute:  "length"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "2"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"-o\""
Operator:  ";"
Text:  "<newline>        "
Name:  "cmdargs"
Operator:  "["
Name:  "cmdargs"
Operator:  "."
Name.Attribute:  "length"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Operator:  "]"
Text:  " "
Operator:  "="
Text:  " "
Name:  "destination"
Operator:  "."
Name.Attribute:  "getPath"
Operator:  "();"
Text:  "<newline><newline>        "
Name.Class:  "String"
Text:  " "
Name:  "errorMsg"
Operator:  ";"
Text:  "<newline>        "
Keyword:  "try"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "Process"
Text:  " "
Name:  "osaProcess"
Text:  " "
Operator:  "="
Text:  " "
Name:  "performRuntimeExec"
Operator:  "("
Name:  "cmdargs"
Operator:  ");"
Text:  "<newline><newline>            "
Name.Class:  "BufferedReader"
Text:  " "
Name:  "reader"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "BufferedReader"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "InputStreamReader"
Operator:  "("
Name:  "osaProcess"
Operator:  "."
Name.Attribute:  "getErrorStream"
Operator:  "()));"
Text:  "<newline>            "
Name:  "errorMsg"
Text:  " "
Operator:  "="
Text:  " "
Name:  "reader"
Operator:  "."
Name.Attribute:  "readLine"
Operator:  "();"
Text:  "<newline>            "
Name:  "reader"
Operator:  "."
Name.Attribute:  "close"
Operator:  "();"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "IOException"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"OSACompile Execution Failed: \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "e"
Operator:  "."
Name.Attribute:  "getMessage"
Operator:  "());"
Text:  "<newline>            "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "printStackTrace"
Operator:  "("
Name:  "e"
Operator:  ");"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Keyword.Constant:  "false"
Operator:  ";"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline><newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"OSACompile Error (if any): \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "errorMsg"
Operator:  ");"
Text:  "<newline><newline>        "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Name.Class:  "MessageFormat"
Operator:  "."
Name.Attribute:  "format"
Operator:  "("
Literal.String:  "\"OSACompile execution ended ({0}ms)\""
Operator:  ","
Text:  " "
Keyword:  "new"
Text:  " "
Name.Class:  "Object"
Operator:  "[]{"
Name.Class:  "String"
Operator:  "."
Name.Attribute:  "valueOf"
Operator:  "("
Name.Class:  "System"
Operator:  "."
Name.Attribute:  "currentTimeMillis"
Operator:  "()"
Text:  " "
Operator:  "-"
Text:  " "
Name:  "start"
Operator:  ")}));"
Text:  "<newline><newline>        "
Keyword:  "return"
Text:  " "
Operator:  "("
Name:  "errorMsg"
Text:  " "
Operator:  "=="
Text:  " "
Keyword.Constant:  "null"
Operator:  ");"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * @see Runtime#exec(String[])<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "protected"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "Process"
Text:  " "
Name.Function:  "performRuntimeExec"
Operator:  "("
Name.Class:  "String"
Operator:  "[]"
Text:  " "
Name:  "cmdargs"
Operator:  ")"
Text:  " "
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "IOException"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "try"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Keyword:  "return"
Text:  " "
Name.Class:  "Runtime"
Operator:  "."
Name.Attribute:  "getRuntime"
Operator:  "()."
Name.Attribute:  "exec"
Operator:  "("
Name:  "cmdargs"
Operator:  ");"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "IOException"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogAlert"
Operator:  "("
Name.Class:  "LogAlert"
Operator:  "."
Name.Attribute:  "UNREPEATABLE"
Operator:  ","
Text:  " "
Name:  "e"
Operator:  "."
Name.Attribute:  "getMessage"
Operator:  "(),"
Text:  " "
Name:  "e"
Operator:  "));"
Text:  "<newline>            "
Keyword:  "throw"
Text:  " "
Name:  "e"
Operator:  ";"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline><newline>    "
Comment.Multiline:  "/**<newline>     * <p>Gets the preferred file browser name</p><newline>     * <p>Currently supported browsers are Path Finder and Finder. If Path Finder is currently running<newline>     * (not just installed), then \"Path Finder is returned; else, \"Finder\" is returned.</p><newline>     * @return \"Path Finder\" if it is currently running; else \"Finder\"<newline>     */"
Text:  "<newline>    "
Keyword.Declaration:  "private"
Text:  " "
Keyword.Declaration:  "static"
Text:  " "
Name.Class:  "String"
Text:  " "
Name.Function:  "getFileBrowserName"
Operator:  "()"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>        "
Keyword:  "try"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Comment.Single:  "// slowwwwwwww"
Text:  "<newline>            "
Keyword:  "if"
Text:  " "
Operator:  "("
Literal.String:  "\"true\""
Operator:  "."
Name.Attribute:  "equalsIgnoreCase"
Operator:  "("
Name:  "performOSAScript"
Operator:  "("
Literal.String:  "\"tell application \\\"System Events\\\" to exists process \\\"Path Finder\\\"\""
Operator:  ")))"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "outNoStack"
Operator:  "("
Literal.String:  "\"Path Finder is running\""
Operator:  ");"
Text:  "<newline><newline>                "
Keyword:  "return"
Text:  " "
Literal.String:  "\"Path Finder\""
Operator:  ";"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>            "
Keyword:  "else"
Text:  "<newline>            "
Operator:  "{"
Text:  "<newline>                "
Keyword:  "return"
Text:  " "
Literal.String:  "\"Finder\""
Operator:  ";"
Text:  "<newline>            "
Operator:  "}"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>        "
Keyword:  "catch"
Text:  " "
Operator:  "("
Name.Class:  "IOException"
Text:  " "
Name:  "e"
Operator:  ")"
Text:  "<newline>        "
Operator:  "{"
Text:  "<newline>            "
Name.Class:  "Debug"
Operator:  "."
Name.Attribute:  "printStackTrace"
Operator:  "("
Name:  "e"
Operator:  ");"
Text:  "<newline>            "
Name.Class:  "Logger"
Operator:  "."
Name.Attribute:  "log"
Operator:  "("
Keyword:  "new"
Text:  " "
Name.Class:  "LogEvent"
Operator:  "("
Name.Constant:  "LOGID"
Operator:  ","
Text:  " "
Name:  "e"
Operator:  "."
Name.Attribute:  "getMessage"
Operator:  "(),"
Text:  " "
Name:  "e"
Operator:  "));"
Text:  "<newline><newline>            "
Keyword:  "return"
Text:  " "
Literal.String:  "\"Finder\""
Operator:  ";"
Text:  "<newline>        "
Operator:  "}"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline>    <newline>\t"
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "boolean"
Text:  "<newline>\t"
Name.Function:  "testNativeAvailability"
Operator:  "("
Text:  "<newline>\t\t"
Name.Class:  "String"
Text:  "\t"
Name:  "name"
Text:  " "
Operator:  ")"
Text:  "<newline>\t<newline>\t\t"
Keyword.Declaration:  "throws"
Text:  " "
Name.Class:  "PlatformManagerException"
Text:  "<newline>\t"
Operator:  "{"
Text:  "<newline>\t    "
Keyword:  "throw"
Text:  " "
Keyword:  "new"
Text:  " "
Name.Function:  "PlatformManagerException"
Operator:  "("
Literal.String:  "\"Unsupported capability called on platform manager\""
Operator:  ");"
Text:  "\t\t<newline>\t"
Operator:  "}"
Text:  "<newline>    <newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  "<newline>    "
Name.Function:  "addListener"
Operator:  "("
Text:  "<newline>    \t"
Name.Class:  "PlatformManagerListener"
Text:  "\t\t"
Name:  "listener"
Text:  " "
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline>    <newline>    "
Keyword.Declaration:  "public"
Text:  " "
Keyword.Type:  "void"
Text:  "<newline>    "
Name.Function:  "removeListener"
Operator:  "("
Text:  "<newline>    \t"
Name.Class:  "PlatformManagerListener"
Text:  "\t\t"
Name:  "listener"
Text:  " "
Operator:  ")"
Text:  "<newline>    "
Operator:  "{"
Text:  "<newline>    "
Operator:  "}"
Text:  "<newline>"
Operator:  "}"
Text:  "<newline><newline>"
Comment.Single:  "// Permit Unicode characters in identifiers"
Text:  "<newline>"
Name:  "getHauptadresse"
Operator:  "()."
Name.Attribute:  "setPLZ"
Operator:  "("
Literal.String:  "\"91126\""
Operator:  ");"
Text:  "<newline>"
Name:  "getHauptadresse"
Operator:  "()."
Name.Attribute:  "setStra\u00DFePostfach"
Operator:  "("
Literal.String:  "\"Am Hundsacker 6\""
Operator:  ");"
Text:  "<newline>"
