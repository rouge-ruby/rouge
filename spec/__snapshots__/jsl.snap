Comment.Single:  "// Single Line Comment"
Text.Whitespace:  "<newline>"
Name.Variable:  "dt "
Operator:  "="
Text.Whitespace:  " "
Keyword:  "open"
Punctuation:  "("
Text.Whitespace:  " "
Literal.String.Double:  "\"$sample_data\\big class.jmp\""
Text.Whitespace:  " "
Punctuation:  ");"
Text.Whitespace:  "<newline>"
Name.Variable:  "dt "
Operator:  "<<"
Text.Whitespace:  " "
Name.Function:  "Distribution"
Punctuation:  "("
Text.Whitespace:  " "
Keyword:  "Column"
Punctuation:  "("
Text.Whitespace:  " "
Punctuation:  ":"
Name.Variable:  "age "
Punctuation:  "),"
Text.Whitespace:  " "
Keyword:  "Histograms Only"
Punctuation:  "("
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  " "
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  ");"
Text.Whitespace:  "<newline>"
Comment.Multiline:  "/*<newline>    Multi-line comment<newline>*/"
Text.Whitespace:  "<newline>"
Comment.Multiline:  "/* Single line block comment */"
Text.Whitespace:  "<newline>"
Comment.Multiline:  "/*<newline>    Nested<newline>    /*<newline>        Comments<newline>    */<newline>    Work<newline>*/"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "escapeSequence "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"This is an "
Literal.String.Escape:  "\\!b"
Literal.String.Double:  " escaped sequence\""
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "escapeQuote "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"This is a "
Literal.String.Escape:  "\\!\""
Literal.String.Double:  " quotation mark\""
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "escapeStr "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\""
Literal.String.Escape:  "\\["
Literal.String.Double:  "This is \"\"\"\"\"\"\" an escaped string"
Literal.String.Escape:  "]\\"
Literal.String.Double:  "\""
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "list "
Operator:  "="
Text.Whitespace:  " "
Keyword:  "List"
Punctuation:  "("
Text.Whitespace:  " "
Literal.Number:  "1"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "3"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "5"
Text.Whitespace:  " "
Punctuation:  ");"
Text.Whitespace:  "<newline>"
Name.Variable:  "alsoAList "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "{"
Literal.Number:  "7"
Punctuation:  ","
Literal.Number:  "9"
Punctuation:  ","
Literal.Number:  "11"
Punctuation:  "};"
Text.Whitespace:  "<newline>"
Name.Variable:  "index "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "1"
Operator:  "::"
Literal.Number:  "10"
Operator:  "::"
Literal.Number:  "2"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "a name with spaces "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "5"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "\"a-name!with\\!\"special\\characters\"n"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "5"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Punctuation:  "::"
Name.Variable:  "globalVar "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "1"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "here"
Punctuation:  ":"
Name.Variable:  "scopedVar "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "2"
Punctuation:  ";"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "scientificNotation "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "5e9"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "decimal "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "1.234"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "missing "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "."
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "date "
Operator:  "="
Text.Whitespace:  " "
Literal.Date:  "01jan00"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Name.Variable:  "dateTime "
Operator:  "="
Text.Whitespace:  " "
Literal.Date:  "12dec1999:12:30:00.45"
Punctuation:  ";"
Text.Whitespace:  "<newline><newline>"
Keyword:  "New Window"
Punctuation:  "("
Text.Whitespace:  " "
Literal.String.Double:  "\"Rouge Test\""
Punctuation:  ","
Text.Whitespace:  "<newline>    "
Name.Variable:  "tb "
Operator:  "="
Text.Whitespace:  " "
Keyword:  "Text Box"
Punctuation:  "("
Text.Whitespace:  " "
Literal.String.Double:  "\"Syntax highlighting is great!\""
Text.Whitespace:  " "
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Punctuation:  ");"
Text.Whitespace:  "<newline><newline>"
Keyword:  "If"
Punctuation:  "("
Name.Variable:  "tb "
Operator:  "<<"
Text.Whitespace:  " "
Name.Function:  "Get Text "
Operator:  "!="
Text.Whitespace:  " "
Literal.String.Double:  "\"\""
Punctuation:  ","
Text.Whitespace:  " "
Literal.String.Double:  "\"I'm still formatted correctly!\""
Punctuation:  ");"
Text.Whitespace:  "<newline><newline>"
Keyword:  "New Namespace"
Punctuation:  "("
Literal.String.Double:  "\"rouge\""
Punctuation:  ");"
Text.Whitespace:  "<newline>"
Name.Variable:  "rouge"
Punctuation:  ":"
Name.Variable:  "scoped.func "
Operator:  "="
Text.Whitespace:  " "
Keyword:  "function"
Punctuation:  "({"
Name.Variable:  "x"
Punctuation:  ","
Text.Whitespace:  " "
Name.Variable:  "y"
Punctuation:  "},"
Text.Whitespace:  " "
Name.Variable:  "x "
Operator:  "+"
Text.Whitespace:  " "
Name.Variable:  "y"
Punctuation:  ");"
Text.Whitespace:  "<newline>"
Name.Variable:  "rouge"
Punctuation:  ":"
Keyword:  "scoped.func"
Punctuation:  "("
Literal.Number:  "1"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "2"
Punctuation:  ");"
Text.Whitespace:  "<newline>"
