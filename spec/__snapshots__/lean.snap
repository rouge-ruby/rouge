Keyword:  "import"
Text:  " "
Name:  "data"
Operator:  "."
Name:  "nat"
Operator:  "."
Name:  "basic"
Text:  "<newline><newline>"
Keyword:  "namespace"
Text:  " "
Name:  "sandbox"
Text:  "<newline><newline>"
Operator:  "@"
Text:  "["
Name:  "derive"
Text:  " "
Name:  "decidable_eq"
Text:  "]<newline>"
Keyword:  "inductive"
Text:  " "
Name:  "Nat"
Text:  "<newline>    "
Operator:  "|"
Text:  " "
Name:  "zero"
Text:  " : "
Name:  "Nat"
Text:  "<newline>    "
Operator:  "|"
Text:  " "
Name:  "succ"
Text:  " ("
Name:  "n"
Text:  " : "
Name:  "Nat"
Text:  ") : "
Name:  "Nat"
Text:  "<newline><newline>"
Keyword:  "open"
Text:  " "
Name:  "Nat"
Comment.Doc:  "<newline><newline>-- instance"
Text:  "<newline>"
Keyword:  "instance"
Text:  " : "
Name:  "has_zero"
Text:  " "
Name:  "Nat"
Text:  " := "
Operator:  "\u27E8"
Name:  "zero"
Operator:  "\u27E9"
Text:  "<newline><newline>"
Keyword:  "axiom"
Text:  " "
Name:  "zero_is_nat"
Text:  " : "
Name:  "zero"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name:  "add"
Text:  " : "
Name:  "Nat"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "Nat"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "Nat"
Text:  "<newline>"
Operator:  "|"
Text:  " "
Name:  "m"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " := "
Name:  "m"
Text:  "<newline>"
Operator:  "|"
Text:  " "
Name:  "m"
Text:  " ("
Name:  "succ"
Text:  " "
Name:  "n"
Text:  ") := "
Name:  "succ"
Text:  " ("
Name:  "add"
Text:  " "
Name:  "m"
Text:  " "
Name:  "n"
Text:  ")<newline><newline>"
Comment.Doc:  "-- Defines the + operator"
Text:  "<newline>"
Keyword:  "instance"
Text:  " : "
Name:  "has_add"
Text:  " "
Name:  "Nat"
Text:  " := "
Operator:  "\u27E8"
Name:  "add"
Operator:  "\u27E9"
Text:  "<newline><newline>"
Keyword:  "axiom"
Text:  " "
Name:  "add_zero"
Text:  " ("
Name:  "n"
Text:  " : "
Name:  "Nat"
Text:  ") : "
Name:  "n"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "="
Text:  " "
Name:  "n"
Text:  "<newline>"
Keyword:  "axiom"
Text:  " "
Name:  "add_succ"
Text:  " ("
Name:  "m"
Text:  " "
Name:  "n"
Text:  ": "
Name:  "Nat"
Text:  ") : "
Name:  "m"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "succ"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  " "
Name:  "succ"
Text:  " ("
Name:  "m"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "n"
Text:  ")<newline><newline>"
Keyword:  "lemma"
Text:  " "
Name:  "zero_add"
Text:  " ("
Name:  "n"
Text:  " : "
Name:  "Nat"
Text:  ") : "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  " "
Name:  "n"
Text:  " :=<newline>  "
Keyword:  "begin"
Text:  "<newline>  "
Name:  "induction"
Text:  " "
Name:  "n"
Text:  " "
Keyword:  "with"
Text:  " "
Name:  "d"
Text:  " "
Name:  "hd"
Text:  ",<newline><newline>  "
Comment.Doc:  "-- base"
Text:  "<newline>  "
Name:  "rw"
Text:  " "
Name:  "zero_is_nat"
Text:  ",<newline>  "
Name:  "rw"
Text:  " "
Name:  "add_zero"
Text:  ",<newline><newline>  "
Comment.Doc:  "-- inductive step"
Text:  "<newline>  "
Name:  "rw"
Text:  " "
Name:  "add_succ"
Text:  ",<newline>  "
Name:  "rw"
Text:  " "
Name:  "hd"
Text:  ",<newline>  "
Keyword:  "end"
Comment.Doc:  "<newline><newline>-- alternative to \u2192"
Text:  "<newline>"
Keyword:  "#check"
Text:  " "
Name:  "Nat"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "Nat"
Text:  "<newline><newline>"
Keyword:  "universe"
Text:  " "
Name:  "u"
Text:  "<newline><newline>"
Keyword:  "constant"
Text:  " "
Name:  "list"
Text:  "   : "
Keyword.Type:  "Type"
Text:  " "
Name:  "u"
Text:  " "
Operator:  "\u2192"
Text:  " "
Keyword.Type:  "Type"
Text:  " "
Name:  "u"
Text:  "<newline>"
Keyword:  "constant"
Text:  " "
Name:  "cons"
Text:  "   : "
Operator:  "\u03A0"
Text:  " \u03B1 : "
Keyword.Type:  "Type"
Text:  " "
Name:  "u"
Text:  ", \u03B1 "
Operator:  "\u2192"
Text:  " "
Name:  "list"
Text:  " \u03B1 "
Operator:  "\u2192"
Text:  " "
Name:  "list"
Text:  " \u03B1<newline><newline>"
Keyword:  "variable"
Text:  " \u03B1 : "
Keyword.Type:  "Type"
Text:  "<newline>"
Keyword:  "variable"
Text:  " \u03B2 : \u03B1 "
Operator:  "\u2192"
Text:  " "
Keyword.Type:  "Type"
Text:  "<newline>"
Keyword:  "variable"
Text:  " "
Name:  "a"
Text:  " : \u03B1<newline>"
Keyword:  "variable"
Text:  " "
Name:  "b"
Text:  " : \u03B2 "
Name:  "a"
Text:  "<newline><newline>"
Keyword:  "#check"
Text:  " "
Name:  "sigma"
Operator:  "."
Name:  "mk"
Text:  " "
Name:  "a"
Text:  " "
Name:  "b"
Comment.Doc:  "      -- \u03A3 (a : \u03B1), \u03B2 a"
Text:  "<newline>"
Keyword:  "#check"
Text:  " ("
Name:  "sigma"
Operator:  "."
Name:  "mk"
Text:  " "
Name:  "a"
Text:  " "
Name:  "b"
Text:  ")"
Operator:  ".1"
Comment.Doc:  "  -- \u03B1"
Text:  "<newline>"
Keyword:  "#check"
Text:  " ("
Name:  "sigma"
Operator:  "."
Name:  "mk"
Text:  " "
Name:  "a"
Text:  " "
Name:  "b"
Text:  ")"
Operator:  ".2"
Comment.Doc:  "  -- \u03B2 (sigma.fst (sigma.mk a b))<newline><newline>-- show ... from ..."
Text:  "<newline>"
Keyword:  "constants"
Text:  " "
Name:  "p"
Text:  " "
Name:  "q"
Text:  " : "
Keyword.Type:  "Prop"
Text:  "<newline><newline>"
Keyword:  "lemma"
Text:  " "
Name:  "t1"
Text:  " : "
Name:  "p"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "q"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "p"
Text:  " :=<newline>"
Keyword:  "assume"
Text:  " "
Name:  "hp"
Text:  " : "
Name:  "p"
Text:  ",<newline>"
Keyword:  "assume"
Text:  " "
Name:  "hq"
Text:  " : "
Name:  "q"
Text:  ",<newline>"
Keyword:  "show"
Text:  " "
Name:  "p"
Text:  ", "
Keyword:  "from"
Text:  " "
Name:  "hp"
Text:  "<newline><newline>"
Keyword:  "#check"
Text:  " "
Name:  "p"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "q"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "p"
Text:  " "
Operator:  "\u2227"
Text:  " "
Name:  "q"
Text:  "<newline>"
Keyword:  "#check"
Text:  " "
Operator:  "\u00AC"
Name:  "p"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "p"
Text:  " "
Operator:  "\u2194"
Text:  " "
Name:  "false"
Text:  "<newline>"
Keyword:  "#check"
Text:  " "
Name:  "p"
Text:  " "
Operator:  "\u2228"
Text:  " "
Name:  "q"
Text:  " "
Operator:  "\u2192"
Text:  " "
Name:  "q"
Text:  " "
Operator:  "\u2228"
Text:  " "
Name:  "p"
Text:  "<newline><newline>"
Keyword:  "#eval"
Text:  " "
Literal.String:  "\"String\""
Text:  "<newline>"
Keyword:  "#eval"
Text:  " "
Name:  "string"
Operator:  "."
Name:  "join"
Text:  " ["
Literal.String:  "\""
Literal.String.Escape:  "\\\""
Literal.String:  "Hello\""
Text:  ",  "
Literal.String:  "\""
Literal.String.Escape:  "<newline>"
Literal.String:  "\""
Text:  ", "
Literal.String:  "\"World"
Literal.String.Escape:  "\\\""
Literal.String:  "\""
Text:  "]<newline>"
Keyword:  "#eval"
Text:  " "
Literal.String:  "\""
Literal.String.Escape:  "\\xF0"
Literal.String:  "\""
Comment.Doc:  " -- \"\u00F0\"<newline><newline>--------------------------<newline>-- Calculational Proofs --<newline>--------------------------<newline><newline>import data.nat.basic"
Text:  "<newline><newline>"
Keyword:  "variables"
Text:  " ("
Name:  "a"
Text:  " "
Name:  "b"
Text:  " "
Name:  "c"
Text:  " "
Name:  "d"
Text:  " "
Name:  "e"
Text:  " : "
Operator:  "\u2115"
Text:  ")<newline>"
Keyword:  "variable"
Text:  " "
Name:  "h1"
Text:  " : "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Name:  "b"
Text:  "<newline>"
Keyword:  "variable"
Text:  " "
Name:  "h2"
Text:  " : "
Name:  "b"
Text:  " "
Operator:  "="
Text:  " "
Name:  "c"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>"
Keyword:  "variable"
Text:  " "
Name:  "h3"
Text:  " : "
Name:  "c"
Text:  " "
Operator:  "="
Text:  " "
Name:  "d"
Text:  "<newline>"
Keyword:  "variable"
Text:  " "
Name:  "h4"
Text:  " : "
Name:  "e"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "d"
Text:  "<newline><newline>"
Keyword:  "include"
Text:  " "
Name:  "h1"
Text:  " "
Name:  "h2"
Text:  " "
Name:  "h3"
Text:  " "
Name:  "h4"
Text:  "<newline>"
Keyword:  "theorem"
Text:  " "
Name:  "T"
Text:  " : "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Name:  "e"
Text:  " :=<newline>"
Keyword:  "calc"
Text:  "<newline>  "
Name:  "a"
Text:  "     "
Operator:  "="
Text:  " "
Name:  "d"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "  : "
Keyword:  "by"
Text:  " "
Name:  "rw"
Text:  " ["
Name:  "h1"
Text:  ", "
Name:  "h2"
Text:  ", "
Name:  "h3"
Text:  "]<newline>    "
Operator:  "..."
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "d"
Text:  "  : "
Keyword:  "by"
Text:  " "
Name:  "rw"
Text:  " "
Name:  "add_comm"
Text:  "<newline>    "
Operator:  "..."
Text:  " "
Operator:  "="
Text:  " "
Name:  "e"
Text:  "      : "
Keyword:  "by"
Text:  " "
Name:  "rw"
Text:  " "
Name:  "h4"
Text:  "<newline><newline>"
Keyword:  "end"
Text:  " "
Name:  "sandbox"
Comment.Doc:  "<newline><newline>--------------------------------<newline>-- The Existential Quantifier --<newline>--------------------------------<newline><newline>example : \u2203 x : \u2115, x > 0 :="
Text:  "<newline>"
Keyword:  "have"
Text:  " "
Name:  "h"
Text:  " : "
Literal.Number.Integer:  "1"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  ", "
Keyword:  "from"
Text:  " "
Name:  "zero_lt_succ"
Text:  " "
Literal.Number.Integer:  "0"
Text:  ",<newline>"
Name:  "exists"
Operator:  "."
Name:  "intro"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Name:  "h"
Text:  "<newline><newline>"
Keyword:  "notation"
Text:  " "
Operator:  "`"
Text:  "\u2039"
Operator:  "`"
Text:  " "
Name:  "p"
Text:  " "
Operator:  "`"
Text:  "\u203A"
Operator:  "`"
Text:  " := "
Keyword:  "show"
Text:  " "
Name:  "p"
Text:  ", "
Keyword:  "by"
Text:  " "
Name:  "assumption"
Text:  "<newline>"
