Comment.Single:  "; copied from http://llvm.org/docs/LangRef.html#module-structure"
Text:  "<newline><newline>"
Comment.Single:  "; Declare the string constant as a global constant."
Text:  "<newline>"
Name.Variable.Global:  "@.str"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "private"
Text:  " "
Keyword:  "unnamed_addr"
Text:  " "
Keyword:  "constant"
Text:  " "
Punctuation:  "["
Literal.Number:  "13"
Text:  " "
Punctuation:  "x"
Text:  " "
Keyword.Type:  "i8"
Punctuation:  "]"
Text:  " "
Literal.String:  "c\"hello world\\0A\\00\""
Text:  "<newline><newline>"
Comment.Single:  "; External declaration of the puts function"
Text:  "<newline>"
Keyword:  "declare"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable.Global:  "@puts"
Punctuation:  "("
Keyword.Type:  "i8"
Punctuation:  "*"
Text:  " "
Keyword:  "nocapture"
Punctuation:  ")"
Text:  " "
Keyword:  "nounwind"
Text:  "<newline><newline>"
Comment.Single:  "; Definition of main function"
Text:  "<newline>"
Keyword:  "define"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable.Global:  "@main"
Punctuation:  "()"
Text:  " "
Punctuation:  "{"
Text:  "   "
Comment.Single:  "; i32()*"
Text:  "<newline>  "
Comment.Single:  "; Convert [13 x i8]* to i8  *..."
Text:  "<newline>  "
Name.Variable:  "%cast210"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "getelementptr"
Text:  " "
Punctuation:  "["
Literal.Number:  "13"
Text:  " "
Punctuation:  "x"
Text:  " "
Keyword.Type:  "i8"
Punctuation:  "]*"
Text:  " "
Name.Variable.Global:  "@.str"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i64"
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i64"
Text:  " "
Literal.Number:  "0"
Text:  "<newline><newline>  "
Comment.Single:  "; Call puts function to write out the string to stdout."
Text:  "<newline>  "
Keyword:  "call"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable.Global:  "@puts"
Punctuation:  "("
Keyword.Type:  "i8"
Punctuation:  "*"
Text:  " "
Name.Variable:  "%cast210"
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "ret"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Literal.Number:  "0"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "; Named metadata"
Text:  "<newline>"
Name.Variable:  "!1"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword.Type:  "metadata"
Text:  " "
Punctuation:  "!{"
Keyword.Type:  "i32"
Text:  " "
Literal.Number:  "42"
Punctuation:  "}"
Text:  "<newline>"
Name.Variable:  "!foo"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "!{"
Name.Variable:  "!1"
Punctuation:  ","
Text:  " "
Keyword:  "null"
Punctuation:  "}"
Text:  "<newline><newline><newline>"
Comment.Single:  "; copied from http://llvm.org/docs/LangRef.html#poison-values"
Text:  "<newline><newline>"
Name.Label:  "entry:"
Text:  "<newline>  "
Name.Variable:  "%poison"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "sub"
Text:  " "
Keyword:  "nuw"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Text:  "           "
Comment.Single:  "; Results in a poison value."
Text:  "<newline>  "
Name.Variable:  "%still_poison"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "and"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable:  "%poison"
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Text:  "   "
Comment.Single:  "; 0, but also poison."
Text:  "<newline>  "
Name.Variable:  "%poison_yet_again"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "getelementptr"
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@h"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable:  "%still_poison"
Text:  "<newline>  "
Keyword:  "store"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable:  "%poison_yet_again"
Text:  "  "
Comment.Single:  "; memory at @h[0] is poisoned"
Text:  "<newline><newline>  "
Keyword:  "store"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable:  "%poison"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  "           "
Comment.Single:  "; Poison value stored to memory."
Text:  "<newline>  "
Name.Variable:  "%poison2"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "load"
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  "              "
Comment.Single:  "; Poison value loaded back from memory."
Text:  "<newline><newline>  "
Keyword:  "store"
Text:  " "
Keyword:  "volatile"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable:  "%poison"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  "  "
Comment.Single:  "; External observation; undefined behavior."
Text:  "<newline><newline>  "
Name.Variable:  "%narrowaddr"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "bitcast"
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  " "
Keyword:  "to"
Text:  " "
Keyword.Type:  "i16"
Punctuation:  "*"
Text:  "<newline>  "
Name.Variable:  "%wideaddr"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "bitcast"
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  " "
Keyword:  "to"
Text:  " "
Keyword.Type:  "i64"
Punctuation:  "*"
Text:  "<newline>  "
Name.Variable:  "%poison3"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "load"
Text:  " "
Keyword.Type:  "i16"
Punctuation:  "*"
Text:  " "
Name.Variable:  "%narrowaddr"
Text:  "     "
Comment.Single:  "; Returns a poison value."
Text:  "<newline>  "
Name.Variable:  "%poison4"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "load"
Text:  " "
Keyword.Type:  "i64"
Punctuation:  "*"
Text:  " "
Name.Variable:  "%wideaddr"
Text:  "       "
Comment.Single:  "; Returns a poison value."
Text:  "<newline><newline>  "
Name.Variable:  "%cmp"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "icmp"
Text:  " "
Keyword:  "slt"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Name.Variable:  "%poison"
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Text:  "       "
Comment.Single:  "; Returns a poison value."
Text:  "<newline>  "
Keyword:  "br"
Text:  " "
Keyword.Type:  "i1"
Text:  " "
Name.Variable:  "%cmp"
Punctuation:  ","
Text:  " "
Keyword.Type:  "label"
Text:  " "
Name.Variable:  "%true"
Punctuation:  ","
Text:  " "
Keyword.Type:  "label"
Text:  " "
Name.Variable:  "%end"
Text:  "  "
Comment.Single:  "; Branch to either destination."
Text:  "<newline><newline>"
Name.Label:  "true:"
Text:  "<newline>  "
Keyword:  "store"
Text:  " "
Keyword:  "volatile"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  "        "
Comment.Single:  "; This is control-dependent on %cmp, so"
Text:  "<newline>                                       "
Comment.Single:  "; it has undefined behavior."
Text:  "<newline>  "
Keyword:  "br"
Text:  " "
Keyword.Type:  "label"
Text:  " "
Name.Variable:  "%end"
Text:  "<newline><newline>"
Name.Label:  "end:"
Text:  "<newline>  "
Name.Variable:  "%p"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "phi"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Punctuation:  "["
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Name.Variable:  "%entry"
Text:  " "
Punctuation:  "],"
Text:  " "
Punctuation:  "["
Text:  " "
Literal.Number:  "1"
Punctuation:  ","
Text:  " "
Name.Variable:  "%true"
Text:  " "
Punctuation:  "]"
Text:  "<newline>                                       "
Comment.Single:  "; Both edges into this PHI are"
Text:  "<newline>                                       "
Comment.Single:  "; control-dependent on %cmp, so this"
Text:  "<newline>                                       "
Comment.Single:  "; always results in a poison value."
Text:  "<newline><newline>  "
Keyword:  "store"
Text:  " "
Keyword:  "volatile"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  "        "
Comment.Single:  "; This would depend on the store in %true"
Text:  "<newline>                                       "
Comment.Single:  "; if %cmp is true, or the store in %entry"
Text:  "<newline>                                       "
Comment.Single:  "; otherwise, so this is undefined behavior."
Text:  "<newline><newline>  "
Keyword:  "br"
Text:  " "
Keyword.Type:  "i1"
Text:  " "
Name.Variable:  "%cmp"
Punctuation:  ","
Text:  " "
Keyword.Type:  "label"
Text:  " "
Name.Variable:  "%second_true"
Punctuation:  ","
Text:  " "
Keyword.Type:  "label"
Text:  " "
Name.Variable:  "%second_end"
Text:  "<newline>                                       "
Comment.Single:  "; The same branch again, but this time the"
Text:  "<newline>                                       "
Comment.Single:  "; true block doesn't have side effects."
Text:  "<newline><newline>"
Name.Label:  "second_true:"
Text:  "<newline>  "
Comment.Single:  "; No side effects!"
Text:  "<newline>  "
Keyword:  "ret"
Text:  " "
Keyword.Type:  "void"
Text:  "<newline><newline>"
Name.Label:  "second_end:"
Text:  "<newline>  "
Keyword:  "store"
Text:  " "
Keyword:  "volatile"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable.Global:  "@g"
Text:  "        "
Comment.Single:  "; This time, the instruction always depends"
Text:  "<newline>                                       "
Comment.Single:  "; on the store in %end. Also, it is"
Text:  "<newline>                                       "
Comment.Single:  "; control-equivalent to %end, so this is"
Text:  "<newline>                                       "
Comment.Single:  "; well-defined (ignoring earlier undefined"
Text:  "<newline>                                       "
Comment.Single:  "; behavior in this example)."
Text:  "<newline><newline>"
Comment.Single:  "; copied from https://llvm.org/docs/LangRef.html#attribute-groups"
Text:  "<newline><newline>"
Comment.Single:  "; Target-independent attributes:"
Text:  "<newline>"
Keyword:  "attributes"
Text:  " "
Name.Variable.Global:  "#0"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Keyword:  "alwaysinline"
Text:  " "
Keyword:  "alignstack"
Punctuation:  "="
Literal.Number:  "4"
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "; Target-dependent attributes:"
Text:  "<newline>"
Keyword:  "attributes"
Text:  " "
Name.Variable.Global:  "#1"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Literal.String:  "\"no-sse\""
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "; Function @f has attributes: alwaysinline, alignstack=4, and \"no-sse\"."
Text:  "<newline>"
Keyword:  "define"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Variable.Global:  "@f"
Punctuation:  "()"
Text:  " "
Name.Variable.Global:  "#0"
Text:  " "
Name.Variable.Global:  "#1"
Text:  " "
Punctuation:  "{"
Text:  " "
Punctuation:  "..."
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Name.Variable:  "%1"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword:  "addrspacecast"
Text:  " "
Keyword.Type:  "i32"
Punctuation:  "*"
Text:  " "
Name.Variable:  "%a"
Text:  " "
Keyword:  "to"
Text:  " "
Keyword.Type:  "i32"
Text:  " "
Keyword:  "addrspace"
Punctuation:  "("
Literal.Number:  "1"
Punctuation:  ")*"
Text:  "<newline><newline>"
Keyword:  "source_filename"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"/path/to/source.c\""
Text:  "<newline>"
