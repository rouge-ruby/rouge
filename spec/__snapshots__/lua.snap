Comment.Preproc:  "#!/usr/local/bin/lua"
Text:  "<newline><newline>"
Comment.Multiline:  "--[[ Example code by Steve Donovan from luanova.org ]]"
Text:  "<newline><newline>"
Comment.Single:  "-- basic1.lua"
Text:  "<newline>"
Name.Builtin:  "require"
Literal.String.Double:  "\"orbit\""
Text:  "<newline><newline>"
Comment.Single:  "-- declaration"
Text:  "<newline>"
Name:  "module"
Punctuation:  "("
Literal.String.Double:  "\"basic1\""
Punctuation:  ","
Text:  " "
Name:  "package"
Punctuation:  "."
Name:  "seeall"
Punctuation:  ","
Text:  " "
Name:  "orbit"
Punctuation:  "."
Name:  "new"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- handler"
Text:  "<newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "index"
Punctuation:  "("
Name:  "web"
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "return"
Text:  " "
Name:  "render_index"
Punctuation:  "()"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Name:  "snowman"
Punctuation:  "("
Literal.String.Single:  "'\u2603'"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- dispatch"
Text:  "<newline>"
Name:  "basic1"
Punctuation:  ":"
Name:  "dispatch_get"
Punctuation:  "("
Name:  "index"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/\""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/index\""
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- render"
Text:  "<newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "render_index"
Punctuation:  "()"
Text:  "<newline>   "
Keyword:  "return"
Text:  " "
Literal.String:  "[[<newline>    <head></head><newline>    <html><newline>    <h2>Pretty Easy!</h2><newline>    </html><newline>    ]]"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Comment.Single:  "-- basic3.lua"
Text:  "<newline>"
Name.Builtin:  "require"
Literal.String.Double:  "\"orbit\""
Text:  "<newline><newline>"
Name:  "module"
Punctuation:  "("
Literal.String.Double:  "\"basic3\""
Punctuation:  ","
Text:  " "
Name:  "package"
Punctuation:  "."
Name:  "seeall"
Punctuation:  ","
Text:  " "
Name:  "orbit"
Punctuation:  "."
Name:  "new"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "basic3"
Punctuation:  ":"
Name:  "dispatch_get"
Punctuation:  "("
Keyword:  "function"
Punctuation:  "("
Name:  "web"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Declaration:  "local"
Text:  " "
Name:  "ls"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{}"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Name:  "k"
Punctuation:  ","
Name:  "v"
Text:  " "
Keyword:  "in"
Text:  " "
Name.Builtin:  "pairs"
Punctuation:  "("
Name:  "web"
Punctuation:  "."
Name:  "GET"
Punctuation:  ")"
Text:  " "
Keyword:  "do"
Text:  "<newline>        "
Name.Builtin:  "table.insert"
Punctuation:  "("
Name:  "ls"
Punctuation:  ",("
Literal.String.Single:  "'<li>%s = %s</li>'"
Punctuation:  "):"
Name:  "format"
Punctuation:  "("
Name:  "k"
Punctuation:  ","
Name:  "v"
Punctuation:  "))"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>    "
Name:  "ls"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "'<ul>'"
Operator:  ".."
Name.Builtin:  "table.concat"
Punctuation:  "("
Name:  "ls"
Punctuation:  ","
Literal.String.Single:  "'"
Literal.String.Escape:  "<newline>"
Literal.String.Single:  "'"
Punctuation:  ")"
Operator:  ".."
Literal.String.Single:  "'</ul>'"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Punctuation:  "("
Literal.String:  "[[<newline>    <html><head></head><body><newline>    Web Variables <br/><newline>    %s<newline>    </body></html><newline>    ]]"
Punctuation:  "):"
Name:  "format"
Punctuation:  "("
Name:  "ls"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "end"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/\""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/index\""
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "-- basic2.lua"
Text:  "<newline>"
Name.Builtin:  "require"
Literal.String.Double:  "\"orbit\""
Text:  "<newline><newline>"
Name:  "module"
Punctuation:  "("
Literal.String.Double:  "\"basic2\""
Punctuation:  ","
Text:  " "
Name:  "package"
Punctuation:  "."
Name:  "seeall"
Punctuation:  ","
Text:  " "
Name:  "orbit"
Punctuation:  "."
Name:  "new"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "index"
Punctuation:  "("
Name:  "web"
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "return"
Text:  " "
Name:  "render_index"
Punctuation:  "("
Name.Builtin:  "collectgarbage"
Punctuation:  "("
Literal.String.Double:  "\"count\""
Punctuation:  "))"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Name:  "basic2"
Punctuation:  ":"
Name:  "dispatch_get"
Punctuation:  "("
Name:  "index"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/\""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/index\""
Punctuation:  ")"
Text:  "<newline>"
Comment.Single:  "-- any file in this directory will be served statically"
Text:  "<newline>"
Name:  "basic2"
Punctuation:  ":"
Name:  "dispatch_static"
Text:  " "
Punctuation:  "("
Literal.String.Double:  "\"/images/.+\""
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword.Declaration:  "local"
Text:  " "
Name:  "template"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "[[<newline><head></head><newline><html><newline>%s<newline></html><newline>]]"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "render_page"
Punctuation:  "("
Name:  "contents"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "template"
Punctuation:  ":"
Name:  "format"
Punctuation:  "("
Name:  "contents"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "render_index"
Punctuation:  "("
Name:  "mem"
Punctuation:  ")"
Text:  "<newline>   "
Keyword:  "return"
Text:  " "
Punctuation:  "("
Literal.String:  "[[<newline>    <img src=\"/images/lua.png\"/><newline>    <h2>Memory used by Lua is %6.0f kB<h2><newline>   ]]"
Punctuation:  "):"
Name:  "format"
Punctuation:  "("
Name:  "mem"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Comment.Single:  "-- html1.lua"
Text:  "<newline>"
Name.Builtin:  "require"
Literal.String.Double:  "\"orbit\""
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "generate"
Punctuation:  "()"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "html"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Name:  "head"
Punctuation:  "{"
Name:  "title"
Text:  " "
Literal.String.Double:  "\"HTML Example\""
Punctuation:  "},"
Text:  "<newline>        "
Name:  "body"
Punctuation:  "{"
Text:  "<newline>            "
Name:  "h2"
Punctuation:  "{"
Literal.String.Double:  "\"Here we go again!\""
Punctuation:  "}"
Text:  "<newline>        "
Punctuation:  "}"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Name:  "orbit"
Punctuation:  "."
Name:  "htmlify"
Punctuation:  "("
Name:  "generate"
Punctuation:  ")"
Text:  "<newline><newline>"
Name.Builtin:  "print"
Punctuation:  "("
Name:  "generate"
Punctuation:  "())"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "generate"
Punctuation:  "()"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "sensors"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Name:  "sensor"
Text:  " "
Punctuation:  "{"
Name:  "name"
Operator:  "="
Literal.String.Double:  "\"one\""
Punctuation:  "},"
Text:  "<newline>        "
Name:  "sensor"
Text:  " "
Punctuation:  "{"
Name:  "name"
Operator:  "="
Literal.String.Double:  "\"two\""
Punctuation:  "},"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "generate"
Text:  " "
Punctuation:  "("
Name:  "web"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Declaration:  "local"
Text:  " "
Name:  "list"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{}"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Name:  "name"
Punctuation:  ","
Name:  "value"
Text:  " "
Keyword:  "in"
Text:  " "
Name.Builtin:  "pairs"
Punctuation:  "("
Name:  "web"
Punctuation:  "."
Name:  "GET"
Punctuation:  ")"
Text:  " "
Keyword:  "do"
Text:  "<newline>        "
Name.Builtin:  "table.insert"
Punctuation:  "("
Name:  "list"
Punctuation:  ","
Name:  "li"
Punctuation:  "("
Name:  "name"
Operator:  ".."
Literal.String.Double:  "\" = \""
Operator:  ".."
Name:  "value"
Punctuation:  "))"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "ul"
Punctuation:  "("
Name:  "list"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Name.Builtin:  "require"
Literal.String.Double:  "\"orbit\""
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "wrap"
Text:  " "
Punctuation:  "("
Name:  "inner"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "html"
Punctuation:  "{"
Text:  " "
Name:  "head"
Punctuation:  "(),"
Text:  " "
Name:  "body"
Punctuation:  "("
Name:  "inner"
Punctuation:  ")"
Text:  " "
Punctuation:  "}"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "test"
Text:  " "
Punctuation:  "()"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "wrap"
Punctuation:  "("
Name:  "form"
Text:  " "
Punctuation:  "("
Name:  "H"
Literal.String.Single:  "'table'"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Name:  "tr"
Punctuation:  "{"
Name:  "td"
Literal.String.Double:  "\"First name\""
Punctuation:  ","
Name:  "td"
Punctuation:  "("
Text:  " "
Name:  "input"
Punctuation:  "{"
Name.Builtin:  "type"
Operator:  "="
Literal.String.Single:  "'text'"
Punctuation:  ","
Text:  " "
Name:  "name"
Operator:  "="
Literal.String.Single:  "'first'"
Punctuation:  "})},"
Text:  "<newline>        "
Name:  "tr"
Punctuation:  "{"
Name:  "td"
Literal.String.Double:  "\"Second name\""
Punctuation:  ","
Name:  "td"
Punctuation:  "("
Name:  "input"
Punctuation:  "{"
Name.Builtin:  "type"
Operator:  "="
Literal.String.Single:  "'text'"
Punctuation:  ","
Text:  " "
Name:  "name"
Operator:  "="
Literal.String.Single:  "'second'"
Punctuation:  "})},"
Text:  "<newline>        "
Name:  "tr"
Punctuation:  "{"
Text:  " "
Name:  "td"
Punctuation:  "("
Name:  "input"
Punctuation:  "{"
Name.Builtin:  "type"
Operator:  "="
Literal.String.Single:  "'submit'"
Punctuation:  ","
Text:  " "
Name:  "value"
Operator:  "="
Literal.String.Single:  "'Submit!'"
Punctuation:  "}),"
Text:  "<newline>            "
Name:  "td"
Punctuation:  "("
Name:  "input"
Punctuation:  "{"
Name.Builtin:  "type"
Operator:  "="
Literal.String.Single:  "'submit'"
Punctuation:  ","
Name:  "value"
Operator:  "="
Literal.String.Single:  "'Cancel'"
Punctuation:  "})"
Text:  "<newline>        "
Punctuation:  "},"
Text:  "<newline>    "
Punctuation:  "}))"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline><newline>"
Name:  "orbit"
Punctuation:  "."
Name:  "htmlify"
Punctuation:  "("
Name:  "wrap"
Punctuation:  ","
Name:  "test"
Punctuation:  ")"
Text:  "<newline><newline>"
Name.Builtin:  "print"
Punctuation:  "("
Name:  "test"
Punctuation:  "())"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "show_form"
Text:  " "
Punctuation:  "("
Name:  "web"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "wrap"
Punctuation:  "("
Name:  "form"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Name:  "htable"
Text:  " "
Punctuation:  "{"
Text:  "<newline>            "
Punctuation:  "{"
Name:  "text"
Punctuation:  "("
Literal.String.Double:  "\"First name\""
Punctuation:  ","
Literal.String.Single:  "'first'"
Punctuation:  ")},"
Text:  "<newline>            "
Punctuation:  "{"
Name:  "text"
Punctuation:  "("
Literal.String.Double:  "\"Second name\""
Punctuation:  ","
Literal.String.Single:  "'second'"
Punctuation:  ")},"
Text:  "<newline>            "
Punctuation:  "{"
Name:  "submit"
Text:  " "
Literal.String.Single:  "'Submit'"
Punctuation:  ","
Text:  " "
Name:  "submit"
Text:  " "
Literal.String.Single:  "'Cancel'"
Punctuation:  "},"
Text:  "<newline>        "
Punctuation:  "}"
Text:  "<newline>    "
Punctuation:  "})"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Comment.Single:  "-- ORM1.lua"
Text:  "<newline>"
Name.Builtin:  "require"
Text:  " "
Literal.String.Double:  "\"orbit\""
Text:  "<newline>"
Name.Builtin:  "require"
Text:  " "
Literal.String.Double:  "\"luasql.sqlite3\""
Text:  "<newline>"
Keyword.Declaration:  "local"
Text:  " "
Name:  "env"
Text:  " "
Operator:  "="
Text:  " "
Name:  "luasql"
Punctuation:  "."
Name:  "sqlite3"
Punctuation:  "()"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "dump"
Text:  " "
Punctuation:  "("
Name:  "t"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Operator:  "#"
Name:  "t"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "then"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Name:  "_"
Punctuation:  ","
Name:  "row"
Text:  " "
Keyword:  "in"
Text:  " "
Name.Builtin:  "ipairs"
Punctuation:  "("
Name:  "t"
Punctuation:  ")"
Text:  " "
Keyword:  "do"
Text:  "<newline>            "
Name:  "dump"
Punctuation:  "("
Name:  "row"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "end"
Text:  "<newline>    "
Keyword:  "else"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Name:  "field"
Punctuation:  ","
Name:  "value"
Text:  " "
Keyword:  "in"
Text:  " "
Name.Builtin:  "pairs"
Punctuation:  "("
Name:  "t"
Punctuation:  ")"
Text:  " "
Keyword:  "do"
Text:  "<newline>            "
Keyword:  "if"
Text:  " "
Name.Builtin:  "type"
Punctuation:  "("
Name:  "value"
Punctuation:  ")"
Text:  " "
Operator:  "=="
Text:  " "
Literal.String.Single:  "'string'"
Text:  " "
Keyword:  "then"
Text:  "<newline>                "
Name:  "value"
Text:  " "
Operator:  "="
Text:  " "
Name:  "value"
Punctuation:  ":"
Name:  "sub"
Punctuation:  "("
Literal.Number.Integer:  "1"
Punctuation:  ","
Literal.Number.Integer:  "60"
Punctuation:  ")"
Text:  "<newline>            "
Keyword:  "end"
Text:  "<newline>            "
Name.Builtin:  "print"
Punctuation:  "("
Name:  "field"
Punctuation:  ","
Name.Builtin:  "type"
Punctuation:  "("
Name:  "value"
Punctuation:  "),"
Name:  "value"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "end"
Text:  "<newline>        "
Name.Builtin:  "print"
Text:  " "
Literal.String.Single:  "'-----'"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Name:  "mapper"
Text:  " "
Operator:  "="
Text:  " "
Name:  "orbit"
Punctuation:  "."
Name:  "model"
Punctuation:  "."
Name:  "new"
Punctuation:  "()"
Text:  "<newline>"
Name:  "mapper"
Punctuation:  "."
Name:  "conn"
Text:  " "
Operator:  "="
Text:  " "
Name:  "env"
Punctuation:  ":"
Name:  "connect"
Punctuation:  "("
Literal.String.Double:  "\"../blog/blog.db\""
Punctuation:  ")"
Text:  "<newline>"
Name:  "mapper"
Punctuation:  "."
Name:  "driver"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"sqlite3\""
Text:  "<newline>"
Name:  "mapper"
Punctuation:  "."
Name:  "table_prefix"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "'blog_'"
Text:  "<newline><newline>"
Name:  "posts"
Text:  " "
Operator:  "="
Text:  " "
Name:  "mapper"
Punctuation:  ":"
Name:  "new"
Text:  " "
Literal.String.Single:  "'post'"
Text:  "  "
Comment.Single:  "-- maps to blog_post table"
Text:  "<newline><newline>"
Comment.Single:  "-- print out the second post"
Text:  "<newline>"
Name:  "second"
Text:  " "
Operator:  "="
Text:  " "
Name:  "posts"
Punctuation:  ":"
Name:  "find"
Punctuation:  "("
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "dump"
Punctuation:  "("
Name:  "second"
Punctuation:  ")"
Text:  "<newline><newline>"
Name:  "dump"
Punctuation:  "("
Name:  "posts"
Punctuation:  ":"
Name:  "find_all"
Punctuation:  "("
Literal.String.Double:  "\"id = ? or id = ?\""
Punctuation:  ","
Text:  "<newline>    "
Punctuation:  "{"
Literal.Number.Integer:  "2"
Punctuation:  ","
Literal.Number.Integer:  "4"
Punctuation:  ","
Name:  "order"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"published_at asc\""
Punctuation:  "}))"
Text:  "<newline><newline>"
Name:  "orbit"
Punctuation:  "."
Name:  "htmlify"
Punctuation:  "("
Name:  "blog1"
Punctuation:  ","
Literal.String.Single:  "'render_.+'"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "index"
Punctuation:  "("
Name:  "web"
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "return"
Text:  " "
Name:  "render_index"
Punctuation:  "("
Name:  "posts"
Punctuation:  ":"
Name:  "find_all"
Punctuation:  "())"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Name:  "blog1"
Punctuation:  ":"
Name:  "dispatch_get"
Punctuation:  "("
Name:  "index"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/\""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"/index\""
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword.Declaration:  "local"
Text:  " "
Keyword:  "function"
Text:  " "
Name.Function:  "limit"
Text:  " "
Punctuation:  "("
Name:  "s"
Punctuation:  ","
Name:  "maxlen"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Operator:  "#"
Name:  "s"
Text:  " "
Operator:  ">"
Text:  " "
Name:  "maxlen"
Text:  " "
Keyword:  "then"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name:  "s"
Punctuation:  ":"
Name:  "sub"
Punctuation:  "("
Literal.Number.Integer:  "1"
Punctuation:  ","
Name:  "maxlen"
Punctuation:  ")"
Operator:  ".."
Literal.String.Single:  "'...'"
Text:  "<newline>    "
Keyword:  "else"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name:  "s"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "render_page"
Punctuation:  "("
Name:  "contents"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "html"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Name:  "head"
Text:  " "
Punctuation:  "{"
Text:  " "
Name:  "title"
Text:  " "
Literal.String.Single:  "'Blog Example'"
Text:  " "
Punctuation:  "},"
Text:  "<newline>        "
Name:  "body"
Text:  " "
Punctuation:  "("
Name:  "contents"
Punctuation:  ")"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "render_post"
Punctuation:  "("
Name:  "post"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "div"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Name:  "h3"
Text:  " "
Punctuation:  "("
Name:  "post"
Punctuation:  "."
Name:  "id"
Text:  " "
Operator:  ".."
Text:  " "
Literal.String.Single:  "' '"
Text:  " "
Operator:  ".."
Text:  " "
Name:  "post"
Punctuation:  "."
Name:  "title"
Punctuation:  "),"
Text:  "<newline>        "
Name:  "p"
Text:  " "
Punctuation:  "("
Name:  "limit"
Punctuation:  "("
Name:  "post"
Punctuation:  "."
Name:  "body"
Punctuation:  ","
Literal.Number.Integer:  "128"
Punctuation:  ")),"
Text:  "<newline>        "
Name:  "em"
Punctuation:  "("
Name.Builtin:  "os.date"
Punctuation:  "("
Literal.String.Single:  "'%a %b %d %H:%M %Y'"
Punctuation:  ","
Name:  "post"
Punctuation:  "."
Name:  "published_at"
Punctuation:  ")),"
Text:  "<newline>        "
Literal.String.Single:  "' '"
Punctuation:  ","
Name:  "post"
Punctuation:  "."
Name:  "n_comments"
Punctuation:  ","
Literal.String.Single:  "' comments'"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "render_index"
Punctuation:  "("
Name:  "posts"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Declaration:  "local"
Text:  " "
Name:  "res"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{}"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Name:  "i"
Punctuation:  ","
Name:  "post"
Text:  " "
Keyword:  "in"
Text:  " "
Name.Builtin:  "ipairs"
Punctuation:  "("
Name:  "posts"
Punctuation:  ")"
Text:  " "
Keyword:  "do"
Text:  "<newline>        "
Name:  "res"
Punctuation:  "["
Name:  "i"
Punctuation:  "]"
Text:  " "
Operator:  "="
Text:  " "
Name:  "render_post"
Punctuation:  "("
Name:  "post"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "render_page"
Punctuation:  "("
Name:  "res"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "index"
Punctuation:  "("
Name:  "web"
Punctuation:  ")"
Text:  "<newline>  "
Keyword.Declaration:  "local"
Text:  " "
Name:  "keyword"
Text:  " "
Operator:  "="
Text:  " "
Name:  "web"
Punctuation:  "."
Name:  "GET"
Punctuation:  "."
Name:  "keyword"
Text:  " "
Operator.Word:  "or"
Text:  " "
Literal.String.Single:  "''"
Text:  "<newline>  "
Keyword:  "if"
Text:  " "
Name:  "keyword"
Text:  " "
Operator:  "=="
Text:  " "
Literal.String.Single:  "''"
Text:  " "
Keyword:  "then"
Text:  " "
Keyword:  "return"
Text:  " "
Punctuation:  "{}"
Text:  "<newline>  "
Keyword:  "else"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "render_index"
Punctuation:  "("
Name:  "posts"
Punctuation:  ":"
Name:  "find_all"
Punctuation:  "("
Literal.String.Single:  "'title like ?'"
Punctuation:  ",{"
Literal.String.Single:  "'%'"
Operator:  ".."
Name:  "keyword"
Operator:  ".."
Literal.String.Single:  "'%'"
Punctuation:  "}))"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "render_index"
Punctuation:  "("
Name:  "posts"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Declaration:  "local"
Text:  " "
Name:  "res"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{}"
Text:  "<newline>    "
Name:  "append"
Punctuation:  "("
Name:  "res"
Punctuation:  ","
Name:  "p"
Text:  " "
Punctuation:  "("
Name:  "form"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Name:  "input"
Text:  " "
Punctuation:  "{"
Name.Builtin:  "type"
Operator:  "="
Literal.String.Single:  "'text'"
Punctuation:  ","
Name:  "name"
Operator:  "="
Literal.String.Single:  "'keyword'"
Punctuation:  "},"
Text:  "<newline>        "
Name:  "input"
Text:  " "
Punctuation:  "{"
Name.Builtin:  "type"
Operator:  "="
Literal.String.Single:  "'submit'"
Punctuation:  ","
Name:  "value"
Operator:  "="
Literal.String.Single:  "'Submit'"
Punctuation:  "},"
Text:  "<newline>    "
Punctuation:  "}))"
Text:  "<newline>    "
Name:  "append"
Punctuation:  "("
Name:  "res"
Punctuation:  ","
Name:  "hr"
Punctuation:  "())"
Text:  "<newline>    "
Name:  "append"
Punctuation:  "("
Name:  "res"
Punctuation:  ","
Name:  "h2"
Punctuation:  "(("
Literal.String.Single:  "'Found %d posts'"
Punctuation:  "):"
Name:  "format"
Punctuation:  "("
Operator:  "#"
Name:  "posts"
Punctuation:  ")))"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Name:  "_"
Punctuation:  ","
Name:  "post"
Text:  " "
Keyword:  "in"
Text:  " "
Name.Builtin:  "ipairs"
Punctuation:  "("
Name:  "posts"
Punctuation:  ")"
Text:  " "
Keyword:  "do"
Text:  "<newline>        "
Name:  "append"
Punctuation:  "("
Name:  "res"
Punctuation:  ","
Name:  "render_post"
Punctuation:  "("
Name:  "post"
Punctuation:  "))"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "render_page"
Punctuation:  "("
Name:  "res"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline><newline>"
Comment.Multiline:  "--[[ Example code from http://lua-users.org/wiki/SimpleLuaClasses ]]"
Text:  "<newline>"
Name:  "Account"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{}"
Text:  "<newline>"
Name:  "Account"
Punctuation:  "."
Name:  "__index"
Text:  " "
Operator:  "="
Text:  " "
Name:  "Account"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Class:  "Account"
Punctuation:  "."
Name.Function:  "create"
Punctuation:  "("
Name:  "balance"
Punctuation:  ")"
Text:  "<newline>   "
Keyword.Declaration:  "local"
Text:  " "
Name:  "acnt"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{}"
Text:  "             "
Comment.Single:  "-- our new object"
Text:  "<newline>   "
Name.Builtin:  "setmetatable"
Punctuation:  "("
Name:  "acnt"
Punctuation:  ","
Name:  "Account"
Punctuation:  ")"
Text:  "  "
Comment.Single:  "-- make Account handle lookup"
Text:  "<newline>   "
Name:  "acnt"
Punctuation:  "."
Name:  "balance"
Text:  " "
Operator:  "="
Text:  " "
Name:  "balance"
Text:  "      "
Comment.Single:  "-- initialize our object"
Text:  "<newline>   "
Keyword:  "return"
Text:  " "
Name:  "acnt"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "function"
Text:  " "
Name.Function:  "Account"
Punctuation:  ":"
Name:  "withdraw"
Punctuation:  "("
Name:  "amount"
Punctuation:  ")"
Text:  "<newline>   "
Name:  "self"
Punctuation:  "."
Name:  "balance"
Text:  " "
Operator:  "="
Text:  " "
Name:  "self"
Punctuation:  "."
Name:  "balance"
Text:  " "
Operator:  "-"
Text:  " "
Name:  "amount"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Comment.Single:  "-- create and use an Account"
Text:  "<newline>"
Name:  "acc"
Text:  " "
Operator:  "="
Text:  " "
Name:  "Account"
Punctuation:  "."
Name:  "create"
Punctuation:  "("
Literal.Number.Integer:  "1000"
Punctuation:  ")"
Text:  "<newline>"
Name:  "acc"
Punctuation:  ":"
Name:  "withdraw"
Punctuation:  "("
Literal.Number.Integer:  "100"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "if"
Text:  "<newline>   "
Name:  "url"
Text:  " "
Operator:  "="
Text:  " "
Name:  "url"
Punctuation:  ":"
Name.Builtin:  "gsub"
Punctuation:  "("
Literal.String.Regex:  "\"^"
Literal.String.Escape:  "["
Literal.String.Regex:  "'"
Literal.String.Escape:  "\\"
Literal.String.Regex:  "\""
Literal.String.Escape:  "]"
Literal.String.Regex:  "\""
Punctuation:  ","
Text:  " "
Literal.String.Regex:  "\"\""
Punctuation:  "):"
Name.Builtin:  "gsub"
Punctuation:  "("
Literal.String.Regex:  "\""
Literal.String.Escape:  "["
Literal.String.Regex:  "'"
Literal.String.Escape:  "\\"
Literal.String.Regex:  "\""
Literal.String.Escape:  "]"
Literal.String.Regex:  "$\""
Punctuation:  ","
Text:  " "
Literal.String.Regex:  "\"\""
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline>"
