Name:  "let_automatic_engine_start_unittests_for"
Text.Whitespace:  "<newline>"
Name:  "abc| ab de |deffffffffffffffffffffffffffff"
Text.Whitespace:  "<newline>"
Name:  "aaaaaaaaaaaaaaaaaa:bbbbbbbbbbbbbbbbbbbbbbbbb"
Text.Whitespace:  "<newline>"
Name.Label:  "@abcdefffffffffffffffffffffffffffffff"
Text.Whitespace:  "<newline>"
Name.Label:  "@abc:deffffffffffffffffffffffffff"
Text.Whitespace:  "<newline><newline>"
Name:  "def_slotted_exemplar"
Punctuation:  "("
Text.Whitespace:  "<newline>        "
Literal.String.Symbol:  ":test_object"
Punctuation:  ","
Text.Whitespace:  "<newline>        "
Punctuation:  "{"
Text.Whitespace:  "<newline>                "
Punctuation:  "{"
Literal.String.Symbol:  ":slot"
Punctuation:  ","
Text.Whitespace:  " "
Keyword:  "_unset"
Punctuation:  "}"
Text.Whitespace:  "<newline>        "
Punctuation:  "},"
Text.Whitespace:  "<newline>        "
Punctuation:  "{"
Keyword:  "_class"
Text.Whitespace:  " "
Name:  "|java.lang.Integer|"
Punctuation:  "})"
Text.Whitespace:  "<newline>"
Punctuation:  "$"
Text.Whitespace:  "<newline><newline>"
Keyword:  "_pragma"
Punctuation:  "("
Name:  "classify_level"
Operator:  "="
Name:  "basic"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "topic"
Operator:  "="
Punctuation:  "{"
Name:  "test_topic"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "rouge"
Punctuation:  "})"
Text.Whitespace:  "<newline>"
Keyword:  "_method"
Text.Whitespace:  " "
Name.Class:  "test_object"
Punctuation:  "."
Name.Function:  "method_name"
Punctuation:  "("
Name:  "arg_1"
Punctuation:  ","
Text.Whitespace:  " "
Keyword:  "_gather"
Text.Whitespace:  " "
Name:  "args"
Punctuation:  ")"
Text.Whitespace:  "<newline>        "
Keyword:  "_local"
Text.Whitespace:  " "
Name:  "x"
Text.Whitespace:  " "
Operator:  "<<"
Text.Whitespace:  " "
Keyword:  "_self"
Punctuation:  "."
Name:  "test"
Punctuation:  "()"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "15"
Text.Whitespace:  "<newline>        "
Keyword:  "_if"
Text.Whitespace:  " "
Name:  "arg_1"
Text.Whitespace:  " "
Keyword:  "_is"
Text.Whitespace:  " "
Literal.String.Symbol:  ":test_symbol"
Text.Whitespace:  " "
Keyword:  "_orif"
Text.Whitespace:  "<newline>            "
Name:  "arg_1"
Text.Whitespace:  " "
Operator:  "<>"
Text.Whitespace:  " "
Literal.String:  "\"abc\""
Text.Whitespace:  " "
Keyword:  "_orif"
Text.Whitespace:  "<newline>            "
Name:  "arg_1"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String:  "\"def\""
Text.Whitespace:  "<newline>        "
Keyword:  "_then"
Text.Whitespace:  "<newline>                "
Punctuation:  "."
Name:  "slot"
Text.Whitespace:  " "
Operator:  "<<"
Text.Whitespace:  " "
Name:  "x"
Text.Whitespace:  "<newline>        "
Keyword:  "_else"
Text.Whitespace:  "<newline>                "
Punctuation:  "."
Name:  "slot"
Text.Whitespace:  " "
Operator:  "<<"
Text.Whitespace:  " "
Name:  "write_string"
Punctuation:  "("
Literal.String:  "\"string\""
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.String:  "'string'"
Punctuation:  ","
Text.Whitespace:  " "
Literal.String:  "\"test\""
Punctuation:  ")"
Text.Whitespace:  "<newline>        "
Keyword:  "_endif"
Text.Whitespace:  "<newline><newline>        "
Keyword:  "_local"
Text.Whitespace:  " "
Name:  "l_y"
Text.Whitespace:  " "
Operator:  "<<"
Text.Whitespace:  " "
Keyword:  "_true"
Text.Whitespace:  "<newline>        "
Name:  "l_y"
Text.Whitespace:  " "
Keyword:  "_and"
Operator:  "<<"
Text.Whitespace:  " "
Keyword:  "_true"
Text.Whitespace:  "<newline><newline>        "
Keyword:  "_while"
Text.Whitespace:  " "
Keyword:  "_true"
Text.Whitespace:  "<newline>        "
Keyword:  "_loop"
Text.Whitespace:  "<newline>                "
Keyword:  "_leave"
Text.Whitespace:  "<newline>        "
Keyword:  "_endloop"
Text.Whitespace:  "<newline><newline>        "
Comment.Single:  "# numbers"
Text.Whitespace:  "<newline>        "
Literal.Number:  "45"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "0"
Punctuation:  ","
Text.Whitespace:  " "
Operator:  "-"
Literal.Number:  "101"
Text.Whitespace:  "<newline>        "
Literal.Number:  "2r101"
Punctuation:  ","
Text.Whitespace:  " "
Operator:  "-"
Literal.Number:  "8r123"
Text.Whitespace:  "<newline>        "
Literal.Number:  "16rA0"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "16rF"
Name:  "F"
Text.Whitespace:  "<newline>        "
Literal.Number:  "2e5"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "6&6"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "6rA0&2"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "6rA0&2e4"
Text.Whitespace:  "<newline>        "
Literal.Number:  "0.5"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "45.0"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "16rA0.8"
Text.Whitespace:  "<newline>        "
Literal.Number:  "23.007e5"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "0.4E-5"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "16rA0.8&2"
Text.Whitespace:  "<newline><newline>        "
Comment.Single:  "# characters"
Text.Whitespace:  "<newline>        "
Literal.String.Char:  "%q,"
Text.Whitespace:  " "
Literal.String.Char:  "%Z,"
Text.Whitespace:  " "
Literal.String.Char:  "%u"
Text.Whitespace:  "<newline>        "
Literal.String.Char:  "%u000A"
Text.Whitespace:  "<newline>        "
Literal.String.Char:  "%newline,"
Text.Whitespace:  " "
Literal.String.Char:  "%space,"
Text.Whitespace:  " "
Literal.String.Char:  "%tab"
Text.Whitespace:  "<newline><newline>        "
Comment.Single:  "# identifiers"
Text.Whitespace:  "<newline>        "
Name:  "identifier"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "identifier_abc"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "identifier_0123"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "|IDENTIFIER|"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "identifier:identifier"
Text.Whitespace:  "<newline><newline>        "
Comment.Single:  "# symbols"
Text.Whitespace:  "<newline>        "
Literal.String.Symbol:  ":symbol"
Punctuation:  ","
Text.Whitespace:  " "
Literal.String.Symbol:  ":symbol_symbol"
Punctuation:  ","
Text.Whitespace:  " "
Literal.String.Symbol:  ":|symbol()|"
Punctuation:  ","
Text.Whitespace:  " "
Literal.String.Symbol:  ":|Symbol|"
Punctuation:  ","
Text.Whitespace:  " "
Literal.String.Symbol:  ":|Symbol^<<__|"
Punctuation:  ","
Text.Whitespace:  " "
Literal.String.Symbol:  ":\\|test"
Text.Whitespace:  "<newline><newline>        "
Comment.Single:  "# labels"
Text.Whitespace:  "<newline>        "
Name.Label:  "@label"
Text.Whitespace:  "<newline>        "
Name.Label:  "@ label"
Text.Whitespace:  "<newline><newline>        "
Keyword:  "_proc"
Name.Label:  "@test"
Punctuation:  "("
Name:  "p_args"
Punctuation:  ")"
Text.Whitespace:  "<newline>        "
Keyword:  "_endproc"
Text.Whitespace:  "<newline><newline>        "
Keyword:  "_proc"
Name.Label:  "@ test"
Punctuation:  "("
Name:  "p_args"
Punctuation:  ")"
Text.Whitespace:  "<newline>        "
Keyword:  "_endproc"
Text.Whitespace:  "<newline><newline>        "
Comment.Single:  "# global references"
Text.Whitespace:  "<newline>        "
Name.Label:  "@namespace:identifier"
Text.Whitespace:  "<newline>        "
Name.Label:  "@123"
Text.Whitespace:  "<newline><newline>        "
Operator:  ">>"
Text.Whitespace:  " "
Name:  "l_x"
Text.Whitespace:  "<newline>"
Keyword:  "_endmethod"
Text.Whitespace:  "<newline>"
Punctuation:  "$"
Text.Whitespace:  "<newline><newline>"
Keyword:  "_block"
Text.Whitespace:  "<newline>        "
Keyword:  "_thisthread"
Punctuation:  "."
Name:  "traceback"
Punctuation:  "()"
Text.Whitespace:  "<newline>"
Keyword:  "_endblock"
Text.Whitespace:  "<newline>"
Punctuation:  "$"
Text.Whitespace:  "<newline>"
