Comment.Multiline:  "(!******************************************************<newline>   Mosel Example Problems<newline>   ======================<newline><newline>   file runfolio.mos<newline>   `````````````````<newline>   Master model running portfolio optimization model.<newline><newline>   Runs model foliomemio.mos.<newline>   -- Data input/output in memory --<newline>      <newline>  (c) 2009 Fair Isaac Corporation<newline>      author: S.Heipcke, Jan. 2009<newline>*******************************************************!)"
Text:  "<newline><newline>"
Keyword:  "model"
Text:  " "
Literal.String.Double:  "\"Run portfolio optimization model\""
Text:  "<newline> "
Keyword:  "uses"
Text:  " "
Literal.String.Double:  "\"mmjobs\""
Text:  "                       "
Comment.Single:  "! Use multiple model handling<newline>"
Text:  " "
Keyword:  "uses"
Text:  " "
Literal.String.Double:  "\"mmsystem\""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"mmxprs\""
Text:  "<newline><newline> "
Keyword:  "parameters"
Text:  "<newline>  "
Name:  "MODELFILE"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String.Double:  "\"foliomemio.mos\""
Text:  "       "
Comment.Single:  "! Optimization model<newline>"
Text:  "  "
Name:  "INPUTFILE"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String.Double:  "\"folio10.dat\""
Text:  "          "
Comment.Single:  "! File with problem data<newline>"
Text:  " <newline>  "
Name:  "MAXRISK"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number:  "1"
Punctuation:  "/"
Literal.Number:  "3"
Text:  "                      "
Comment.Single:  "! Max. investment into high-risk values<newline>"
Text:  "  "
Name:  "MINREG"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number:  "0.2"
Text:  "                       "
Comment.Single:  "! Min. investment per geogr. region<newline>"
Text:  "  "
Name:  "MAXREG"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number:  "0.5"
Text:  "                       "
Comment.Single:  "! Max. investment per geogr. region<newline>"
Text:  "  "
Name:  "MAXSEC"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number:  "0.25"
Text:  "                      "
Comment.Single:  "! Max. investment per ind. sector<newline>"
Text:  "  "
Name:  "MAXVAL"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number:  "0.2"
Text:  "                       "
Comment.Single:  "! Max. investment per share<newline>"
Text:  "  "
Name:  "MINVAL"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number:  "0.1"
Text:  "                       "
Comment.Single:  "! Min. investment per share<newline>"
Text:  "  "
Name:  "MAXNUM"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number:  "15"
Text:  "                        "
Comment.Single:  "! Max. number of different assets<newline>"
Text:  " "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "parameters"
Text:  "<newline> <newline> "
Keyword:  "forward"
Text:  " "
Keyword:  "procedure"
Text:  " "
Name:  "write_html_results"
Text:  "<newline><newline> "
Keyword:  "declarations"
Text:  "<newline>  "
Name:  "SHARES"
Punctuation:  ":"
Text:  " "
Keyword:  "set"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "string"
Text:  "              "
Comment.Single:  "! Set of shares<newline>"
Text:  "  "
Name:  "RISK"
Punctuation:  ":"
Text:  " "
Keyword:  "set"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "string"
Text:  "                "
Comment.Single:  "! Set of high-risk values among shares<newline>"
Text:  "  "
Name:  "REGIONS"
Punctuation:  ":"
Text:  " "
Keyword:  "set"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "string"
Text:  "             "
Comment.Single:  "! Geographical regions<newline>"
Text:  "  "
Name:  "TYPES"
Punctuation:  ":"
Text:  " "
Keyword:  "set"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "string"
Text:  "               "
Comment.Single:  "! Share types (ind. sectors)<newline>"
Text:  "  "
Name:  "LOCTAB"
Punctuation:  ":"
Text:  " "
Keyword:  "dynamic"
Text:  " "
Keyword:  "array"
Punctuation:  "("
Name:  "REGIONS"
Punctuation:  ","
Name:  "SHARES"
Punctuation:  ")"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "boolean"
Text:  " "
Comment.Single:  "! Shares per geogr. region<newline>"
Text:  "  "
Name:  "RET"
Punctuation:  ":"
Text:  " "
Keyword:  "array"
Punctuation:  "("
Name:  "SHARES"
Punctuation:  ")"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "real"
Text:  "         "
Comment.Single:  "! Estimated return in investment<newline>"
Text:  "  "
Name:  "SECTAB"
Punctuation:  ":"
Text:  " "
Keyword:  "dynamic"
Text:  " "
Keyword:  "array"
Punctuation:  "("
Name:  "TYPES"
Punctuation:  ","
Name:  "SHARES"
Punctuation:  ")"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "boolean"
Text:  " "
Comment.Single:  "! Shares per industry sector<newline>"
Text:  "<newline>  "
Name:  "returnsol"
Punctuation:  ":"
Text:  " "
Keyword:  "real"
Text:  "                    "
Comment.Single:  "! Solution values<newline>"
Text:  "  "
Name:  "numsharessol"
Punctuation:  ","
Name:  "status"
Punctuation:  ":"
Text:  " "
Keyword:  "integer"
Text:  "<newline>  "
Name:  "fracsol"
Punctuation:  ":"
Text:  " "
Keyword:  "array"
Punctuation:  "("
Name:  "SHARES"
Punctuation:  ")"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "real"
Text:  "     "
Comment.Single:  "! Fraction of capital used per share<newline>"
Text:  "  "
Name:  "buysol"
Punctuation:  ":"
Text:  " "
Keyword:  "array"
Punctuation:  "("
Name:  "SHARES"
Punctuation:  ")"
Text:  " "
Keyword:  "of"
Text:  " "
Keyword:  "real"
Text:  "      "
Comment.Single:  "! 1 if asset is in portfolio, 0 otherwise<newline>"
Text:  "<newline>  "
Name:  "foliomod"
Punctuation:  ":"
Text:  " "
Keyword:  "Model"
Text:  "<newline> "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "declarations"
Text:  "<newline><newline>"
Comment.Single:  "! Compile and load the optimization model<newline>"
Text:  " "
Keyword:  "if"
Text:  " "
Name.Function:  "compile"
Punctuation:  "("
Literal.String.Double:  "\"\""
Punctuation:  ","
Text:  " "
Name:  "MODELFILE"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"shmem:bim\""
Punctuation:  ")"
Text:  " "
Punctuation:  "<>"
Text:  " "
Literal.Number:  "0"
Text:  " "
Keyword:  "then"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Error during model compilation\""
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "exit"
Punctuation:  "("
Literal.Number:  "1"
Punctuation:  ")"
Text:  "<newline> "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "if"
Text:  "<newline> "
Name.Function:  "load"
Punctuation:  "("
Name:  "foliomod"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"shmem:bim\""
Punctuation:  ")"
Text:  "<newline> "
Name.Function:  "fdelete"
Punctuation:  "("
Literal.String.Double:  "\"shmem:bim\""
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "! Read in data from file<newline>"
Text:  " "
Keyword:  "initializations"
Text:  " "
Keyword:  "from"
Text:  " "
Name:  "INPUTFILE"
Text:  "<newline>  "
Name:  "RISK"
Text:  " "
Name:  "RET"
Text:  " "
Name:  "LOCTAB"
Text:  " "
Name:  "SECTAB"
Text:  "<newline> "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "initializations"
Text:  "<newline><newline>"
Comment.Single:  "! Save data to memory<newline>"
Text:  " "
Keyword:  "initializations"
Text:  " "
Keyword:  "to"
Text:  " "
Literal.String.Double:  "\"raw:\""
Text:  "<newline>  "
Name:  "RISK"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:RISK'"
Text:  "<newline>  "
Name:  "RET"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:RET'"
Text:  "<newline>  "
Name:  "LOCTAB"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:LOCTAB'"
Text:  "<newline>  "
Name:  "SECTAB"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:SECTAB'"
Text:  "<newline> "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "initializations"
Text:  "<newline><newline> "
Name.Function:  "run"
Punctuation:  "("
Name:  "foliomod"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"MAXRISK=\""
Text:  " "
Punctuation:  "+"
Text:  " "
Name:  "MAXRISK"
Text:  " "
Punctuation:  "+"
Text:  " "
Literal.String.Double:  "\",MINREG=\""
Text:  " "
Punctuation:  "+"
Text:  " "
Name:  "MINREG"
Text:  " "
Punctuation:  "+"
Text:  " <newline>  "
Literal.String.Double:  "\",MAXREG=\""
Text:  " "
Punctuation:  "+"
Text:  " "
Name:  "MAXREG"
Text:  " "
Punctuation:  "+"
Text:  " "
Literal.String.Double:  "\",MAXSEC=\""
Text:  " "
Punctuation:  "+"
Text:  " "
Name:  "MAXSEC"
Text:  " "
Punctuation:  "+"
Text:  "<newline>  "
Literal.String.Double:  "\",MAXVAL=\""
Text:  " "
Punctuation:  "+"
Text:  " "
Name:  "MAXVAL"
Text:  " "
Punctuation:  "+"
Text:  " "
Literal.String.Double:  "\",MINVAL=\""
Text:  " "
Punctuation:  "+"
Text:  " "
Name:  "MINVAL"
Text:  " "
Punctuation:  "+"
Text:  "<newline>  "
Literal.String.Double:  "\",MAXNUM=\""
Text:  " "
Punctuation:  "+"
Text:  " "
Name:  "MAXNUM"
Text:  " "
Punctuation:  "+"
Text:  " "
Literal.String.Double:  "\",DATAFILE='raw:',OUTPUTFILE='raw:',\""
Text:  " "
Punctuation:  "+"
Text:  "<newline>  "
Literal.String.Double:  "\"RISKDATA='shmem:RISK',RETDATA='shmem:RET',LOCDATA='shmem:LOCTAB',\""
Text:  " "
Punctuation:  "+"
Text:  "<newline>  "
Literal.String.Double:  "\"SECDATA='shmem:SECTAB',FRACSOL='shmem:FRAC',BUYSOL='shmem:BUY',\""
Text:  " "
Punctuation:  "+"
Text:  "<newline>  "
Literal.String.Double:  "\"NUMSHARES='shmem:NUMSHARES',RETSOL='shmem:RETSOL',\""
Text:  " "
Punctuation:  "+"
Text:  "<newline>  "
Literal.String.Double:  "\"SOLSTATUS='shmem:SOLSTATUS'\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Function:  "wait"
Text:  "                              "
Comment.Single:  "! Wait for model termination<newline>"
Text:  "  "
Name.Function:  "dropnextevent"
Text:  "                     "
Comment.Single:  "! Ignore termination event message<newline>"
Text:  "<newline> "
Keyword:  "initializations"
Text:  " "
Keyword:  "from"
Text:  "  "
Literal.String.Double:  "\"raw:\""
Text:  "<newline>  "
Name:  "returnsol"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:RETSOL'"
Text:  "<newline>  "
Name:  "numsharessol"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:NUMSHARES'"
Text:  "<newline>  "
Name:  "fracsol"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:FRAC'"
Text:  "<newline>  "
Name:  "buysol"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:BUY'"
Text:  "<newline>  "
Name:  "status"
Text:  " "
Keyword:  "as"
Text:  " "
Literal.String.Single:  "'shmem:SOLSTATUS'"
Text:  "<newline> "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "initializations"
Text:  "<newline><newline> "
Keyword:  "case"
Text:  " "
Name:  "status"
Text:  " "
Keyword:  "of"
Text:  "<newline>  "
Name.Constant:  "XPRS_OPT"
Punctuation:  ":"
Text:  " "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Problem solved to optimality\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Constant:  "XPRS_UNF"
Punctuation:  ":"
Text:  " "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Problem solving unfinished\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Constant:  "XPRS_INF"
Punctuation:  ":"
Text:  " "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Problem is infeasible\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Constant:  "XPRS_UNB"
Punctuation:  ","
Name.Constant:  "XPRS_OTH"
Punctuation:  ":"
Text:  "  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"No solution available\""
Punctuation:  ")"
Text:  "<newline> "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "case"
Text:  " <newline><newline> "
Comment.Single:  "! Solution printing<newline>"
Text:  " "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Total return: \""
Punctuation:  ","
Text:  " "
Name:  "returnsol"
Punctuation:  ")"
Text:  "<newline> "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Number of shares: \""
Punctuation:  ","
Text:  " "
Name:  "numsharessol"
Punctuation:  ")"
Text:  "<newline> "
Keyword:  "forall"
Punctuation:  "("
Name:  "s"
Text:  " "
Keyword:  "in"
Text:  " "
Name:  "SHARES"
Text:  " "
Punctuation:  "|"
Text:  " "
Name:  "fracsol"
Punctuation:  "("
Name:  "s"
Punctuation:  ")>"
Literal.Number:  "0"
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Name:  "s"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\": \""
Punctuation:  ","
Text:  " "
Name:  "fracsol"
Punctuation:  "("
Name:  "s"
Punctuation:  ")*"
Literal.Number:  "100"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"% (\""
Punctuation:  ","
Text:  " "
Name:  "buysol"
Punctuation:  "("
Name:  "s"
Punctuation:  "),"
Text:  " "
Literal.String.Double:  "\")\""
Punctuation:  ")"
Text:  "<newline> <newline> "
Name:  "write_html_results"
Text:  "<newline><newline>"
Comment.Single:  "! *********** Writing an HTML result file ***********<newline>"
Text:  " "
Keyword:  "procedure"
Text:  " "
Name:  "write_html_results"
Text:  "<newline>  "
Name.Builtin:  "setparam"
Punctuation:  "("
Literal.String.Double:  "\"datetimefmt\""
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"%0d-%N-%y, %0H:%0M:%0S\""
Punctuation:  ")"
Text:  "<newline><newline>  "
Name:  "HTMLFILE"
Punctuation:  ":="
Text:  " "
Name:  "INPUTFILE"
Text:  " "
Punctuation:  "+"
Text:  " "
Literal.String.Double:  "\"_sol.html\""
Text:  "<newline>  "
Name.Builtin:  "fopen"
Punctuation:  "("
Name:  "HTMLFILE"
Punctuation:  ","
Text:  " "
Name:  "F_OUTPUT"
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<html>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<head>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<style type='text/css'>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"body {font-family: Verdana, Geneva, Helvetica, Arial, sans-serif; color: 000055 }\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"table td {background-color: ffffaa; text-align: left }\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"table th {background-color: 053055; color: ffcc88}\""
Punctuation:  ")"
Text:  "<newline> "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"</style>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"</head>\""
Punctuation:  ")"
Text:  "<newline><newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<body>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<center><h2>Portfolio Optimization Results</h2></center>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<table width='100%' cellpadding='5' cellspacing='0' border=0>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<tr><td width='55%'><font color='#000055'><b>Total return: \""
Punctuation:  ","
Text:  "<newline>          "
Name:  "returnsol"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"</b></font></td><td><font color='#885533'><b>Problem instance: \""
Punctuation:  ","
Text:  "<newline>          "
Name:  "INPUTFILE"
Punctuation:  ","
Literal.String.Double:  "\"</b></font></td></tr>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<tr><td><font color='#000055'><b>Number of shares: \""
Punctuation:  ","
Text:  " "
Name:  "numsharessol"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"</b></font></td><td><font color='#885533'><b>Date: \""
Punctuation:  ","
Text:  " "
Name:  "datetime"
Punctuation:  "("
Name:  "SYS_NOW"
Punctuation:  "),"
Literal.String.Double:  "\"</b></font></td></tr>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<tr><td colspan='2'>&nbsp;</td></tr>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"</table>\""
Punctuation:  ")"
Text:  "<newline><newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<table cellpadding='2' cellspacing='1' width='100%'>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<tr><th>Value</th><th>Percentage</th></tr>\""
Punctuation:  ")"
Text:  "<newline> "
Keyword:  "forall"
Punctuation:  "("
Name:  "s"
Text:  " "
Keyword:  "in"
Text:  " "
Name:  "SHARES"
Text:  " "
Punctuation:  "|"
Text:  " "
Name:  "fracsol"
Punctuation:  "("
Name:  "s"
Punctuation:  ")>"
Literal.Number:  "0"
Punctuation:  ")"
Text:  " <newline>   "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"<tr><td>\""
Punctuation:  ","
Text:  " "
Name:  "s"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"</td><td>\""
Punctuation:  ","
Text:  " "
Name.Builtin:  "strfmt"
Punctuation:  "("
Name:  "fracsol"
Punctuation:  "("
Name:  "s"
Punctuation:  ")*"
Literal.Number:  "100"
Punctuation:  ","
Literal.Number:  "4"
Punctuation:  ","
Literal.Number:  "2"
Punctuation:  "),"
Text:  " <newline>           "
Literal.String.Double:  "\"%</td></tr>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"</table>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"</body>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"</html>\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "fclose"
Punctuation:  "("
Name:  "F_OUTPUT"
Punctuation:  ")"
Text:  "<newline> "
Keyword:  "end"
Punctuation:  "-"
Keyword:  "procedure"
Text:  "<newline><newline>"
Comment.Single:  "! Test multiple strings escaping<newline>"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Reading 'KnapsackData.txt' ... \""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Reading "
Literal.String.Escape:  "\\\""
Literal.String.Double:  "KnapsackData.txt"
Literal.String.Escape:  "\\\""
Literal.String.Double:  " ... \""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Single:  "'Reading \"KnapsackData.txt\" ... '"
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"A double-quote string with a escape"
Literal.String.Escape:  "<newline>"
Literal.String.Double:  "breakline\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Single:  "'A single-quote string with a escape<newline>breakline which should be ignored'"
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"The letter q has octal code 161 can written as "
Literal.String.Escape:  "\\161."
Literal.String.Double:  " But \\229 is not a valid octal number\""
Punctuation:  ")"
Text:  "<newline>"
Comment.Single:  "! Multiline strings<newline>"
Text:  "  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"This is<newline>    a multi-line<newline>    string with three lines\""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Double:  "\"Reading <newline>    file 'KnapsackData.txt' ... \""
Punctuation:  ")"
Text:  "<newline>  "
Name.Builtin:  "writeln"
Punctuation:  "("
Literal.String.Single:  "'Reading <newline>    file \"KnapsackData.txt\" ... '"
Punctuation:  ")"
Text:  "<newline><newline><newline>"
Keyword:  "end"
Punctuation:  "-"
Keyword:  "model"
Text:  "<newline>"
