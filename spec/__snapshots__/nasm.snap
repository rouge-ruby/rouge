Comment.Single:  "; Simple test of the NASM parser"
Text:  "<newline><newline>"
Comment.Single:  "; Data section, initialized variables"
Text:  "<newline>"
Keyword:  "SECTION"
Text:  " "
Name.Variable:  ".data"
Text:  "<newline><newline>"
Name.Label:  "fmt:"
Text:  "  "
Keyword.Declaration:  "db"
Text:  " "
Literal.String:  "\"a=%d, eax=%d\""
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Comment.Single:  "; the printf format"
Text:  "<newline>"
Name.Label:  "a:"
Text:  "    "
Keyword.Declaration:  "dd"
Text:  "  "
Literal.Number.Integer:  "5"
Text:  "                    "
Comment.Single:  "; int a = 5"
Text:  "<newline><newline>"
Comment.Preproc:  "%macro IRQ 2<newline>"
Text:  "    "
Name.Function:  "global"
Text:  " "
Name.Variable:  "irq"
Operator:  "%"
Literal.Number.Integer:  "1"
Text:  "<newline>    "
Name.Function:  "irq"
Operator:  "%"
Literal.Number.Integer:  "1"
Punctuation:  ":"
Text:  "<newline>        "
Name.Function:  "cli"
Text:  "<newline>        "
Name.Function:  "push"
Text:  " "
Keyword.Type:  "byte"
Text:  " "
Literal.Number.Integer:  "0"
Text:  "     "
Comment.Single:  "; push a dummy error code"
Text:  "<newline>        "
Name.Function:  "push"
Text:  " "
Keyword.Type:  "byte"
Text:  " "
Operator:  "%"
Literal.Number.Integer:  "2"
Text:  "    "
Comment.Single:  "; push the IRQ number"
Text:  "<newline>        "
Name.Function:  "jmp"
Text:  "  "
Name.Variable:  "irq_common_stub"
Text:  "<newline>"
Comment.Preproc:  "%endmacro<newline>"
Text:  "<newline>"
Name.Function:  "extern"
Text:  "  "
Name.Variable:  "printf"
Text:  "    "
Comment.Single:  "; the C function to be called"
Text:  "<newline><newline>"
Comment.Single:  "; Code section"
Text:  "<newline>"
Keyword:  "SECTION"
Text:  " "
Name.Variable:  ".text"
Text:  "<newline><newline>"
Name.Function:  "global"
Text:  " "
Name.Variable:  "main"
Text:  "       "
Comment.Single:  "; the standard gcc entry point"
Text:  "<newline><newline>"
Name.Label:  "main:"
Text:  "<newline>  "
Name.Function:  "push"
Text:  "  "
Name.Builtin:  "ebp"
Text:  "<newline>  "
Name.Function:  "mov"
Text:  "   "
Name.Builtin:  "ebp"
Punctuation:  ","
Text:  " "
Name.Builtin:  "esp"
Text:  "<newline>  "
Name.Function:  "mov"
Text:  "   "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Punctuation:  "["
Name.Variable:  "a"
Punctuation:  "]"
Text:  "<newline>  "
Name.Function:  "add"
Text:  "   "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "2"
Text:  "<newline>  "
Name.Function:  "push"
Text:  "  "
Literal.String:  "'a'"
Text:  "<newline>  "
Name.Function:  "push"
Text:  "  "
Keyword.Type:  "dword"
Text:  " "
Punctuation:  "["
Name.Variable:  "a"
Punctuation:  "]"
Text:  " "
Comment.Single:  "; value of variable a"
Text:  "<newline>  "
Name.Function:  "push"
Text:  "  "
Keyword.Type:  "dword"
Text:  " "
Name.Variable:  "fmt"
Text:  " "
Comment.Single:  "; address of ctrl string"
Text:  "<newline>  "
Name.Function:  "call"
Text:  "  "
Name.Variable:  "printf"
Text:  "    "
Comment.Single:  "; call C function"
Text:  "<newline>  "
Name.Function:  "add"
Text:  "   "
Name.Builtin:  "esp"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "12"
Text:  "<newline>  "
Name.Function:  "mov"
Text:  "   "
Name.Builtin:  "esp"
Punctuation:  ","
Text:  " "
Name.Builtin:  "ebp"
Text:  "  "
Comment.Single:  "; takedown stack frame"
Text:  "<newline>  "
Name.Function:  "pop"
Text:  "   "
Name.Builtin:  "ebp"
Text:  "<newline>  "
Name.Function:  "mov"
Text:  "   "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Text:  "    "
Comment.Single:  "; normal, no error, return value"
Text:  "<newline>  "
Name.Function:  "ret"
Text:  "             "
Comment.Single:  "; return"
Text:  "<newline><newline>"
Name.Label:  "irq_common_stub:"
Text:  "<newline>  "
Name.Function:  "pusha"
Text:  "           "
Comment.Single:  "; pushes all general-purpose registers"
Text:  "<newline>  "
Name.Function:  "mov"
Text:  "   "
Name.Builtin:  "ax"
Punctuation:  ","
Text:  " "
Name.Builtin:  "ds"
Text:  "    "
Comment.Single:  "; lower 16-bits of eax = ds"
Text:  "<newline>  "
Name.Function:  "mov"
Text:  "   "
Name.Builtin:  "ax"
Punctuation:  ","
Text:  " "
Literal.Number.Hex:  "0x10"
Text:  "  "
Comment.Single:  "; load the kernel data segment descriptor"
Text:  "<newline>  "
Name.Function:  "mov"
Text:  "   "
Name.Builtin:  "ds"
Punctuation:  ","
Text:  " "
Name.Builtin:  "ax"
Text:  "<newline>  "
Name.Function:  "popa"
Text:  "            "
Comment.Single:  "; pops all general-purpose registers"
Text:  "<newline>  "
Name.Function:  "add"
Text:  "   "
Name.Builtin:  "esp"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "8"
Text:  "    "
Comment.Single:  "; cleans up the pushed error code and pushed irq number"
Text:  "<newline>  "
Name.Function:  "sti"
Text:  "             "
Comment.Single:  "; (re)-enable interrupts \"set interrupt flag\""
Text:  "<newline>  "
Name.Function:  "iret"
Text:  "            "
Comment.Single:  "; pops CS, EIP, EFLAGS, SS, and ESP"
Text:  "<newline><newline>"
Comment.Preproc:  "%assign i 0<newline>%rep 16<newline>"
Name.Function:  "IRQ"
Text:  " "
Name.Variable:  "i"
Punctuation:  ","
Text:  " "
Name.Variable:  "i"
Operator:  "+"
Literal.Number.Integer:  "32"
Text:  "<newline>"
Comment.Preproc:  "%assign i i+1<newline>%endrep<newline>"
Text:  "<newline>"
Name.Function:  "mov"
Text:  " "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Punctuation:  "["
Name.Builtin:  "eax"
Punctuation:  "]"
Text:  "<newline>"
Name.Function:  "mov"
Text:  " "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Punctuation:  "["
Name.Builtin:  "eax"
Text:  " "
Operator:  "+"
Text:  " "
Name.Builtin:  "ebx"
Punctuation:  "]"
Text:  "<newline>"
Name.Function:  "mov"
Text:  " "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Punctuation:  "["
Name.Builtin:  "eax"
Text:  " "
Operator:  "+"
Text:  " "
Name.Builtin:  "ebx"
Operator:  "*"
Literal.Number.Integer:  "2"
Punctuation:  "]"
Text:  "<newline>"
Name.Function:  "mov"
Text:  " "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Punctuation:  "["
Name.Builtin:  "eax"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  "]"
Text:  "<newline>"
Name.Function:  "mov"
Text:  " "
Name.Builtin:  "eax"
Punctuation:  ","
Text:  " "
Punctuation:  "["
Name.Builtin:  "eax"
Text:  " "
Operator:  "+"
Text:  " "
Name.Builtin:  "ebx"
Operator:  "*"
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  "]"
Text:  "<newline>"
