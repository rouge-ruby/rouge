Text:  "<newline>"
Comment.Multiline:  "% multiline<newline>comment<newline>#1 ;"
Text:  "<newline><newline>"
Comment.Multiline:  "# multiline<newline>comment<newline>#2<newline><newline>"
Literal.Number.Integer:  "1"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Comment.Multiline:  "% multiline comment<newline>after expr ;"
Text:  "<newline><newline>"
Literal.Number.Integer:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "3"
Text:  " "
Operator:  "#"
Text:  " "
Name.Variable:  "multiline"
Text:  " "
Name.Variable:  "comment2"
Text:  "<newline>"
Name.Variable:  "after"
Text:  " "
Name.Variable:  "expr"
Text:  "<newline><newline>"
Comment.Multiline:  "% Control Structures ;"
Text:  "<newline>"
Keyword:  "FOR"
Text:  " "
Name.Variable:  "x"
Text:  " "
Keyword:  "WITH"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Literal.Number.Integer:  "3"
Text:  " "
Keyword:  "DO"
Text:  "<newline>    "
Keyword.Pseudo:  "write"
Text:  " "
Name.Variable:  "x"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "ENDFOR"
Text:  " "
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "WHILE"
Text:  " "
Name.Variable:  "n"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number.Integer:  "4"
Text:  "<newline>    "
Keyword.Pseudo:  "write"
Text:  " "
Name.Variable:  "n"
Punctuation:  ";"
Text:  "<newline>    "
Name.Variable:  "n"
Text:  " "
Punctuation:  ":="
Text:  " "
Name.Variable:  "n"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "ENDWHILE"
Text:  " "
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "CASE"
Text:  " "
Name.Variable:  "c"
Text:  " "
Keyword:  "FROM"
Text:  "<newline>    "
Literal.Number.Integer:  "1"
Punctuation:  ":"
Text:  " "
Literal.String.Symbol:  "\"one\""
Punctuation:  ";"
Text:  " "
Keyword:  "END"
Text:  "<newline>    "
Literal.Number.Integer:  "2"
Punctuation:  ":"
Text:  " "
Literal.String.Symbol:  "\"two\""
Punctuation:  ";"
Text:  " "
Keyword:  "END"
Text:  "<newline>    "
Literal.Number.Integer:  "3"
Punctuation:  ":"
Text:  " "
Literal.String.Symbol:  "\"three\""
Punctuation:  ";"
Text:  " "
Keyword:  "END"
Text:  "<newline>"
Keyword:  "ENDCASE"
Text:  " "
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "REPEAT"
Text:  "<newline>    "
Name.Variable:  "x"
Text:  " "
Punctuation:  ":="
Text:  " "
Keyword.Pseudo:  "opposite"
Text:  " "
Name.Variable:  "x"
Text:  "<newline>"
Keyword:  "UNTIL"
Text:  " "
Name.Variable:  "done"
Text:  " "
Keyword:  "ENDREPEAT"
Text:  " "
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "IF"
Text:  " "
Keyword.Constant:  "true"
Text:  " "
Keyword:  "THEN"
Text:  "<newline>    "
Literal.String.Symbol:  "\"true"
Text:  "<newline>"
Keyword:  "ELSEIF"
Text:  " "
Name.Variable:  "untrue"
Text:  " "
Keyword:  "THEN"
Text:  "<newline>    "
Literal.String.Symbol:  "\"untrue"
Text:  "<newline>"
Keyword:  "ELSE"
Text:  " <newline>    "
Literal.String.Symbol:  "\"false"
Text:  "<newline>"
Keyword:  "ENDIF"
Text:  "<newline><newline>"
Comment.Multiline:  "% Constant literals ;"
Text:  "<newline><newline>"
Comment.Multiline:  "% Integers ;"
Text:  "<newline> "
Literal.Number.Integer:  "123"
Text:  "<newline> "
Literal.Number.Integer:  "-123"
Text:  "<newline> "
Literal.Number.Integer:  "123"
Text:  " "
Literal.Number.Integer:  "456"
Text:  "<newline> "
Literal.Number.Integer:  "456-789"
Text:  " "
Comment.Multiline:  "% - is part of the number -789 ;"
Text:  "<newline><newline>"
Comment.Multiline:  "% Floats ;"
Text:  "<newline> "
Literal.Number.Float:  "123."
Text:  "<newline> "
Literal.Number.Float:  "1."
Text:  " "
Literal.Number.Float:  "2."
Text:  " "
Literal.Number.Float:  "3."
Text:  "<newline> "
Literal.Number.Float:  "12.56"
Text:  "<newline> "
Literal.Number.Float:  "78e3"
Text:  "<newline> "
Literal.Number.Float:  "78e+3"
Text:  "<newline> "
Literal.Number.Float:  "78e-3"
Text:  "<newline> "
Literal.Number.Float:  "90.4e3"
Text:  "<newline> "
Literal.Number.Float:  "90.4e+30"
Text:  "<newline> "
Literal.Number.Float:  "90.4e-30"
Text:  "<newline> "
Literal.Number.Float:  "-123."
Text:  "<newline> "
Literal.Number.Float:  "-1."
Text:  " "
Literal.Number.Float:  "2."
Text:  " "
Literal.Number.Float:  "3."
Text:  "<newline> "
Literal.Number.Float:  "-12.56"
Text:  "<newline> "
Literal.Number.Float:  "-78e3"
Text:  "<newline> "
Literal.Number.Float:  "-78e+3"
Text:  "<newline> "
Literal.Number.Float:  "-78e-3"
Text:  "<newline> "
Literal.Number.Float:  "-90.4e3"
Text:  "<newline> "
Literal.Number.Float:  "-90.4e+30"
Text:  "<newline> "
Literal.Number.Float:  "-90.4e-30"
Text:  "<newline><newline>"
Comment.Multiline:  "% Characters ;"
Text:  "<newline>"
Literal.String.Char:  "`3"
Text:  "<newline>"
Literal.String.Char:  "``"
Text:  "<newline>"
Literal.String.Char:  "`a`b`c"
Text:  "<newline>"
Error:  "`"
Text:  "<newline>"
Comment.Multiline:  "% the previous must not work. ;"
Text:  "<newline><newline>"
Comment.Multiline:  "% Phrases ;"
Text:  "<newline>"
Literal.String.Symbol:  "\"hello"
Text:  "<newline>"
Literal.String.Symbol:  "\"thing"
Text:  "<newline>"
Literal.String.Symbol:  "\"many\"\"\"quotes"
Text:  "<newline>"
Literal.String.Symbol:  "\"\"\"\"\""
Text:  "<newline>"
Literal.String.Symbol:  "\""
Text:  "<newline>"
Literal.String.Symbol:  "\"in"
Punctuation:  "[]"
Literal.String.Symbol:  "\"between"
Text:  "<newline><newline>"
Comment.Multiline:  "% Faults ;"
Text:  "<newline>"
Generic.Error:  "?hello"
Text:  "<newline>"
Generic.Error:  "?thing"
Text:  "<newline>"
Generic.Error:  "?many???question??marks"
Text:  "<newline>"
Generic.Error:  "????"
Text:  "<newline>"
Generic.Error:  "?"
Text:  "<newline>"
Generic.Error:  "?in"
Punctuation:  "{}"
Generic.Error:  "?between"
Text:  "<newline><newline>"
Comment.Multiline:  "% Booleans ;"
Text:  "<newline>"
Literal.Number.Bin:  "l"
Text:  "<newline>"
Literal.Number.Bin:  "o"
Text:  "<newline>"
Literal.Number.Bin:  "looololollllol"
Text:  "<newline>"
Name.Variable:  "lover"
Text:  " "
Comment.Multiline:  "% must not be parsed as boolean. ;"
Text:  "<newline><newline>"
Comment.Multiline:  "% Predefined constants ;"
Text:  "<newline>"
Keyword.Constant:  "true"
Text:  "<newline>"
Keyword.Constant:  "false"
Text:  "<newline>"
Keyword.Constant:  "pi"
Text:  "<newline>"
Keyword.Constant:  "null"
Text:  "<newline><newline>"
Comment.Multiline:  "% Strings ;"
Text:  "<newline>"
Literal.String.Single:  "'hello world'"
Text:  "<newline>"
Literal.String.Single:  "'multiline<newline>String'"
Text:  "<newline>"
Literal.String.Single:  "'escaped"
Literal.String.Escape:  "''"
Literal.String.Single:  "string"
Literal.String.Escape:  "''"
Literal.String.Single:  "here'"
Text:  "<newline>"
Literal.String.Single:  "'<newline>'"
Text:  "<newline><newline>"
Comment.Multiline:  "% Non-keyword names ;"
Text:  "<newline>"
Name.Variable:  "thing"
Text:  " "
Name.Variable:  "here"
Text:  " "
Name.Variable:  "there"
Text:  " "
Name.Variable:  "NotAKeyword"
Text:  "<newline><newline>"
Comment.Multiline:  "% ops and punctuation ;"
Text:  "<newline>"
Operator:  "/"
Punctuation:  "["
Keyword.Pseudo:  "sum"
Punctuation:  ","
Text:  " "
Keyword.Pseudo:  "tally"
Punctuation:  "]"
Text:  "<newline><newline>"
Punctuation:  "("
Name.Variable:  "adasd"
Text:  " "
Operator:  "+"
Punctuation:  ")"
Text:  "<newline>"
