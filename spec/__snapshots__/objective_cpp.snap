Keyword:  "@import"
Text:  " "
Name:  "Foundation"
Punctuation:  ";"
Text:  "<newline>"
Comment.Preproc:  "#include"
Text:  " "
Comment.PreprocFile:  "<cheader.h>"
Comment.Preproc:  "<newline>#include"
Text:  " "
Comment.PreprocFile:  "<cppheader>"
Comment.Preproc:  "<newline>#import <objective-cheader.h><newline>"
Text:  "<newline>"
Keyword:  "@class"
Text:  " "
Name.Class:  "ForwardDeclare"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "@interface"
Text:  " "
Name.Class:  "BaseClass"
Text:  " "
Punctuation:  ":"
Text:  " "
Name.Class:  "NSObject"
Text:  "<newline>"
Keyword:  "-"
Text:  " "
Punctuation:  "("
Name:  "instancetype"
Punctuation:  ")"
Name:  "initWithForwardDeclare"
Punctuation:  "("
Name:  "ForwardDeclare"
Text:  " "
Operator:  "*"
Punctuation:  ")"
Name:  "ForwardDeclare"
Text:  " "
Name:  "NS_DESIGNATED_INITIALIZER"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "@end"
Text:  "<newline><newline>"
Name:  "NS_ASSUME_NONNULL_BEGIN"
Text:  "<newline><newline>"
Keyword:  "@interface"
Text:  " "
Name.Class:  "GenericClass"
Operator:  "<"
Name:  "__covariant"
Text:  " "
Name:  "Type"
Text:  " "
Operator:  ":"
Text:  " "
Name:  "id"
Operator:  "<"
Name:  "NSCopying"
Operator:  ">>"
Text:  " "
Operator:  ":"
Text:  " "
Name:  "NSObject"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t"
Name:  "std"
Operator:  "::"
Name:  "unique_ptr"
Operator:  "<"
Name:  "Type"
Operator:  ">"
Text:  " "
Name:  "_storage"
Punctuation:  ";"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword:  "-"
Text:  " "
Punctuation:  "("
Keyword.Type:  "void"
Punctuation:  ")"
Name.Function:  "takesABlock"
Punctuation:  ":("
Keyword.Type:  "void"
Text:  " "
Operator:  "*"
Text:  " "
Punctuation:  "("
Operator:  "^"
Name:  "_Nullable"
Punctuation:  ")("
Name:  "NSString"
Text:  " "
Operator:  "*"
Punctuation:  ","
Text:  " "
Name:  "T"
Text:  " "
Operator:  "*"
Punctuation:  ","
Text:  " "
Punctuation:  "...))"
Name.Variable:  "block"
Text:  " "
Name:  "__attribute__"
Punctuation:  "(("
Name:  "deprecated"
Punctuation:  "));"
Text:  "<newline>"
Keyword:  "@end"
Text:  "<newline><newline>"
Keyword:  "@implementation"
Text:  " "
Name.Class:  "GenericClass"
Text:  " "
Punctuation:  "{"
Text:  "<newline>  "
Keyword:  "@private"
Text:  "<newline>\t"
Keyword:  "struct"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t\t"
Keyword.Type:  "int"
Text:  " "
Name:  "a"
Punctuation:  ";"
Text:  "<newline>\t\t"
Name:  "NSArray"
Operator:  "<"
Name:  "NSNumber"
Text:  " "
Operator:  "*>"
Text:  " "
Name:  "b"
Punctuation:  ";"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  " "
Name:  "_moreStuff"
Punctuation:  ";"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
Keyword:  "@end"
Text:  "<newline><newline>"
Keyword:  "template"
Text:  " "
Operator:  "<"
Keyword:  "typename"
Text:  " "
Name.Class:  "T"
Punctuation:  ","
Text:  " "
Keyword:  "typename"
Text:  " "
Name.Class:  "Lambda"
Punctuation:  ">"
Text:  "<newline>"
Keyword:  "auto"
Text:  " "
Name.Function:  "takesALambda"
Punctuation:  "("
Name:  "GenericClass"
Operator:  "<"
Name:  "T"
Text:  " "
Operator:  "*>"
Text:  " "
Operator:  "*"
Name:  "generic"
Punctuation:  ","
Text:  " "
Name:  "Lambda"
Text:  " "
Name:  "lambda"
Punctuation:  ")"
Text:  " "
Operator:  "->"
Text:  " "
Keyword:  "decltype"
Punctuation:  "("
Name:  "generic"
Operator:  "."
Name.Builtin.Pseudo:  "class"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t"
Punctuation:  "["
Name:  "generic"
Text:  " "
Name.Function:  "takesABlock"
Punctuation:  ":"
Operator:  "^"
Punctuation:  "("
Literal.String:  "@\"Hello, world!\""
Punctuation:  ","
Text:  " "
Keyword:  "new"
Text:  " "
Name:  "T"
Punctuation:  "(),"
Text:  " "
Literal.Number.Integer:  "3"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t\t"
Name:  "lambda"
Punctuation:  "(@{"
Text:  "<newline>\t\t\t"
Literal.String:  "@\"A\""
Text:  " "
Operator:  ":"
Text:  " "
Name.Builtin:  "@YES"
Punctuation:  ","
Text:  "<newline>\t\t\t"
Literal.String:  "@\"literal\""
Text:  " "
Operator:  ":"
Text:  " "
Literal.Number.Integer:  "@1"
Punctuation:  ","
Text:  "<newline>\t\t\t"
Literal.String:  "@\"test\""
Text:  " "
Operator:  ":"
Text:  " "
Punctuation:  "@["
Text:  " "
Keyword:  "reinterpret_cast"
Operator:  "<"
Name:  "NSArray"
Text:  " "
Operator:  "*>"
Punctuation:  "("
Name:  "generic"
Punctuation:  ")"
Text:  " "
Punctuation:  "],"
Text:  "<newline>\t\t"
Punctuation:  "})"
Text:  "<newline>\t"
Punctuation:  "}];"
Text:  "<newline>\t"
Keyword:  "return"
Text:  " "
Name:  "generic"
Operator:  "."
Name.Builtin.Pseudo:  "class"
Punctuation:  ";"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Name:  "NS_ASSUME_NONNULL_END"
Text:  "<newline><newline>"
Keyword.Type:  "void"
Text:  " "
Name.Function:  "function"
Punctuation:  "()"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t"
Keyword:  "static_assert"
Punctuation:  "("
Keyword:  "sizeof"
Punctuation:  "("
Name:  "id"
Punctuation:  ")"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "8"
Punctuation:  ","
Text:  " "
Literal.String:  "\"ILP static assert\""
Punctuation:  ");"
Text:  "<newline>\t"
Keyword:  "auto"
Text:  " "
Name:  "result"
Text:  " "
Operator:  "="
Text:  " "
Name:  "takesALambda"
Punctuation:  "(["
Name:  "GenericClass"
Text:  " "
Name.Function:  "new"
Punctuation:  "],"
Text:  " "
Punctuation:  "["
Operator:  "&"
Punctuation:  "]("
Name:  "NSDictionary"
Operator:  "<"
Name:  "NSString"
Text:  " "
Operator:  "*"
Punctuation:  ","
Text:  " "
Name:  "id"
Operator:  ">"
Text:  " "
Name:  "things"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t\t"
Punctuation:  "["
Name:  "things"
Text:  " "
Punctuation:  "?"
Text:  " "
Name:  "things"
Text:  " "
Punctuation:  ":"
Text:  " "
Punctuation:  "["
Name:  "BaseClass"
Text:  " "
Name.Function:  "initWithForwardDeclare"
Punctuation:  ":"
Name:  "ForwardDeclare"
Punctuation:  "."
Name:  "sharedForwardDeclare"
Punctuation:  "]"
Text:  "<newline>\t\t    "
Name.Label:  "keysSortedByValueUsingSelector:"
Keyword:  "@selector"
Punctuation:  "("
Name.Builtin.Pseudo:  "class"
Punctuation:  ")];"
Text:  "<newline>\t"
Punctuation:  "});"
Text:  "<newline>\t"
Keyword:  "@try"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t\t"
Keyword:  "throw"
Text:  " "
Keyword:  "throw"
Text:  " "
Name:  "std"
Operator:  "::"
Name:  "exception"
Punctuation:  "();"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline>\t"
Keyword:  "@catch"
Text:  " "
Punctuation:  "("
Name:  "NSException"
Text:  " "
Operator:  "*"
Name:  "exception"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t\t"
Name:  "std"
Operator:  "::"
Name:  "cout"
Text:  " "
Operator:  "<<"
Text:  " "
Name:  "std"
Operator:  "::"
Name:  "string"
Punctuation:  "("
Name:  "exception"
Punctuation:  "."
Name:  "description"
Punctuation:  "."
Name:  "UTF8String"
Punctuation:  ")"
Text:  " "
Operator:  "<<"
Text:  " "
Name:  "std"
Operator:  "::"
Name:  "endl"
Punctuation:  ";"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword:  "template"
Text:  " "
Operator:  "<"
Keyword:  "class"
Text:  " "
Name.Class:  "F"
Punctuation:  ","
Text:  " "
Keyword:  "class"
Operator:  "..."
Text:  " "
Name.Class:  "Args"
Punctuation:  ">"
Text:  "<newline>"
Keyword:  "explicit"
Text:  " "
Name.Function:  "thread"
Punctuation:  "("
Name:  "F"
Text:  " "
Operator:  "&&"
Name:  "f"
Punctuation:  ","
Text:  " "
Name:  "Args"
Text:  " "
Operator:  "&&"
Punctuation:  "..."
Text:  " "
Name:  "args"
Punctuation:  ");"
Text:  "<newline>"
