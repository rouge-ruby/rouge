Keyword.Reserved:  "SELECT"
Text:  " "
Name:  "e"
Punctuation:  "."
Name:  "first_name"
Text:  " "
Keyword.Reserved:  "AS"
Text:  " "
Operator:  "\""
Name.Variable:  "First Name"
Operator:  "\""
Punctuation:  ","
Text:  " "
Name:  "e"
Punctuation:  "."
Name:  "last_name"
Text:  " "
Keyword.Reserved:  "AS"
Text:  " "
Operator:  "\""
Name.Variable:  "Last Name"
Operator:  "\""
Text:  "<newline>    "
Punctuation:  ","
Text:  " "
Name:  "d"
Punctuation:  "."
Name:  "department_name"
Text:  " "
Keyword.Reserved:  "AS"
Text:  " "
Operator:  "\""
Name.Variable:  "Department <newline>Name"
Operator:  "\""
Text:  "<newline>    "
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "123"
Text:  " "
Keyword.Reserved:  "AS"
Text:  " "
Operator:  "\""
Name.Variable:  "integer val"
Operator:  "\""
Text:  " "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  ".7"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "trailing dec"
Operator:  "\""
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "123."
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "really an int"
Operator:  "\""
Text:  "<newline>    "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "123.456"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "float"
Operator:  "\""
Text:  " "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "1.27E-2"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "exp notation"
Operator:  "\""
Text:  "<newline>    "
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "-123"
Text:  " "
Keyword.Reserved:  "AS"
Text:  " "
Operator:  "\""
Name.Variable:  "n integer val"
Operator:  "\""
Text:  " "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "-.7"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "n trailing dec"
Operator:  "\""
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "-123.D"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "n really an int"
Operator:  "\""
Text:  "<newline>    "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "-123.456"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "n float"
Operator:  "\""
Text:  " "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "-1.27E-2"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "n exp notation"
Operator:  "\""
Text:  "<newline>    "
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "+123"
Text:  " "
Keyword.Reserved:  "AS"
Text:  " "
Operator:  "\""
Name.Variable:  "p integer val"
Operator:  "\""
Text:  " "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "+.7"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "p trailing dec"
Operator:  "\""
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "+123."
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "p really an int"
Operator:  "\""
Text:  "<newline>    "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "+123.456f"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "p float"
Operator:  "\""
Text:  " "
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "+1.27E2D"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Operator:  "\""
Name.Variable:  "p exp notation, double"
Operator:  "\""
Text:  "<newline>"
Keyword.Reserved:  "FROM"
Text:  " "
Name:  "hr"
Punctuation:  "."
Name:  "employees"
Text:  " "
Name:  "e"
Text:  "<newline>"
Keyword:  "JOIN"
Text:  " "
Name:  "hr"
Punctuation:  "."
Name:  "departments"
Text:  " "
Name:  "d"
Text:  "<newline>    "
Keyword.Reserved:  "ON"
Text:  " "
Name:  "e"
Punctuation:  "."
Name:  "department_id"
Text:  " "
Operator:  "="
Text:  " "
Name:  "d"
Punctuation:  "."
Name:  "department_id"
Text:  "<newline>"
Keyword.Reserved:  "WHERE"
Text:  " "
Name:  "e"
Punctuation:  "."
Name:  "first_name"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "'"
Literal.String.Single:  "Bruce"
Operator:  "'"
Text:  " "
Operator.Word:  "AND"
Text:  " "
Name:  "e"
Punctuation:  "."
Name:  "last_name"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "'"
Literal.String.Single:  "Lee"
Operator:  "'"
Text:  "<newline>"
Keyword.Reserved:  "ORDER"
Text:  " "
Keyword.Reserved:  "BY"
Text:  " "
Name:  "d"
Punctuation:  "."
Name:  "department_name"
Text:  "<newline>"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword.Reserved:  "CREATE"
Text:  " "
Keyword.Reserved:  "OR"
Text:  " <newline> "
Keyword.Reserved:  "REPLACE"
Text:  " <newline>  "
Keyword.Reserved:  "PACKAGE"
Text:  " <newline>   "
Name:  "sample_pkg"
Text:  "<newline>    "
Keyword:  "PROCEDURE"
Text:  " "
Name:  "transform_perl_regexp"
Punctuation:  "("
Name:  "p_re"
Text:  " "
Keyword.Type:  "VARCHAR2"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "RETURN"
Text:  " "
Keyword.Type:  "VARCHAR2"
Text:  "<newline>    "
Keyword:  "DETERMINISTIC"
Text:  "<newline>    "
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Text:  " "
Name:  "sample_pkg"
Punctuation:  ";"
Text:  "<newline>"
Operator:  "/"
Text:  "<newline>"
Keyword.Reserved:  "CREATE"
Text:  " "
Keyword.Reserved:  "OR"
Text:  " "
Keyword.Reserved:  "REPLACE"
Text:  " "
Keyword.Reserved:  "PACKAGE"
Text:  " "
Keyword.Reserved:  "BODY"
Text:  " "
Name:  "sample_pkg"
Text:  "<newline><newline>    "
Keyword:  "FUNCTION"
Text:  " "
Name:  "transform_perl_regexp"
Punctuation:  "("
Name:  "p_re"
Text:  " "
Keyword.Type:  "VARCHAR2"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "RETURN"
Text:  " "
Keyword.Type:  "VARCHAR2"
Text:  "<newline>    "
Keyword:  "DETERMINISTIC"
Text:  "<newline>    "
Keyword.Reserved:  "IS"
Text:  "<newline>        "
Comment.Multiline:  "/*<newline>            strip comment blocks that start with at least one blank, then<newline>            '--' or '#', then everything to end of line or string<newline> ===> shows /* does not start a new comment<newline>        */"
Text:  "<newline> "
Comment.Single:  "-- quoted string with embedded newline"
Text:  "<newline>        "
Name:  "c_strip_comments_regexp"
Text:  " "
Keyword:  "CONSTANT"
Text:  " "
Keyword.Type:  "VARCHAR2"
Punctuation:  "("
Literal.Number.Integer:  "32767"
Punctuation:  ")"
Text:  " "
Operator:  ":="
Text:  " "
Operator:  "q'+"
Literal.String.Other:  "[[:blank:]](--|#).*($|<newline>)"
Operator:  "+'"
Punctuation:  ";"
Text:  "<newline>"
Comment.Preproc:  "$IF"
Text:  " "
Comment.Preproc:  "$$is_dummy_needed"
Text:  " "
Comment.Preproc:  "$then"
Text:  "<newline>        "
Name:  "c_dummy"
Text:  "                 "
Keyword:  "CONSTANT"
Text:  " "
Keyword.Type:  "VARCHAR2"
Punctuation:  "("
Literal.Number.Integer:  "30"
Punctuation:  ")"
Text:  " "
Operator:  ":="
Text:  " "
Operator:  "'"
Literal.String.Single:  "newline><newline><anotherline"
Operator:  "'"
Punctuation:  ";"
Text:  "<newline>        "
Name:  "v_rec"
Text:  " "
Name:  "hr"
Punctuation:  "."
Name:  "employees"
Name.Attribute:  "%ROWTYPE"
Punctuation:  ";"
Text:  "<newline>        "
Name:  "v_dummy2"
Text:  " "
Name:  "hr"
Punctuation:  "."
Name:  "employees"
Punctuation:  "."
Name:  "employee_id"
Name.Attribute:  "%type"
Punctuation:  ";"
Text:  "<newline>"
Comment.Preproc:  "$End"
Text:  "<newline>        <newline>    "
Keyword:  "BEGIN"
Text:  "<newline>    "
Comment.Single:  "-- note that <newline>, \\r and \\t will be replaced if not preceded by a \\"
Text:  "<newline>    "
Comment.Single:  "-- \\<newline> and \\\\t will not be replaced. Unfortunately, neither will \\\\<newline> or \\\\\\t."
Text:  "<newline>    "
Comment.Single:  "-- If you need \\\\<newline>, use \\\\ <newline> since the space will be removed."
Text:  "<newline>    "
Comment.Single:  "-- We are not parsing into tokens, so this is as close as we can get cheaply"
Text:  "<newline>      "
Keyword:  "RETURN"
Text:  "<newline>        "
Name.Function:  "REGEXP_REPLACE"
Punctuation:  "("
Text:  "<newline>          "
Name.Function:  "REGEXP_REPLACE"
Punctuation:  "("
Text:  "<newline>            "
Name.Function:  "REGEXP_REPLACE"
Punctuation:  "("
Text:  "<newline>              "
Name.Function:  "REGEXP_REPLACE"
Punctuation:  "("
Text:  "<newline>                "
Name.Function:  "REGEXP_REPLACE"
Punctuation:  "("
Name:  "p_re"
Punctuation:  ","
Text:  " "
Name:  "c_strip_comments_regexp"
Punctuation:  ","
Text:  " "
Keyword.Reserved:  "NULL"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Operator:  "'"
Literal.String.Single:  "m"
Operator:  "'"
Punctuation:  ")"
Text:  " "
Comment.Single:  "-- strip comments"
Text:  "<newline>                "
Punctuation:  ","
Text:  " "
Operator:  "'"
Literal.String.Escape:  "\\s"
Literal.String.Single:  "+"
Operator:  "'"
Punctuation:  ","
Text:  " "
Keyword.Reserved:  "NULL"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Text:  "                 "
Comment.Single:  "-- strip spaces and newlines too like 'x' modifier"
Text:  "<newline>              "
Punctuation:  ")"
Text:  "<newline>              "
Punctuation:  ","
Text:  " "
Operator:  "q'["
Literal.String.Other:  "(^|[^\\\\])\\\\t"
Operator:  "]'"
Punctuation:  ","
Text:  " "
Operator:  "'"
Literal.String.Escape:  "\\1"
Operator:  "'||"
Name.Function:  "CHR"
Punctuation:  "("
Literal.Number.Integer:  "9"
Punctuation:  "),"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Text:  "    "
Comment.Single:  "-- replace \\t with tab character value so it works like in perl"
Text:  "<newline>            "
Punctuation:  ")"
Text:  "<newline>            "
Punctuation:  ","
Text:  " "
Operator:  "q'{"
Literal.String.Other:  "(^|[^\\\\])\\<newline>"
Operator:  "}'"
Punctuation:  ","
Text:  " "
Operator:  "'"
Literal.String.Escape:  "\\1"
Operator:  "'||"
Name.Function:  "CHR"
Punctuation:  "("
Literal.Number.Integer:  "10"
Punctuation:  "),"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Text:  "       "
Comment.Single:  "-- replace <newline> with newline character value so it works like in perl"
Text:  "<newline>          "
Punctuation:  ")"
Text:  "<newline>          "
Punctuation:  ","
Text:  " "
Operator:  "q'("
Literal.String.Other:  "(^|[^\\\\])\\\\r"
Operator:  ")'"
Punctuation:  ","
Text:  " "
Operator:  "'"
Literal.String.Escape:  "\\1"
Operator:  "'||"
Name.Function:  "CHR"
Punctuation:  "("
Literal.Number.Integer:  "13"
Punctuation:  "),"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Text:  "         "
Comment.Single:  "-- replace \\r with CR character value so it works like in perl"
Text:  "<newline>        "
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  ";"
Text:  "<newline><newline>    "
Keyword:  "END"
Text:  " "
Name:  "transform_perl_regexp"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Text:  "  "
Name:  "sample_pkg"
Punctuation:  ";"
Text:  "<newline>"
Operator:  "/"
Text:  "<newline>"
Keyword:  "BEGIN"
Text:  "<newline>        "
Comment.Single:  "-- dot words after parens"
Text:  "<newline>        "
Name:  "v_sql"
Text:  " "
Operator:  ":="
Text:  " "
Operator:  "'"
Literal.String.Single:  "INSERT INTO ora$ptt_csv(<newline>"
Operator:  "'"
Text:  "<newline>        "
Operator:  "||"
Name:  "v_cols"
Punctuation:  "."
Name:  "map"
Punctuation:  "("
Operator:  "'"
Literal.String.Single:  "\"$_\""
Operator:  "'"
Punctuation:  ")."
Name:  "join"
Punctuation:  "("
Operator:  "'"
Literal.String.Single:  ", "
Operator:  "'"
Punctuation:  ")"
Text:  "             "
Comment.Single:  "-- the column names in dquotes"
Text:  "<newline>        "
Operator:  "||'"
Literal.String.Single:  "<newline>) VALUES (<newline>"
Operator:  "'"
Text:  "<newline>        "
Operator:  "||"
Name:  "v_cols"
Punctuation:  "."
Name:  "map"
Punctuation:  "("
Operator:  "'"
Literal.String.Single:  ":$##index_val##"
Operator:  "'"
Punctuation:  ")."
Name:  "join"
Punctuation:  "("
Operator:  "'"
Literal.String.Single:  ", "
Operator:  "'"
Punctuation:  ")"
Text:  "  "
Comment.Single:  "-- :1, :2, :3, etc... bind placeholders"
Text:  "<newline>        "
Operator:  "||'"
Literal.String.Single:  "<newline>)"
Operator:  "'"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "END"
Punctuation:  ";"
Text:  "<newline>"
Comment.Single:  "-- dot words with dquotes"
Text:  "<newline>"
Keyword.Reserved:  "SELECT"
Text:  " "
Name:  "X"
Punctuation:  "."
Operator:  "\""
Name.Variable:  "myObject"
Operator:  "\""
Punctuation:  "."
Name:  "get"
Punctuation:  "(),"
Text:  " "
Name:  "X"
Punctuation:  "."
Operator:  "\""
Name.Variable:  "myObject"
Operator:  "\""
Punctuation:  "."
Name.Function:  "COUNT"
Punctuation:  ","
Text:  " "
Name:  "X"
Punctuation:  "."
Operator:  "\""
Name.Variable:  "myObject"
Operator:  "\""
Punctuation:  "."
Name:  "obscureLocalMethod"
Punctuation:  "()"
Text:  " <newline>"
Keyword.Reserved:  "FROM"
Text:  " "
Name:  "a"
Text:  " "
Name:  "X"
Text:  "<newline>"
Punctuation:  ";"
Text:  "<newline> "
Comment.Single:  "-- shows a comment on last line"
Text:  "<newline>"
