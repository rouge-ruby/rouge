Comment.Multiline:  "/*<newline>This file is copied from official Pony examples at:<newline>https://github.com/ponylang/ponyc/blob/master/examples/mandelbrot/mandelbrot.pony<newline>*/"
Text:  "<newline><newline>"
Keyword.Reserved:  "use"
Text:  " "
Literal.String:  "\"files\""
Text:  "<newline>"
Keyword.Reserved:  "use"
Text:  " "
Literal.String:  "\"options\""
Text:  "<newline>"
Keyword.Reserved:  "use"
Text:  " "
Literal.String:  "\"collections\""
Text:  "<newline><newline>"
Keyword.Reserved:  "actor"
Text:  " "
Name.Class:  "Worker"
Text:  "<newline>  "
Keyword.Reserved:  "new"
Text:  " "
Name:  "mandelbrot"
Punctuation:  "("
Name:  "main"
Operator:  ":"
Text:  " "
Name.Class:  "Main"
Punctuation:  ","
Text:  " "
Name:  "x"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Punctuation:  ","
Text:  " "
Name:  "y"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Punctuation:  ","
Text:  " "
Name:  "width"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Punctuation:  ","
Text:  "<newline>    "
Name:  "iterations"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Punctuation:  ","
Text:  " "
Name:  "limit"
Operator:  ":"
Text:  " "
Name.Class:  "F32"
Punctuation:  ","
Text:  " "
Name:  "real"
Operator:  ":"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]"
Text:  " "
Keyword.Declaration:  "val"
Punctuation:  ","
Text:  "<newline>    "
Name:  "imaginary"
Operator:  ":"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]"
Text:  " "
Keyword.Declaration:  "val"
Punctuation:  ")"
Text:  "<newline>  "
Operator:  "=>"
Text:  "<newline>    "
Keyword.Reserved:  "var"
Text:  " "
Name:  "view"
Operator:  ":"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "U8"
Punctuation:  "]"
Text:  " "
Keyword.Declaration:  "iso"
Text:  " "
Operator:  "="
Text:  "<newline>      "
Keyword.Reserved:  "recover"
Text:  "<newline>        "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "U8"
Punctuation:  "](("
Name:  "y"
Text:  " "
Operator:  "-"
Text:  " "
Name:  "x"
Punctuation:  ")"
Text:  " "
Operator:  "*"
Text:  " "
Punctuation:  "("
Name:  "width"
Text:  " "
Operator:  ">>"
Text:  " "
Literal.Number.Integer:  "3"
Punctuation:  "))"
Text:  "<newline>      "
Keyword.Reserved:  "end"
Text:  "<newline><newline>    "
Keyword.Reserved:  "let"
Text:  " "
Name:  "group_r"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]."
Operator:  ">"
Name:  "undefined"
Punctuation:  "("
Literal.Number.Integer:  "8"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Reserved:  "let"
Text:  " "
Name:  "group_i"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]."
Operator:  ">"
Name:  "undefined"
Punctuation:  "("
Literal.Number.Integer:  "8"
Punctuation:  ")"
Text:  "<newline><newline>    "
Keyword.Reserved:  "var"
Text:  " "
Name:  "row"
Text:  " "
Operator:  "="
Text:  " "
Name:  "x"
Text:  "<newline><newline>    "
Keyword.Reserved:  "try"
Text:  "<newline>      "
Keyword.Reserved:  "while"
Text:  " "
Name:  "row"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "y"
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>        "
Keyword.Reserved:  "let"
Text:  " "
Name:  "prefetch_i"
Text:  " "
Operator:  "="
Text:  " "
Name:  "imaginary"
Punctuation:  "("
Name:  "row"
Punctuation:  ")"
Text:  "<newline><newline>        "
Keyword.Reserved:  "var"
Text:  " "
Name:  "col"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline><newline>        "
Keyword.Reserved:  "while"
Text:  " "
Name:  "col"
Text:  " "
Operator:  "<"
Text:  " "
Name:  "width"
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>          "
Keyword.Reserved:  "var"
Text:  " "
Name:  "j"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline><newline>          "
Keyword.Reserved:  "while"
Text:  " "
Name:  "j"
Text:  " "
Operator:  "<"
Text:  " "
Literal.Number.Integer:  "8"
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>            "
Name:  "group_r"
Punctuation:  "."
Name:  "update"
Punctuation:  "("
Name:  "j"
Punctuation:  ","
Text:  " "
Name:  "real"
Punctuation:  "("
Name:  "col"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "j"
Punctuation:  "))"
Text:  "<newline>            "
Name:  "group_i"
Punctuation:  "."
Name:  "update"
Punctuation:  "("
Name:  "j"
Punctuation:  ","
Text:  " "
Name:  "prefetch_i"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "j"
Text:  " "
Operator:  "="
Text:  " "
Name:  "j"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>          "
Keyword.Reserved:  "end"
Text:  "<newline><newline>          "
Keyword.Reserved:  "var"
Text:  " "
Name:  "bitmap"
Operator:  ":"
Text:  " "
Name.Class:  "U8"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0xFF"
Text:  "<newline>          "
Keyword.Reserved:  "var"
Text:  " "
Name:  "n"
Text:  " "
Operator:  "="
Text:  " "
Name:  "iterations"
Text:  "<newline><newline>          "
Keyword.Reserved:  "repeat"
Text:  "<newline>            "
Keyword.Reserved:  "var"
Text:  " "
Name:  "mask"
Operator:  ":"
Text:  " "
Name.Class:  "U8"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Hex:  "0x80"
Text:  "<newline>            "
Keyword.Reserved:  "var"
Text:  " "
Name:  "k"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline><newline>            "
Keyword.Reserved:  "while"
Text:  " "
Name:  "k"
Text:  " "
Operator:  "<"
Text:  " "
Literal.Number.Integer:  "8"
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>              "
Keyword.Reserved:  "let"
Text:  " "
Name:  "r"
Text:  " "
Operator:  "="
Text:  " "
Name:  "group_r"
Punctuation:  "("
Name:  "k"
Punctuation:  ")"
Text:  "<newline>              "
Keyword.Reserved:  "let"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Name:  "group_i"
Punctuation:  "("
Name:  "k"
Punctuation:  ")"
Text:  "<newline><newline>              "
Name:  "group_r"
Punctuation:  "."
Name:  "update"
Punctuation:  "("
Name:  "k"
Punctuation:  ","
Text:  " "
Punctuation:  "(("
Name:  "r"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "r"
Punctuation:  ")"
Text:  " "
Operator:  "-"
Text:  " "
Punctuation:  "("
Name:  "i"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "i"
Punctuation:  "))"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "real"
Punctuation:  "("
Name:  "col"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "k"
Punctuation:  "))"
Text:  "<newline>              "
Name:  "group_i"
Punctuation:  "."
Name:  "update"
Punctuation:  "("
Name:  "k"
Punctuation:  ","
Text:  " "
Punctuation:  "("
Literal.Number.Float:  "2.0"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "r"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "i"
Punctuation:  ")"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "prefetch_i"
Punctuation:  ")"
Text:  "<newline><newline>              "
Keyword.Reserved:  "if"
Text:  " "
Punctuation:  "(("
Name:  "r"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "r"
Punctuation:  ")"
Text:  " "
Operator:  "+"
Text:  " "
Punctuation:  "("
Name:  "i"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "i"
Punctuation:  "))"
Text:  " "
Operator:  ">"
Text:  " "
Name:  "limit"
Text:  " "
Keyword.Reserved:  "then"
Text:  "<newline>                "
Name:  "bitmap"
Text:  " "
Operator:  "="
Text:  " "
Name:  "bitmap"
Text:  " "
Keyword.Reserved:  "and"
Text:  " "
Keyword.Reserved:  "not"
Text:  " "
Name:  "mask"
Text:  "<newline>              "
Keyword.Reserved:  "end"
Text:  "<newline><newline>              "
Name:  "mask"
Text:  " "
Operator:  "="
Text:  " "
Name:  "mask"
Text:  " "
Operator:  ">>"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>              "
Name:  "k"
Text:  " "
Operator:  "="
Text:  " "
Name:  "k"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>            "
Keyword.Reserved:  "end"
Text:  "<newline>          "
Keyword.Reserved:  "until"
Text:  " "
Punctuation:  "("
Name:  "bitmap"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ")"
Text:  " "
Name:  "or"
Text:  " "
Punctuation:  "(("
Name:  "n"
Text:  " "
Operator:  "="
Text:  " "
Name:  "n"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "end"
Text:  "<newline><newline>          "
Name:  "view"
Punctuation:  "."
Name:  "push"
Punctuation:  "("
Name:  "bitmap"
Punctuation:  ")"
Text:  "<newline><newline>          "
Name:  "col"
Text:  " "
Operator:  "="
Text:  " "
Name:  "col"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "8"
Text:  "<newline>        "
Keyword.Reserved:  "end"
Text:  "<newline>        "
Name:  "row"
Text:  " "
Operator:  "="
Text:  " "
Name:  "row"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>      "
Keyword.Reserved:  "end"
Text:  "<newline><newline>      "
Name:  "main"
Punctuation:  "."
Name:  "draw"
Punctuation:  "("
Name:  "x"
Text:  " "
Operator:  "*"
Text:  " "
Punctuation:  "("
Name:  "width"
Text:  " "
Operator:  ">>"
Text:  " "
Literal.Number.Integer:  "3"
Punctuation:  "),"
Text:  " "
Keyword.Reserved:  "consume"
Text:  " "
Name:  "view"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Reserved:  "end"
Text:  "<newline><newline>"
Keyword.Reserved:  "actor"
Text:  " "
Name.Class:  "Main"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "iterations"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "50"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "limit"
Operator:  ":"
Text:  " "
Name.Class:  "F32"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "4.0"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "chunks"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "16"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "width"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "16000"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "actors"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "header"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "real"
Operator:  ":"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]"
Text:  " "
Keyword.Declaration:  "val"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "recover"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]"
Text:  " "
Keyword.Reserved:  "end"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "imaginary"
Operator:  ":"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]"
Text:  " "
Keyword.Declaration:  "val"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "recover"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]"
Text:  " "
Keyword.Reserved:  "end"
Text:  "<newline>  "
Keyword.Reserved:  "var"
Text:  " "
Name:  "outfile"
Operator:  ":"
Text:  " "
Punctuation:  "("
Name.Class:  "File"
Text:  " "
Operator:  "|"
Text:  " "
Name.Class:  "None"
Punctuation:  ")"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "None"
Text:  "<newline><newline>  "
Keyword.Reserved:  "new"
Text:  " "
Name:  "create"
Punctuation:  "("
Name:  "env"
Operator:  ":"
Text:  " "
Name.Class:  "Env"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>    "
Keyword.Reserved:  "try"
Text:  "<newline>      "
Name:  "arguments"
Punctuation:  "("
Name:  "env"
Punctuation:  ")"
Text:  "<newline><newline>      "
Keyword.Reserved:  "let"
Text:  " "
Name:  "length"
Text:  " "
Operator:  "="
Text:  " "
Name:  "width"
Text:  "<newline>      "
Keyword.Reserved:  "let"
Text:  " "
Name:  "recip_width"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "2.0"
Text:  " "
Operator:  "/"
Text:  " "
Name:  "width"
Punctuation:  "."
Name:  "f32"
Punctuation:  "()"
Text:  "<newline><newline>      "
Keyword.Reserved:  "var"
Text:  " "
Name:  "r"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "recover"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]("
Name:  "length"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "end"
Text:  "<newline>      "
Keyword.Reserved:  "var"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "recover"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "F32"
Punctuation:  "]("
Name:  "length"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "end"
Text:  "<newline><newline>      "
Keyword.Reserved:  "for"
Text:  " "
Name:  "j"
Text:  " "
Keyword.Reserved:  "in"
Text:  " "
Name.Class:  "Range"
Punctuation:  "("
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Name:  "width"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>        "
Name:  "r"
Punctuation:  "."
Name:  "push"
Punctuation:  "(("
Name:  "recip_width"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "j"
Punctuation:  "."
Name:  "f32"
Punctuation:  "())"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Float:  "1.5"
Punctuation:  ")"
Text:  "<newline>        "
Name:  "i"
Punctuation:  "."
Name:  "push"
Punctuation:  "(("
Name:  "recip_width"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "j"
Punctuation:  "."
Name:  "f32"
Punctuation:  "())"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Float:  "1.0"
Punctuation:  ")"
Text:  "<newline>      "
Keyword.Reserved:  "end"
Text:  "<newline><newline>      "
Name:  "real"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "consume"
Text:  " "
Name:  "r"
Text:  "<newline>      "
Name:  "imaginary"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "consume"
Text:  " "
Name:  "i"
Text:  "<newline><newline>      "
Name:  "spawn_actors"
Punctuation:  "()"
Text:  "<newline>      "
Name:  "create_outfile"
Punctuation:  "()"
Text:  "<newline>    "
Keyword.Reserved:  "end"
Text:  "<newline><newline>  "
Keyword.Reserved:  "be"
Text:  " "
Name:  "draw"
Punctuation:  "("
Name:  "offset"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Punctuation:  ","
Text:  " "
Name:  "pixels"
Operator:  ":"
Text:  " "
Name.Class:  "Array"
Punctuation:  "["
Name.Class:  "U8"
Punctuation:  "]"
Text:  " "
Keyword.Declaration:  "val"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>    "
Keyword.Reserved:  "match"
Text:  " "
Name:  "outfile"
Text:  "<newline>    "
Operator:  "|"
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "out"
Operator:  ":"
Text:  " "
Name.Class:  "File"
Text:  " "
Operator:  "=>"
Text:  "<newline>      "
Name:  "out"
Punctuation:  "."
Name:  "seek_start"
Punctuation:  "("
Name:  "header"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "offset"
Punctuation:  ")"
Text:  "<newline>      "
Name:  "out"
Punctuation:  "."
Name:  "write"
Punctuation:  "("
Name:  "pixels"
Punctuation:  ")"
Text:  "<newline>      "
Keyword.Reserved:  "if"
Text:  " "
Punctuation:  "("
Name:  "actors"
Text:  " "
Operator:  "="
Text:  " "
Name:  "actors"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Keyword.Reserved:  "then"
Text:  "<newline>        "
Name:  "out"
Punctuation:  "."
Name:  "dispose"
Punctuation:  "()"
Text:  "<newline>      "
Keyword.Reserved:  "end"
Text:  "<newline>    "
Keyword.Reserved:  "end"
Text:  "<newline><newline>  "
Keyword.Reserved:  "fun"
Text:  " "
Keyword.Declaration:  "ref"
Text:  " "
Name:  "create_outfile"
Punctuation:  "()"
Text:  " "
Operator:  "=>"
Text:  "<newline>    "
Keyword.Reserved:  "match"
Text:  " "
Name:  "outfile"
Text:  "<newline>    "
Operator:  "|"
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "f"
Operator:  ":"
Text:  " "
Name.Class:  "File"
Text:  " "
Operator:  "=>"
Text:  "<newline>      "
Name:  "f"
Punctuation:  "."
Name:  "print"
Punctuation:  "("
Literal.String:  "\"P4"
Literal.String.Escape:  "<newline>"
Literal.String:  " \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "width"
Punctuation:  "."
Name:  "string"
Punctuation:  "()"
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\" \""
Text:  " "
Operator:  "+"
Text:  " "
Name:  "width"
Punctuation:  "."
Name:  "string"
Punctuation:  "()"
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\""
Literal.String.Escape:  "<newline>"
Literal.String:  "\""
Punctuation:  ")"
Text:  "<newline>      "
Name:  "header"
Text:  " "
Operator:  "="
Text:  " "
Name:  "f"
Punctuation:  "."
Name:  "size"
Punctuation:  "()"
Text:  "<newline>      "
Name:  "f"
Punctuation:  "."
Name:  "set_length"
Punctuation:  "(("
Name:  "width"
Text:  " "
Operator:  "*"
Text:  " "
Punctuation:  "("
Name:  "width"
Text:  " "
Operator:  ">>"
Text:  " "
Literal.Number.Integer:  "3"
Punctuation:  "))"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "header"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Reserved:  "end"
Text:  "<newline><newline>  "
Keyword.Reserved:  "fun"
Text:  " "
Keyword.Declaration:  "ref"
Text:  " "
Name:  "spawn_actors"
Punctuation:  "()"
Text:  " "
Operator:  "=>"
Text:  "<newline>    "
Name:  "actors"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "(("
Name:  "width"
Text:  " "
Operator:  "+"
Text:  " "
Punctuation:  "("
Name:  "chunks"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  "))"
Text:  " "
Operator:  "/"
Text:  " "
Name:  "chunks"
Punctuation:  ")"
Text:  "<newline><newline>    "
Keyword.Reserved:  "var"
Text:  " "
Name:  "rest"
Text:  " "
Operator:  "="
Text:  " "
Name:  "width"
Text:  " "
Operator:  "%"
Text:  " "
Name:  "chunks"
Text:  "<newline><newline>    "
Keyword.Reserved:  "if"
Text:  " "
Name:  "rest"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword.Reserved:  "then"
Text:  " "
Name:  "rest"
Text:  " "
Operator:  "="
Text:  " "
Name:  "chunks"
Text:  " "
Keyword.Reserved:  "end"
Text:  "<newline><newline>    "
Keyword.Reserved:  "var"
Text:  " "
Name:  "x"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline>    "
Keyword.Reserved:  "var"
Text:  " "
Name:  "y"
Operator:  ":"
Text:  " "
Name.Class:  "USize"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline><newline>    "
Keyword.Reserved:  "for"
Text:  " "
Name:  "i"
Text:  " "
Keyword.Reserved:  "in"
Text:  " "
Name.Class:  "Range"
Punctuation:  "("
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Name:  "actors"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>      "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "i"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "chunks"
Text:  "<newline>      "
Name:  "y"
Text:  " "
Operator:  "="
Text:  " "
Name:  "x"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "chunks"
Text:  "<newline>      "
Name.Class:  "Worker"
Punctuation:  "."
Name:  "mandelbrot"
Punctuation:  "("
Keyword.Reserved:  "this"
Punctuation:  ","
Text:  " "
Name:  "x"
Punctuation:  ","
Text:  " "
Name:  "y"
Punctuation:  ","
Text:  " "
Name:  "width"
Punctuation:  ","
Text:  " "
Name:  "iterations"
Punctuation:  ","
Text:  " "
Name:  "limit"
Punctuation:  ","
Text:  " "
Name:  "real"
Punctuation:  ","
Text:  " "
Name:  "imaginary"
Punctuation:  ")"
Text:  "<newline>    "
Keyword.Reserved:  "end"
Text:  "<newline><newline>    "
Name.Class:  "Worker"
Punctuation:  "."
Name:  "mandelbrot"
Punctuation:  "("
Keyword.Reserved:  "this"
Punctuation:  ","
Text:  " "
Name:  "y"
Punctuation:  ","
Text:  " "
Name:  "y"
Text:  " "
Operator:  "+"
Text:  " "
Name:  "rest"
Punctuation:  ","
Text:  " "
Name:  "width"
Punctuation:  ","
Text:  " "
Name:  "iterations"
Punctuation:  ","
Text:  " "
Name:  "limit"
Punctuation:  ","
Text:  " "
Name:  "real"
Punctuation:  ","
Text:  "<newline>      "
Name:  "imaginary"
Punctuation:  ")"
Text:  "<newline><newline>  "
Keyword.Reserved:  "fun"
Text:  " "
Keyword.Declaration:  "ref"
Text:  " "
Name:  "arguments"
Punctuation:  "("
Name:  "env"
Operator:  ":"
Text:  " "
Name.Class:  "Env"
Punctuation:  ")"
Text:  " "
Operator:  "?"
Text:  " "
Operator:  "=>"
Text:  "<newline>    "
Keyword.Reserved:  "let"
Text:  " "
Name:  "options"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "Options"
Punctuation:  "("
Name:  "env"
Punctuation:  "."
Name:  "args"
Punctuation:  ")"
Text:  "<newline><newline>    "
Name:  "options"
Text:  "<newline>      "
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Literal.String:  "\"iterations\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"i\""
Punctuation:  ","
Text:  " "
Name.Class:  "I64Argument"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Literal.String:  "\"limit\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"l\""
Punctuation:  ","
Text:  " "
Name.Class:  "F64Argument"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Literal.String:  "\"chunks\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"c\""
Punctuation:  ","
Text:  " "
Name.Class:  "I64Argument"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Literal.String:  "\"width\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"w\""
Punctuation:  ","
Text:  " "
Name.Class:  "I64Argument"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Literal.String:  "\"output\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"o\""
Punctuation:  ","
Text:  " "
Name.Class:  "StringArgument"
Punctuation:  ")"
Text:  "<newline><newline>    "
Keyword.Reserved:  "for"
Text:  " "
Name:  "option"
Text:  " "
Keyword.Reserved:  "in"
Text:  " "
Name:  "options"
Text:  " "
Keyword.Reserved:  "do"
Text:  "<newline>      "
Keyword.Reserved:  "match"
Text:  " "
Name:  "option"
Text:  "<newline>      "
Operator:  "|"
Text:  " "
Punctuation:  "("
Literal.String:  "\"iterations\""
Punctuation:  ","
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "arg"
Operator:  ":"
Text:  " "
Name.Class:  "I64"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "iterations"
Text:  " "
Operator:  "="
Text:  " "
Name:  "arg"
Punctuation:  "."
Name:  "usize"
Punctuation:  "()"
Text:  "<newline>      "
Operator:  "|"
Text:  " "
Punctuation:  "("
Literal.String:  "\"limit\""
Punctuation:  ","
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "arg"
Operator:  ":"
Text:  " "
Name.Class:  "F64"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "limit"
Text:  " "
Operator:  "="
Text:  " "
Name:  "arg"
Punctuation:  "."
Name:  "f32"
Punctuation:  "()"
Text:  "<newline>      "
Operator:  "|"
Text:  " "
Punctuation:  "("
Literal.String:  "\"chunks\""
Punctuation:  ","
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "arg"
Operator:  ":"
Text:  " "
Name.Class:  "I64"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "chunks"
Text:  " "
Operator:  "="
Text:  " "
Name:  "arg"
Punctuation:  "."
Name:  "usize"
Punctuation:  "()"
Text:  "<newline>      "
Operator:  "|"
Text:  " "
Punctuation:  "("
Literal.String:  "\"width\""
Punctuation:  ","
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "arg"
Operator:  ":"
Text:  " "
Name.Class:  "I64"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "width"
Text:  " "
Operator:  "="
Text:  " "
Name:  "arg"
Punctuation:  "."
Name:  "usize"
Punctuation:  "()"
Text:  "<newline>      "
Operator:  "|"
Text:  " "
Punctuation:  "("
Literal.String:  "\"output\""
Punctuation:  ","
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "arg"
Operator:  ":"
Text:  " "
Name.Class:  "String"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>        "
Name:  "outfile"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Reserved:  "try"
Text:  " "
Name.Class:  "File"
Punctuation:  "("
Name.Class:  "FilePath"
Punctuation:  "("
Name:  "env"
Punctuation:  "."
Name:  "root"
Text:  " "
Keyword.Reserved:  "as"
Text:  " "
Name.Class:  "AmbientAuth"
Punctuation:  ","
Text:  " "
Name:  "arg"
Punctuation:  "))"
Text:  " "
Keyword.Reserved:  "end"
Text:  "<newline>      "
Operator:  "|"
Text:  " "
Keyword.Reserved:  "let"
Text:  " "
Name:  "err"
Operator:  ":"
Text:  " "
Name.Class:  "ParseError"
Text:  " "
Operator:  "=>"
Text:  " "
Name:  "err"
Punctuation:  "."
Name:  "report"
Punctuation:  "("
Name:  "env"
Punctuation:  "."
Name:  "out"
Punctuation:  ")"
Text:  " "
Punctuation:  ";"
Text:  " "
Name:  "usage"
Punctuation:  "("
Name:  "env"
Punctuation:  ")"
Text:  " "
Punctuation:  ";"
Text:  " "
Keyword.Reserved:  "error"
Text:  "<newline>      "
Keyword.Reserved:  "end"
Text:  "<newline>    "
Keyword.Reserved:  "end"
Text:  "<newline><newline>  "
Keyword.Reserved:  "fun"
Text:  " "
Keyword.Declaration:  "tag"
Text:  " "
Name:  "usage"
Punctuation:  "("
Name:  "env"
Operator:  ":"
Text:  " "
Name.Class:  "Env"
Punctuation:  ")"
Text:  " "
Operator:  "=>"
Text:  "<newline>    "
Name:  "env"
Punctuation:  "."
Name:  "out"
Punctuation:  "."
Name:  "print"
Punctuation:  "("
Text:  "<newline>      "
Literal.String.Doc:  "\"\"\"<newline>      mandelbrot [OPTIONS]<newline>      The binary output can be converted to a BMP with the following command<newline>      (ImageMagick Tools required):<newline>        convert <output> JPEG:<output>.jpg<newline>      Available options:<newline>      --iterations, -i  Maximum amount of iterations to be done for each pixel.<newline>                        Defaults to 50.<newline>      --limit, -l       Square of the limit that pixels need to exceed in order<newline>                        to escape from the Mandelbrot set.<newline>                        Defaults to 4.0.<newline>      --chunks, -c      Maximum line count of chunks the image should be<newline>                        divided into for divide & conquer processing.<newline>                        Defaults to 16.<newline>      --width, -w       Lateral length of the resulting mandelbrot image.<newline>                        Defaults to 16000.<newline>      --output, -o      File to write the output to.<newline>      \"\"\""
Text:  "<newline>      "
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "// Comment at eof"
Text:  "<newline>"
