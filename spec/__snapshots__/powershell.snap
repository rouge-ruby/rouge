Comment:  "#requires -version 2.0"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Comments"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Comment:  "# Normal Comment"
Text.Whitespace:  "<newline><newline>"
Comment.Multiline:  "<#<newline>    multi<newline>    line<newline>    comment<newline>#>"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "## Strings"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Literal.String.Double:  "\"String that accepts "
Name.Variable:  "$variables"
Literal.String.Double:  ", and substitutions\""
Text.Whitespace:  "<newline>"
Literal.String.Double:  "\"String with escaped "
Literal.String.Escape:  "`$"
Literal.String.Double:  "variable\""
Text.Whitespace:  "<newline>"
Literal.String.Single:  "'Literal string $($PSScriptRoot)'"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Heredoc strings"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Literal.String.Heredoc:  "@\"<newline>Heredoc with "
Name.Variable:  "$variables"
Literal.String.Heredoc:  "<newline>\"@"
Text.Whitespace:  "<newline>"
Literal.String.Heredoc:  "@'<newline>Heredoc with $literal strings<newline>'@"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Variables"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "$var1"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number.Integer:  "5"
Text.Whitespace:  "<newline>"
Name.Variable:  "$var2"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Builtin.Pseudo:  "$true"
Text.Whitespace:  "<newline>"
Name.Variable:  "$var3"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name:  "get-host"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name:  "Select-Object"
Text.Whitespace:  " "
Name.Tag:  "-First"
Text.Whitespace:  " "
Name.Other:  "1"
Text.Whitespace:  "<newline>"
Name.Variable:  "${this-is_a%valid*variable@name}"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"OMG\""
Text.Whitespace:  "<newline>"
Name:  "Write-Output"
Text.Whitespace:  " "
Name.Variable:  "${this-is_a%valid*variable@name}"
Text.Whitespace:  "<newline>"
Name.Variable:  "$"
Name.Namespace:  "global"
Punctuation:  ":"
Name.Variable:  "ErrorActionPreference"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Collections"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "$my_hash"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "@{"
Text.Whitespace:  "<newline>    "
Name.Other:  "owner"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"my\""
Text.Whitespace:  "<newline>    "
Name.Other:  "type"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"hash\""
Text.Whitespace:  "<newline>    "
Name.Other:  "thing"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"table\""
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "$my_complex_hash"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "@{"
Text.Whitespace:  "<newline>  "
Comment:  "# comment"
Text.Whitespace:  "<newline>  "
Name.Other:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Name.Variable:  "$var1"
Text.Whitespace:  " "
Operator:  "-eq"
Text.Whitespace:  " "
Name.Variable:  "$var2"
Punctuation:  ")"
Text.Whitespace:  "<newline>    "
Punctuation:  "{"
Text.Whitespace:  "<newline>        "
Keyword.Reserved:  "return"
Text.Whitespace:  " "
Name.Builtin.Pseudo:  "$true"
Text.Whitespace:  "<newline>    "
Punctuation:  "}"
Text.Whitespace:  "<newline>  "
Punctuation:  "}"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "$my_array"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "@("
Literal.String.Double:  "\"my\""
Text.Whitespace:  " "
Literal.String.Double:  "\"array\""
Punctuation:  ")"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "$myobject"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "["
Name:  "PSCustomObject"
Punctuation:  "]@{"
Text.Whitespace:  "<newline>   "
Name.Other:  "Name"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Single:  "'Alice'"
Punctuation:  ";"
Text.Whitespace:  "<newline>   "
Name.Other:  "Age"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number.Integer:  "42"
Punctuation:  ";"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "$myarray"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "@("
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "PSCustomObject"
Punctuation:  "]@{"
Text.Whitespace:  "<newline>        "
Name.Other:  "Name"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Single:  "'Bob'"
Punctuation:  ";"
Text.Whitespace:  "<newline>        "
Name.Other:  "Age"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number.Integer:  "31"
Punctuation:  ";"
Text.Whitespace:  "<newline>    "
Punctuation:  "},"
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "PSCustomObject"
Punctuation:  "]@{"
Text.Whitespace:  "<newline>        "
Name.Other:  "Name"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Single:  "'Charlie'"
Punctuation:  ";"
Text.Whitespace:  "<newline>        "
Name.Other:  "Age"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number.Integer:  "41"
Punctuation:  ";"
Text.Whitespace:  "<newline>    "
Punctuation:  "}"
Text.Whitespace:  "<newline>"
Punctuation:  ")"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Commands"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "type"
Text.Whitespace:  " "
Literal.String.Double:  "\"is a reserved word\""
Text.Whitespace:  "<newline>"
Name:  "alias"
Text.Whitespace:  " "
Name.Other:  "foo"
Text.Whitespace:  " "
Name.Other:  "bar"
Text.Whitespace:  "<newline>"
Name:  "Write-output"
Text.Whitespace:  " "
Literal.String.Double:  "\"Hello\""
Text.Whitespace:  " "
Comment:  "# End-of-line comment"
Text.Whitespace:  "<newline>"
Name:  "Get-Process"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name:  "Tee-Object"
Text.Whitespace:  " "
Name.Tag:  "-FilePath"
Text.Whitespace:  " "
Literal.String.Double:  "\"C:\\Test1\\testfile2.txt\""
Text.Whitespace:  " "
Comment:  "# Unapproved verb"
Text.Whitespace:  "<newline>"
Name:  "cd"
Text.Whitespace:  " "
Name.Other:  "C:\\Test1\\"
Text.Whitespace:  "<newline>"
Name:  "C:\\Test1\\test2.cmd"
Text.Whitespace:  " "
Name.Other:  "input.txt"
Text.Whitespace:  "<newline>"
Operator:  "&"
Text.Whitespace:  " "
Literal.String.Double:  "\"C:\\Test1\\test2.exe\""
Text.Whitespace:  "<newline>"
Name:  "\\command.exe"
Text.Whitespace:  " "
Name.Other:  "something"
Text.Whitespace:  "<newline>"
Name:  "command.exe"
Text.Whitespace:  " "
Name.Other:  "arg"
Text.Whitespace:  " "
Name.Tag:  "--user"
Text.Whitespace:  " "
Literal.String.Double:  "\".\\ENTER-YOUR-USERNAME\""
Text.Whitespace:  " "
Name.Tag:  "--password"
Text.Whitespace:  " "
Literal.String.Double:  "\"ENTER-YOUR-PASSWORD\""
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Declarations"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "function"
Text.Whitespace:  " "
Name.Function:  "Verb-Noun"
Text.Whitespace:  "<newline>"
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Comment.Multiline:  "<#<newline>    "
Comment.Special:  ".SYNOPSIS"
Comment.Multiline:  "<newline>    Tells you what it does<newline><newline>    "
Comment.Special:  ".DESCRIPTION"
Comment.Multiline:  "<newline>    Tells you what it does with more detail.<newline>    #>"
Text.Whitespace:  "<newline>    "
Keyword.Reserved:  "param"
Text.Whitespace:  " "
Punctuation:  "(["
Name:  "string"
Punctuation:  "]"
Name.Variable:  "$Name"
Punctuation:  ","
Text.Whitespace:  " "
Punctuation:  "["
Name:  "string"
Punctuation:  "]"
Name.Variable:  "$Extension"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"txt\""
Punctuation:  ","
Text.Whitespace:  " "
Punctuation:  "["
Name:  "string"
Punctuation:  "]"
Name.Variable:  "$foo"
Operator:  "="
Literal.String.Double:  "\"bar\""
Punctuation:  ")"
Text.Whitespace:  "<newline>    "
Name.Variable:  "$name"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Variable:  "$name"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.String.Double:  "\".\""
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Name.Variable:  "$extension"
Text.Whitespace:  "<newline>    "
Name.Variable:  "$name"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "function"
Text.Whitespace:  " "
Name.Namespace:  "global"
Punctuation:  ":"
Name.Function:  "Verb-Noun"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name:  "something"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "process"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Literal.String.Double:  "\"This is a script block\""
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Control structures"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Name.Variable:  "$var1"
Text.Whitespace:  " "
Operator:  "-eq"
Text.Whitespace:  " "
Name.Variable:  "$var2"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Keyword.Reserved:  "return"
Text.Whitespace:  " "
Name.Builtin.Pseudo:  "$true"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "try"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name:  "write-output"
Text.Whitespace:  " "
Literal.String.Double:  "\"something\""
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  " "
Keyword.Reserved:  "catch"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name:  "write-output"
Text.Whitespace:  " "
Literal.String.Double:  "\"something else\""
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "Foreach"
Text.Whitespace:  " "
Punctuation:  "("
Name.Variable:  "$Thing"
Text.Whitespace:  " "
Keyword.Reserved:  "in"
Text.Whitespace:  " "
Name.Variable:  "$Things"
Text.Whitespace:  " "
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name:  "Do-Something"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Classes"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "class"
Text.Whitespace:  " "
Name.Class:  "Child"
Text.Whitespace:  " "
Punctuation:  ":"
Text.Whitespace:  " "
Name.Class:  "Parent"
Punctuation:  ","
Text.Whitespace:  " "
Name.Class:  "Relatives"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "int"
Punctuation:  "]"
Text.Whitespace:  " "
Keyword.Reserved:  "hidden"
Text.Whitespace:  " "
Name.Variable:  "$var"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number.Integer:  "8"
Text.Whitespace:  "<newline><newline>    "
Name:  "Child"
Text.Whitespace:  " "
Punctuation:  "(["
Name:  "string"
Punctuation:  "]"
Name.Variable:  "$a"
Punctuation:  ","
Text.Whitespace:  " "
Punctuation:  "["
Name:  "string"
Punctuation:  "]"
Name.Variable:  "$b"
Punctuation:  ","
Text.Whitespace:  " "
Punctuation:  "["
Name:  "int"
Punctuation:  "]"
Name.Variable:  "$capacity"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>        "
Name.Builtin.Pseudo:  "$this"
Operator:  "."
Name.Function:  "var"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Variable:  "$a"
Text.Whitespace:  "<newline>    "
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>    "
Punctuation:  "["
Name:  "string"
Punctuation:  "]"
Name:  "toString"
Punctuation:  "()"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>        "
Keyword.Reserved:  "return"
Text.Whitespace:  " "
Literal.String.Double:  "\"A string\""
Text.Whitespace:  "<newline>    "
Punctuation:  "}"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Name.Variable:  "$my_obj"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "["
Name:  "Child"
Punctuation:  "]::"
Name:  "new"
Punctuation:  "()"
Text.Whitespace:  "<newline><newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline>"
Comment:  "# Challenges"
Text.Whitespace:  "<newline>"
Comment:  "###########################"
Text.Whitespace:  "<newline><newline>"
Punctuation:  "["
Name:  "System.Collections.Generic.List"
Punctuation:  "["
Name:  "string"
Punctuation:  "]]("
Literal.Number.Integer:  "1"
Operator:  ".."
Literal.Number.Integer:  "100"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Punctuation:  "["
Name:  "System.Collections.Generic.Dictionary"
Punctuation:  "["
Name:  "string"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "int"
Punctuation:  "]]("
Literal.Number.Integer:  "1"
Operator:  ".."
Literal.Number.Integer:  "100"
Operator:  "|%"
Punctuation:  "{@{"
Name.Other:  "N"
Operator:  "="
Name.Builtin.Pseudo:  "$_"
Punctuation:  "}})"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "Function"
Text.Whitespace:  " "
Name.Function:  "Get-IPv4Scopes"
Text.Whitespace:  "<newline>"
Comment.Multiline:  "<#<newline>\t"
Comment.Special:  ".SYNOPSIS"
Comment.Multiline:  "<newline>\t\tRead IPv4Scopes from an array of servers<newline>\t"
Comment.Special:  ".PARAMETER"
Comment.Multiline:  " Servers<newline>\t\tSpecifies an array of servers<newline>\t"
Comment.Special:  ".EXAMPLE"
Comment.Multiline:  "<newline>\t\tGet-IPv4Scopes<newline><newline>\t\tWill prompt for all inputs<newline>#>"
Text.Whitespace:  "<newline>"
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "CmdletBinding"
Punctuation:  "()]"
Text.Whitespace:  "<newline>    "
Keyword.Reserved:  "Param"
Punctuation:  "("
Text.Whitespace:  "<newline>    "
Comment:  "# 1"
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "parameter"
Punctuation:  "("
Text.Whitespace:  "<newline>        "
Name:  "Mandatory"
Operator:  "="
Name.Builtin.Pseudo:  "$true"
Punctuation:  ","
Text.Whitespace:  "<newline>        "
Name:  "Position"
Operator:  "="
Literal.Number.Integer:  "0"
Punctuation:  ","
Text.Whitespace:  "<newline>        "
Name:  "ValueFromPipelineByPropertyName"
Operator:  "="
Name.Builtin.Pseudo:  "$true"
Punctuation:  ","
Text.Whitespace:  "<newline>        "
Name:  "HelpMessage"
Operator:  "="
Literal.String.Double:  "\"Server List\""
Text.Whitespace:  "<newline>        "
Punctuation:  ")]"
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "string"
Punctuation:  "[]]"
Name.Variable:  "$Servers"
Punctuation:  ","
Text.Whitespace:  "<newline>    "
Comment:  "#2"
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "parameter"
Punctuation:  "("
Name:  "Mandatory"
Operator:  "="
Name.Builtin.Pseudo:  "$false"
Punctuation:  ","
Name:  "ValueFromPipeline"
Operator:  "="
Name.Builtin.Pseudo:  "$false"
Punctuation:  ")]"
Text.Whitespace:  "<newline>    "
Punctuation:  "["
Name:  "bool"
Punctuation:  "]"
Name.Variable:  "$Unique"
Operator:  "="
Name.Builtin.Pseudo:  "$false"
Text.Whitespace:  "<newline>    "
Punctuation:  ")"
Text.Whitespace:  "  "
Comment:  "#EndParam"
Text.Whitespace:  "<newline><newline>    "
Keyword.Reserved:  "Begin"
Text.Whitespace:  " "
Punctuation:  "{}"
Text.Whitespace:  "<newline><newline>    "
Keyword.Reserved:  "Process"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>        "
Name.Variable:  "$arrayJobs"
Operator:  "="
Punctuation:  "@()"
Text.Whitespace:  "<newline>        "
Keyword.Reserved:  "foreach"
Text.Whitespace:  " "
Punctuation:  "("
Name.Variable:  "$server"
Text.Whitespace:  " "
Keyword.Reserved:  "in"
Text.Whitespace:  " "
Name.Variable:  "$Servers"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>            "
Name.Variable:  "$arrayJobs"
Operator:  "+="
Name:  "Invoke-Command"
Text.Whitespace:  " "
Name.Tag:  "-ComputerName"
Text.Whitespace:  " "
Name.Variable:  "$server"
Text.Whitespace:  " "
Name.Tag:  "-scriptblock"
Text.Whitespace:  " "
Punctuation:  "{"
Name:  "Get-DhcpServerv4Scope"
Punctuation:  "}"
Text.Whitespace:  "  "
Name.Tag:  "-AsJob"
Text.Whitespace:  "<newline>        "
Punctuation:  "}"
Text.Whitespace:  "<newline>        "
Name.Variable:  "$complete"
Operator:  "="
Name.Builtin.Pseudo:  "$false"
Text.Whitespace:  "<newline>        "
Keyword.Reserved:  "while"
Text.Whitespace:  " "
Punctuation:  "("
Operator:  "-not"
Text.Whitespace:  " "
Name.Variable:  "$complete"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>            "
Name.Variable:  "$arrayJobsInProgress"
Operator:  "="
Text.Whitespace:  " "
Name.Variable:  "$arrayJobs"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name:  "Where-Object"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  " "
Name.Builtin.Pseudo:  "$_"
Operator:  "."
Name.Function:  "State"
Text.Whitespace:  " "
Operator:  "-match"
Text.Whitespace:  " "
Literal.String.Single:  "'running'"
Text.Whitespace:  " "
Punctuation:  "}"
Text.Whitespace:  "<newline>            "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Operator:  "-not"
Text.Whitespace:  " "
Name.Variable:  "$arrayJobsInProgress"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  " "
Name.Variable:  "$complete"
Operator:  "="
Name.Builtin.Pseudo:  "$true"
Text.Whitespace:  " "
Punctuation:  "}"
Text.Whitespace:  "<newline>        "
Punctuation:  "}"
Text.Whitespace:  "<newline>        "
Name.Variable:  "$Scopes"
Operator:  "="
Name.Variable:  "$arrayJobs"
Operator:  "|"
Name:  "Receive-Job"
Text.Whitespace:  "<newline>        "
Name.Variable:  "$UniqueScopes"
Operator:  "="
Name.Variable:  "$Scopes"
Operator:  "|"
Name:  "Sort-Object"
Text.Whitespace:  " "
Name.Tag:  "-Property"
Text.Whitespace:  " "
Name.Other:  "ScopeId"
Text.Whitespace:  " "
Name.Tag:  "-Unique"
Text.Whitespace:  "<newline>    "
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>    "
Keyword.Reserved:  "End"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>        "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Name.Variable:  "$Unique"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  " "
Keyword.Reserved:  "return"
Text.Whitespace:  " "
Name.Variable:  "$UniqueScopes"
Text.Whitespace:  " "
Punctuation:  "}"
Text.Whitespace:  "<newline>        "
Keyword.Reserved:  "else"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  " "
Keyword.Reserved:  "return"
Text.Whitespace:  " "
Name.Variable:  "$Scopes"
Text.Whitespace:  " "
Punctuation:  "}"
Text.Whitespace:  "<newline>    "
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Punctuation:  "}"
Text.Whitespace:  " "
Comment:  "#end function"
Text.Whitespace:  "<newline><newline>"
Name:  "Write-Output"
Text.Whitespace:  " "
Literal.String.Double:  "\"Updating: "
Literal.String.Interpol:  "$("
Name.Variable:  "$file"
Operator:  "."
Name.Function:  "FullName"
Literal.String.Interpol:  ")"
Literal.String.Double:  "\""
Text.Whitespace:  "<newline>"
Name:  "Write-Output"
Text.Whitespace:  " "
Literal.String.Double:  "\"PowerShell PID: "
Literal.String.Interpol:  "$("
Name:  "Get-Process"
Text.Whitespace:  " "
Name.Other:  "powershell"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name:  "Select"
Text.Whitespace:  " "
Name.Tag:  "-ExpandProperty"
Text.Whitespace:  " "
Name.Other:  "Id"
Punctuation:  ")"
Literal.String.Double:  " and Notepad PID: "
Literal.String.Interpol:  "$("
Name:  "Get-Process"
Text.Whitespace:  " "
Name.Other:  "notepad"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name:  "Select"
Text.Whitespace:  " "
Name.Tag:  "-ExpandProperty"
Text.Whitespace:  " "
Name.Other:  "Id"
Punctuation:  ")"
Literal.String.Double:  "\""
Text.Whitespace:  "<newline>"
Comment:  "# $content = Get-Content $file.FullName"
Text.Whitespace:  "<newline><newline>"
Comment:  "# Without Error"
Text.Whitespace:  "<newline>"
Name.Variable:  "$gitUserName"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\""
Literal.String.Interpol:  "$("
Name.Variable:  "$userAdObject"
Operator:  "."
Name:  "Properties"
Punctuation:  "["
Literal.String.Single:  "'sn'"
Punctuation:  "]"
Literal.String.Interpol:  ")"
Literal.String.Double:  ", "
Literal.String.Interpol:  "$("
Name.Variable:  "$userAdObject"
Operator:  "."
Name:  "Properties"
Punctuation:  "["
Literal.String.Single:  "'givenName'"
Punctuation:  "]"
Literal.String.Interpol:  ")"
Literal.String.Double:  "\""
Text.Whitespace:  "<newline><newline>"
Comment:  "# Grave escaping"
Text.Whitespace:  "<newline>"
Name.Variable:  "$gitExeString"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\""
Name.Variable:  "$gitExeFolder"
Literal.String.Double:  "\\git.exe\""
Text.Whitespace:  " "
Operator:  "&"
Punctuation:  "("
Literal.String.Double:  "\""
Name.Variable:  "$gitExeString"
Literal.String.Double:  "\""
Punctuation:  ")"
Text.Whitespace:  " "
Name:  "config"
Text.Whitespace:  " "
Name.Tag:  "--add"
Text.Whitespace:  " "
Name.Tag:  "--global"
Text.Whitespace:  " "
Name.Other:  "user.name"
Text.Whitespace:  " "
Literal.String.Escape:  "`\""
Name.Variable:  "$gitUserName"
Literal.String.Escape:  "`\""
Text.Whitespace:  "<newline>"
Name:  "Get-ChildItem"
Text.Whitespace:  " "
Name.Tag:  "-Include"
Text.Whitespace:  " "
Operator:  "*."
Name.Function:  "txt"
Text.Whitespace:  " "
Literal.String.Escape:  "`<newline>"
Text.Whitespace:  "    "
Name.Tag:  "-Recurse"
Text.Whitespace:  "<newline>"
Name:  "Write-Output"
Text.Whitespace:  " "
Literal.String.Escape:  "`$"
Name.Other:  "hello"
Text.Whitespace:  "<newline><newline>"
Comment:  "# Where-Object alias"
Text.Whitespace:  "<newline>"
Name:  "Get-process"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name.Function:  "?"
Text.Whitespace:  " "
Punctuation:  "{"
Name.Builtin.Pseudo:  "$_"
Operator:  "."
Name.Function:  "workingset"
Text.Whitespace:  " "
Operator:  "-gt"
Text.Whitespace:  " "
Literal.Number.Integer:  "25000"
Operator:  "*"
Literal.Number.Integer:  "1024"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Comment:  "# Handle subexpressions nested within strings"
Text.Whitespace:  "<newline>"
Keyword.Reserved:  "function"
Text.Whitespace:  " "
Name.Function:  "Write-Log"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Keyword.Reserved:  "Param"
Punctuation:  "("
Text.Whitespace:  "<newline>        "
Name.Variable:  "$Message"
Punctuation:  ","
Text.Whitespace:  "<newline>        "
Name.Variable:  "$Path"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"L:\\IISSiteAudit.txt\""
Text.Whitespace:  "<newline>    "
Punctuation:  ")"
Text.Whitespace:  "<newline><newline>    "
Keyword.Reserved:  "function"
Text.Whitespace:  " "
Name.Function:  "TS"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  " "
Keyword.Reserved:  "return"
Text.Whitespace:  " "
Literal.String.Double:  "\"[{0:MM/dd/yy} {0:HH:mm:ss}]\""
Text.Whitespace:  " "
Name.Tag:  "-f"
Text.Whitespace:  " "
Punctuation:  "("
Name:  "Get-Date"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "}"
Text.Whitespace:  "<newline>    "
Literal.String.Double:  "\""
Literal.String.Interpol:  "$("
Name:  "TS"
Punctuation:  ")"
Literal.String.Double:  " "
Name.Variable:  "$Message"
Literal.String.Double:  "\""
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name:  "Tee-Object"
Text.Whitespace:  " "
Name.Tag:  "-FilePath"
Text.Whitespace:  " "
Name.Variable:  "$Path"
Text.Whitespace:  " "
Name.Tag:  "-Append"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Name:  "Write-Verbose"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Keyword.Reserved:  "function"
Text.Whitespace:  " "
Name.Function:  "NewVMSnapshot"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Keyword.Reserved:  "param"
Punctuation:  "("
Text.Whitespace:  "<newline>        "
Punctuation:  "["
Name:  "Parameter"
Punctuation:  "("
Name:  "Mandatory"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Builtin.Pseudo:  "$true"
Punctuation:  ")]"
Text.Whitespace:  "<newline>        "
Punctuation:  "["
Name:  "string"
Punctuation:  "[]]"
Name.Variable:  "$VM"
Punctuation:  ","
Text.Whitespace:  "<newline>        "
Punctuation:  "["
Name:  "string"
Punctuation:  "[]]"
Name.Variable:  "$Name"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "("
Name:  "Get-Date"
Text.Whitespace:  " "
Name.Tag:  "-Format"
Text.Whitespace:  " "
Literal.String.Single:  "'yyyy-MM-dd_HH:mm:ss'"
Punctuation:  ")"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.String.Double:  "\"_"
Name.Variable:  "$VM"
Literal.String.Double:  "\""
Punctuation:  ","
Text.Whitespace:  "<newline>        "
Punctuation:  "["
Name:  "string"
Punctuation:  "[]]"
Name.Variable:  "$Description"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\""
Literal.String.Escape:  "`S"
Literal.String.Double:  "napshot taken via "
Literal.String.Interpol:  "$("
Name:  "Split-Path"
Text.Whitespace:  " "
Name.Builtin.Pseudo:  "$PSCommandPath"
Text.Whitespace:  " "
Name.Tag:  "-leaf"
Punctuation:  ")"
Literal.String.Double:  " by "
Name.Variable:  "$"
Name.Namespace:  "global"
Punctuation:  ":"
Name.Variable:  "vsphereuser"
Literal.String.Double:  ".\""
Text.Whitespace:  "<newline>    "
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Comment:  "# Handle line continuation in string interpolation"
Text.Whitespace:  "<newline>"
Name:  "Get-CimInstance"
Text.Whitespace:  " "
Name.Tag:  "-ComputerName"
Text.Whitespace:  " "
Name.Other:  "localhost"
Text.Whitespace:  " "
Name.Other:  "win32_logicaldisk"
Text.Whitespace:  " "
Literal.String.Escape:  "`<newline>"
Operator:  "|"
Text.Whitespace:  " "
Name:  "where"
Text.Whitespace:  " "
Name.Other:  "caption"
Text.Whitespace:  " "
Operator:  "-eq"
Text.Whitespace:  " "
Literal.String.Double:  "\"C:\""
Text.Whitespace:  " "
Literal.String.Escape:  "`<newline>"
Operator:  "|"
Text.Whitespace:  " "
Name:  "foreach-object"
Text.Whitespace:  " "
Punctuation:  "{"
Name:  "write"
Text.Whitespace:  " "
Literal.String.Double:  "\" "
Literal.String.Interpol:  "$("
Name.Builtin.Pseudo:  "$_"
Operator:  "."
Name.Function:  "caption"
Literal.String.Interpol:  ")"
Literal.String.Double:  " "
Literal.String.Interpol:  "$("
Literal.String.Single:  "'{0:N2}'"
Text.Whitespace:  " "
Literal.String.Escape:  "`"
Text.Whitespace:  "<newline>"
Name.Tag:  "-f"
Text.Whitespace:  " "
Punctuation:  "("
Name.Builtin.Pseudo:  "$_"
Operator:  "."
Name.Function:  "Size"
Name:  "/1gb"
Punctuation:  ")"
Literal.String.Double:  ") GB total, "
Literal.String.Interpol:  "$("
Literal.String.Single:  "'{0:N2}'"
Text.Whitespace:  " "
Literal.String.Escape:  "`"
Text.Whitespace:  "<newline>"
Name.Tag:  "-f"
Text.Whitespace:  " "
Punctuation:  "("
Name.Builtin.Pseudo:  "$_"
Operator:  "."
Name.Function:  "FreeSpace"
Name:  "/1gb"
Punctuation:  ")"
Literal.String.Double:  ") GB free \""
Punctuation:  "}"
Text.Whitespace:  "<newline>"
