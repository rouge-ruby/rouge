Keyword:  "form"
Text:  " "
Literal.String:  "Highlighter test"
Text:  "<newline>  "
Comment.Single:  "# This is a regular comment"
Text:  "<newline>  "
Keyword:  "sentence"
Text:  " Blank<newline>  "
Keyword:  "sentence"
Text:  " My_sentence "
Literal.String:  "This should all be a string"
Text:  "<newline>  "
Keyword:  "text"
Text:  " My_text "
Literal.String:  "This should also all be a string"
Text:  "<newline>  "
Keyword:  "word"
Text:  " My_word "
Literal.String:  "Only"
Text:  " the first word is a string, the rest is discarded<newline>  "
Keyword:  "boolean"
Text:  " Binary "
Name.Variable:  "1"
Text:  "<newline>  "
Keyword:  "boolean"
Text:  " Text "
Name.Variable:  "no"
Text:  "<newline>  "
Keyword:  "boolean"
Text:  " Quoted "
Name.Variable:  "\"yes\""
Text:  "<newline>  "
Keyword:  "comment"
Text:  " "
Literal.String:  "This should be a string"
Text:  "<newline>  "
Keyword:  "optionmenu"
Text:  " Drop-down: "
Literal.Number:  "1"
Text:  "<newline>    "
Keyword:  "option"
Text:  " "
Literal.String:  "Foo"
Text:  "<newline>    "
Keyword:  "option"
Text:  " "
Literal.String:  "100"
Text:  "<newline>  "
Keyword:  "choice"
Text:  " Radio: "
Literal.Number:  "1"
Text:  "<newline>    "
Keyword:  "option"
Text:  " "
Literal.String:  "Foo"
Text:  "<newline>    "
Keyword:  "option"
Text:  " "
Literal.String:  "100"
Text:  "<newline>  "
Keyword:  "real"
Text:  " left_Range "
Operator:  "-"
Literal.Number:  "123.6"
Text:  "<newline>  "
Keyword:  "positive"
Text:  " right_Range_max "
Literal.Number:  "3.3"
Text:  "<newline>  "
Keyword:  "integer"
Text:  " Int "
Literal.Number:  "4"
Text:  "<newline>  "
Keyword:  "natural"
Text:  " Nat "
Literal.Number:  "4"
Text:  "<newline>"
Keyword:  "endform"
Text:  "<newline><newline>"
Name.Function:  "beginPause"
Text:  ": "
Literal.String:  "\"Highlighter test\""
Text:  "<newline>  "
Name.Function:  "sentence"
Text:  ": "
Literal.String:  "\"Blank\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"\""
Text:  "<newline>  "
Name.Function:  "sentence"
Text:  ": "
Literal.String:  "\"My sentence\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"This should all be a string\""
Text:  "<newline>  "
Name.Function:  "text"
Text:  ": "
Literal.String:  "\"My text\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"This should also all be a string\""
Text:  "<newline>  "
Name.Function:  "word"
Text:  ": "
Literal.String:  "\"My word\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"Only the first word is a string, the rest is discarded\""
Text:  "<newline>  "
Name.Function:  "boolean"
Text:  ": "
Literal.String:  "\"Binary\""
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Text:  "<newline>  "
Name.Function:  "comment"
Text:  ": "
Literal.String:  "\"This should be a string\""
Text:  "<newline>  "
Name.Function:  "optionMenu"
Text:  ": "
Literal.String:  "\"Drop-down\""
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Text:  "<newline>    "
Name.Function:  "option"
Text:  ": "
Literal.String:  "\"Foo\""
Text:  "<newline>    "
Name.Function:  "option"
Text:  ": "
Literal.String:  "\"100\""
Text:  "<newline>  "
Name.Function:  "choice"
Text:  ": "
Literal.String:  "\"Choice\""
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Text:  "<newline>    "
Name.Function:  "option"
Text:  ": "
Literal.String:  "\"Foo\""
Text:  "<newline>    "
Name.Function:  "option"
Text:  ": "
Literal.String:  "\"100\""
Text:  "<newline>  "
Name.Function:  "real"
Text:  ": "
Literal.String:  "\"left Range\""
Punctuation:  ","
Text:  " "
Operator:  "-"
Literal.Number:  "123.6"
Text:  "<newline>  "
Name.Function:  "positive"
Text:  ": "
Literal.String:  "\"right Range max\""
Punctuation:  ","
Text:  " "
Literal.Number:  "3.3"
Text:  "<newline>  "
Name.Function:  "integer"
Text:  ": "
Literal.String:  "\"Int\""
Punctuation:  ","
Text:  " "
Literal.Number:  "4"
Text:  "<newline>  "
Name.Function:  "natural"
Text:  ": "
Literal.String:  "\"Nat\""
Punctuation:  ","
Text:  " "
Literal.Number:  "4"
Text:  "<newline>"
Name.Variable:  "button"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "endPause"
Text:  "("
Literal.String:  "\"Cancel\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"OK\""
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Punctuation:  ","
Text:  " "
Literal.Number:  "2"
Text:  ")<newline><newline>"
Comment.Single:  "# Periods do not establish boundaries for keywords"
Text:  "<newline>"
Name.Variable:  "form.var"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "10"
Text:  "<newline>"
Comment.Single:  "# Or operators"
Text:  "<newline>"
Name.Variable:  "not.an.operator$"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"Bad variable name\""
Text:  "<newline>"
Name.Variable:  "bad.or.not"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  "<newline><newline>"
Comment.Single:  "# External scripts"
Text:  "<newline>"
Keyword:  "include"
Text:  " "
Literal.String:  "/path/to/file"
Text:  "<newline>"
Name.Function:  "runScript"
Text:  ": "
Literal.String:  "\"/path/to/file\""
Text:  "<newline>"
Keyword:  "execute"
Text:  " "
Literal.String:  "/path/to/file"
Text:  "<newline><newline>"
Comment.Single:  "# Predefined variables"
Text:  "<newline>"
Name.Variable:  "a"
Text:  "  "
Operator:  "="
Text:  " "
Name.Builtin:  "praatVersion"
Text:  "<newline>"
Name.Variable:  "a"
Text:  "  "
Operator:  "="
Text:  " "
Name.Builtin:  "e"
Text:  " "
Operator:  "+"
Text:  " "
Name.Builtin:  "pi"
Text:  " "
Operator:  "*"
Text:  " "
Punctuation:  "("
Text:  " "
Name.Builtin:  "all"
Operator:  "+"
Name.Builtin:  "right"
Punctuation:  ")"
Text:  " "
Operator:  "/"
Text:  " "
Name.Builtin:  "left"
Text:  " "
Operator.Word:  "mod"
Text:  " "
Name.Builtin:  "average"
Text:  " "
Operator:  "+"
Text:  " "
Punctuation:  "("
Name.Builtin:  "mono"
Text:  " "
Operator:  "-"
Text:  " "
Name.Builtin:  "stereo"
Punctuation:  ")"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "homeDirectory$"
Text:  " "
Operator:  "+"
Text:  " "
Name.Builtin:  "tab$"
Text:  " "
Operator:  "+"
Text:  " "
Name.Builtin:  "newline$"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "temporaryDirectory$"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "praatVersion$"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "shellDirectory$"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "homeDirectory$"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "preferencesDirectory$"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "defaultDirectory$"
Text:  "<newline>"
Keyword:  "nocheck"
Text:  " "
Name.Function:  "selectObject"
Text:  ": "
Name.Builtin:  "undefined"
Text:  "<newline>"
Comment.Single:  "# Not predefined variables"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "e$"
Text:  "<newline>"
Name.Variable:  "a$"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "pi$"
Text:  "<newline><newline>"
Comment.Single:  "# Arrays are not comments"
Text:  "<newline>"
Name.Variable:  "a#"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "zero#"
Text:  "("
Literal.Number:  "5"
Text:  ")<newline>"
Name.Variable:  "a"
Text:  " ["
Literal.Number:  "3"
Text:  "]"
Punctuation:  ","
Text:  " "
Literal.Number:  "5"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "7"
Text:  "<newline>"
Keyword:  "printline"
Text:  " "
Literal.String.Interpol:  "'a[3,5]'"
Literal.String:  ", "
Literal.String.Interpol:  "'a[3]'"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " ["
Literal.Number:  "1"
Text:  "] "
Operator:  "="
Text:  " "
Literal.Number:  "2"
Text:  "<newline>"
Name.Variable:  "b"
Text:  " ["
Name.Variable:  "a"
Text:  " ["
Literal.Number:  "1"
Text:  "]] "
Operator:  "="
Text:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "assert"
Text:  " "
Name.Variable:  "b"
Text:  " ["
Name.Variable:  "a"
Text:  " ["
Literal.Number:  "1"
Text:  "]] "
Operator:  "="
Text:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "printline"
Text:  " "
Literal.String.Interpol:  "'b[2]'"
Text:  "<newline><newline>"
Comment.Single:  "# Matrices"
Text:  "<newline>"
Name.Variable:  "m##"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "zero##"
Text:  "("
Literal.Number:  "5"
Punctuation:  ","
Text:  " "
Literal.Number:  "6"
Text:  ")<newline>"
Name.Variable:  "m##"
Text:  " "
Operator:  "="
Text:  " {{"
Literal.Number:  "1"
Punctuation:  ","
Text:  " "
Literal.Number:  "2"
Text:  "}"
Punctuation:  ","
Text:  " {"
Literal.Number:  "3"
Punctuation:  ","
Text:  " "
Literal.Number:  "4"
Text:  "}}<newline>"
Name.Variable:  "m##"
Text:  "["
Literal.Number:  "1"
Punctuation:  ","
Text:  " "
Literal.Number:  "2"
Text:  "] "
Operator:  "="
Text:  " "
Literal.Number:  "3"
Text:  "<newline><newline>"
Comment.Single:  "# String vectors"
Text:  "<newline>"
Name.Variable:  "strVec$#"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "empty$#"
Text:  "("
Literal.Number:  "10"
Text:  ")<newline>"
Name.Variable:  "strVec$#"
Text:  " "
Operator:  "="
Text:  " {"
Literal.String:  "\"foo\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"bar\""
Text:  "}<newline>"
Name.Variable:  "strVec$#"
Text:  "["
Literal.Number:  "1"
Text:  "] "
Operator:  "="
Text:  " "
Literal.String:  "\"baz\""
Text:  "<newline><newline>"
Comment.Single:  "# if-block with built-in variables"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name.Builtin:  "windows"
Text:  "<newline>  "
Comment.Single:  "# We are on Windows"
Text:  "<newline>"
Keyword:  "elsif"
Text:  " "
Name.Builtin:  "unix"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  " "
Operator.Word:  "or"
Text:  " "
Operator:  "!"
Name.Builtin:  "macintosh"
Text:  "<newline>  "
Name.Function:  "exitScript"
Text:  ": "
Literal.String:  "\"We are on Linux\""
Text:  "<newline>"
Keyword:  "else"
Text:  " "
Name.Builtin:  "macintosh"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number:  "1"
Text:  "<newline>  "
Keyword:  "exit"
Text:  " "
Literal.String:  "We are on Mac"
Text:  "<newline>"
Keyword:  "endif"
Text:  "<newline><newline>"
Comment.Single:  "# Interpolation with precision digits"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'a:3'"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'a.a:3'"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'a[1]:3'"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'a1:3'"
Text:  "<newline><newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'a:3'"
Literal.String:  "\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'a.a:3'"
Literal.String:  "\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'a[1]:3'"
Literal.String:  "\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'a1:3'"
Literal.String:  "\""
Text:  "<newline><newline>"
Comment.Single:  "# Interpolations are not recursive"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'a'"
Literal.String:  "1':3'"
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'a'"
Literal.String:  "1':3'\""
Text:  "<newline><newline>"
Comment.Single:  "# Interpolation without precision digits"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'var'"
Text:  " "
Literal.String:  "numeric"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'var$'"
Text:  " "
Literal.String:  "string"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'var[\"a\"]'"
Text:  " "
Literal.String:  "numeric hash"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'var$[\"a\"]'"
Text:  " "
Literal.String:  "string hash"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'var[1]'"
Text:  " "
Literal.String:  "numeric indexed variable"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "unquoted "
Literal.String.Interpol:  "'var$[1]'"
Text:  " "
Literal.String:  "string indexed variable"
Text:  "<newline><newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'var'"
Literal.String:  " numeric\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'var$'"
Literal.String:  " string\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'var[\"a\"]'"
Literal.String:  " numeric hash\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'var$[\"a\"]'"
Literal.String:  " string hash\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'var[1]'"
Literal.String:  " numeric indexed variable\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"quoted "
Literal.String.Interpol:  "'var$[1]'"
Literal.String:  " string indexed variable\""
Text:  "<newline><newline>"
Comment.Single:  "# Indeces in interpolations must be literal"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "'var[a]'"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "'var[a$]'"
Text:  "<newline><newline>"
Name.Variable:  "string$"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"But don't interpolate everything!\""
Text:  "<newline>"
Name.Variable:  "string$"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"interpolatin' \""
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\"across\""
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\" strings ain't cool either\""
Text:  "<newline>"
Name.Function:  "string$"
Text:  "("
Literal.Number:  "10"
Text:  ") "
Comment.Single:  "; This is a function"
Text:  "<newline><newline>"
Keyword:  "repeat"
Text:  "<newline>  "
Name.Variable:  "string$"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "string$"
Text:  " "
Operator:  "-"
Text:  " "
Name.Function:  "right$"
Text:  "("
Name.Variable:  "string$"
Text:  ")<newline>"
Keyword:  "until"
Text:  " "
Operator:  "!"
Name.Function:  "length"
Text:  "("
Name.Variable:  "string$"
Text:  ")<newline><newline>"
Keyword:  "Text..."
Text:  " "
Literal.Number:  "1"
Text:  " R"
Name.Variable:  "ight"
Text:  " "
Literal.Number:  "0.2"
Text:  " H"
Name.Variable:  "alf"
Text:  " "
Name.Variable:  "many"
Operator:  "----"
Name.Variable:  "hyphens"
Text:  "<newline>"
Keyword:  "Text..."
Text:  " "
Literal.Number:  "1"
Text:  " R"
Name.Variable:  "ight"
Text:  " "
Operator:  "-"
Literal.Number:  "0.4"
Text:  " B"
Name.Variable:  "ottom"
Text:  " "
Name.Variable:  "a"
Text:  "\u062D\u0628\u064A\u0628"
Name.Variable:  "a"
Text:  "<newline>"
Keyword:  "Text..."
Text:  " "
Literal.Number:  "1"
Text:  " R"
Name.Variable:  "ight"
Text:  " "
Operator:  "-"
Literal.Number:  "0.6"
Text:  " B"
Name.Variable:  "ottom"
Text:  " \u65E5\u672C<newline>"
Keyword:  "Draw circle (mm)..."
Text:  " "
Literal.Number:  "0.5"
Text:  " "
Literal.Number:  "0.5"
Text:  " "
Name.Variable:  "i"
Text:  "<newline><newline>"
Name.Variable:  "rows"
Text:  "   "
Operator:  "="
Text:  " "
Name.Builtin:  "Object_"
Literal.String.Interpol:  "'table'"
Name.Builtin:  ".nrow"
Text:  "<newline>"
Name.Variable:  "value$"
Text:  " "
Operator:  "="
Text:  " "
Name.Builtin:  "Table_"
Literal.String.Interpol:  "'table'"
Name.Builtin:  "$"
Text:  "["
Literal.Number:  "25"
Punctuation:  ","
Text:  " "
Literal.String:  "\"f0\""
Text:  "]<newline>"
Name.Variable:  "fixed"
Text:  "  "
Operator:  "="
Text:  " "
Name.Builtin:  "Sound_10.xmin"
Text:  "<newline>"
Name.Variable:  "fixed"
Text:  "  "
Operator:  "="
Text:  " "
Name.Builtin:  "Object_foo.xmin"
Text:  "<newline>"
Name.Variable:  "fixed"
Text:  "  "
Operator:  "="
Text:  " "
Name.Builtin:  "Procrustes_foo.nx"
Text:  "<newline>"
Name.Variable:  "var"
Text:  "["
Literal.String:  "\"vaa\""
Text:  "] "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  " "
Comment.Single:  "; Hash"
Text:  "<newline><newline>"
Comment.Single:  "# Special two-word keyword"
Text:  "<newline>"
Keyword:  "select all"
Text:  "<newline>"
Comment.Single:  "# Keyword with a predefined variable"
Text:  "<newline>"
Keyword:  "select"
Text:  "  "
Name.Builtin:  "all"
Text:  "<newline><newline>"
Comment.Single:  "# old-style procedure call"
Text:  "<newline>"
Keyword:  "call"
Text:  " "
Name.Function:  "oldStyle"
Text:  " "
Literal.String:  "\"quoted\""
Text:  " "
Literal.Number:  "2"
Text:  " "
Name.Variable:  "unquoted"
Text:  " "
Name.Variable:  "string"
Text:  "<newline>"
Keyword:  "assert"
Text:  " "
Name.Variable:  "oldStyle.local"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  "<newline><newline>"
Comment.Single:  "# Interpolated procedure names"
Text:  "<newline>"
Name.Variable:  "procname$"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"newStyle\""
Text:  "<newline>"
Name.Function:  "@"
Literal.String.Interpol:  "'procname$'"
Punctuation:  ":"
Text:  "    "
Literal.String:  "\"quoted\""
Punctuation:  ","
Text:  " "
Literal.Number:  "2"
Punctuation:  ","
Text:  " "
Literal.String:  "\"quoted string\""
Text:  "<newline>"
Keyword:  "call"
Text:  " "
Literal.String.Interpol:  "'procname$'"
Text:  " "
Literal.String:  "\"quoted\""
Text:  " "
Literal.String:  "\"2\""
Text:  " "
Name.Variable:  "unquoted"
Text:  " "
Name.Variable:  "string"
Text:  "<newline><newline>"
Comment.Single:  "# Funky procedure names!"
Text:  "<newline>"
Name.Function:  "@@%^&"
Punctuation:  "()"
Text:  "<newline>"
Name.Function:  "@#.!"
Punctuation:  ":"
Text:  " "
Literal.String:  "\"a\""
Text:  "<newline>"
Keyword:  "call"
Text:  " "
Name.Function:  "#"
Text:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "call"
Text:  " "
Name.Function:  "#"
Text:  " "
Literal.String:  "\"string\""
Text:  " "
Literal.Number:  "2"
Text:  " "
Name.Variable:  "unquoted"
Text:  "<newline><newline>"
Keyword:  "procedure"
Text:  " "
Name.Function:  "@\#@#!"
Text:  "<newline>"
Keyword:  "endproc"
Text:  "<newline><newline>"
Keyword:  "procedure"
Text:  " "
Name.Function:  "'not_expansion$'"
Punctuation:  ":"
Text:  " "
Name.Variable:  ".var"
Text:  "<newline>"
Keyword:  "endproc"
Text:  "<newline><newline>"
Keyword:  "procedure"
Text:  " "
Name.Function:  "'not_expansion$'"
Punctuation:  " ("
Name.Variable:  ".var"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "endproc"
Text:  "<newline><newline>"
Comment.Single:  "# New-style procedure call with parens"
Text:  "<newline>"
Name.Function:  "@newStyle"
Punctuation:  "("
Literal.String:  "\"quoted\""
Punctuation:  ","
Text:  " "
Literal.Number:  "2"
Punctuation:  ","
Text:  " "
Literal.String:  "\"quoted string\""
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "if"
Text:  " "
Name.Builtin:  "praatVersion"
Text:  " "
Operator:  ">="
Text:  " "
Literal.Number:  "5364"
Text:  "<newline>  "
Comment.Single:  "# New-style procedure call with colon"
Text:  "<newline>  "
Name.Function:  "@newStyle"
Punctuation:  ":"
Text:  " "
Literal.String:  "\"quoted\""
Punctuation:  ","
Text:  " "
Literal.Number:  "2"
Punctuation:  ","
Text:  " "
Literal.String:  "\"quoted string\""
Text:  "<newline>"
Keyword:  "endif"
Text:  "<newline><newline>"
Comment.Single:  "# inline if with inline comment"
Text:  "<newline>"
Name.Variable:  "var"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "if"
Text:  " "
Name.Builtin:  "macintosh"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.Number:  "0"
Text:  " "
Keyword:  "else"
Text:  " "
Literal.Number:  "1"
Text:  " "
Keyword:  "fi"
Text:  " "
Comment.Single:  "; This is an inline comment"
Text:  "<newline><newline>"
Keyword:  "Remove ; Not an inline comment!"
Text:  "<newline><newline>"
Comment.Single:  "# for-loop with explicit from using local variable"
Text:  "<newline>"
Comment.Single:  "# and paren-style function calls and variable interpolation"
Text:  "<newline>"
Name.Variable:  "n"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "numberOfSelected"
Text:  "("
Literal.String:  "\"Sound\""
Text:  ")<newline>"
Keyword:  "for"
Text:  " "
Name.Variable:  "i"
Text:  " "
Keyword:  "from"
Text:  " "
Name.Variable:  "newStyle.local"
Text:  " "
Keyword:  "to"
Text:  " "
Name.Variable:  "n"
Text:  "<newline>  "
Name.Variable:  "name"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "selected$"
Text:  "("
Name.Function:  "extractWord$"
Text:  "("
Name.Function:  "selected$"
Text:  "()"
Punctuation:  ","
Text:  " "
Literal.String:  "\" \""
Text:  "))<newline>  "
Name.Variable:  "sound"
Literal.String.Interpol:  "'i'"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "selected"
Text:  "("
Literal.String:  "\"Sound\""
Punctuation:  ","
Text:  " "
Name.Variable:  "i"
Operator:  "+"
Text:  "("
Name.Variable:  "a"
Operator:  "*"
Name.Variable:  "b"
Text:  ")"
Punctuation:  ")"
Text:  "<newline>  "
Name.Variable:  "sound"
Text:  "["
Name.Variable:  "i"
Text:  "] "
Operator:  "="
Text:  " "
Name.Variable:  "sound"
Literal.String.Interpol:  "'i'"
Text:  "<newline>"
Keyword:  "endfor"
Text:  "<newline><newline>"
Name.Variable:  "i"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  "<newline>"
Keyword:  "while"
Text:  " "
Name.Variable:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Name.Variable:  "n"
Text:  "<newline>  "
Name.Variable:  "i"
Text:  " "
Operator:  "+="
Text:  " "
Literal.Number:  "1"
Text:  "<newline>  "
Comment.Single:  "# Different styles of object selection"
Text:  "<newline>  "
Keyword:  "select"
Text:  " "
Name.Variable:  "sound"
Literal.String.Interpol:  "'i'"
Text:  "<newline>  "
Name.Variable:  "sound"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "selected"
Text:  "()<newline>  "
Name.Variable:  "sound$"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "selected$"
Text:  "("
Literal.String:  "\"Sound\""
Text:  ")<newline>  "
Keyword:  "select"
Text:  " "
Name.Class:  "Sound"
Text:  " "
Literal.String.Interpol:  "'sound$'"
Text:  "<newline>  "
Name.Function:  "selectObject"
Text:  "( "
Name.Variable:  "sound"
Text:  "["
Name.Variable:  "i"
Text:  "])<newline>  "
Name.Function:  "selectObject"
Text:  ": "
Name.Variable:  "sound"
Text:  "<newline><newline>  "
Comment.Single:  "# Pause commands"
Text:  "<newline>  "
Name.Function:  "beginPause"
Text:  "("
Literal.String:  "\"Viewing \""
Text:  " "
Operator:  "+"
Text:  " "
Name.Variable:  "sound$"
Text:  ")<newline>  "
Keyword:  "if"
Text:  " "
Name.Variable:  "i"
Text:  " "
Operator:  ">"
Text:  " "
Literal.Number:  "1"
Text:  "<newline>    "
Name.Variable:  "button"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "endPause"
Text:  "("
Literal.String:  "\"Stop\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"Previous\""
Punctuation:  ","
Text:  "<newline>      "
Punctuation:  "..."
Keyword:  "if"
Text:  " "
Name.Variable:  "i"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "total_sounds"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\"Finish\""
Text:  " "
Keyword:  "else"
Text:  " "
Literal.String:  "\"Next\""
Text:  " "
Keyword:  "fi"
Punctuation:  ","
Text:  "<newline>      "
Punctuation:  "..."
Literal.Number:  "3"
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Text:  ")<newline>  "
Keyword:  "else"
Text:  "<newline>    "
Name.Variable:  "button"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "endPause"
Text:  "("
Literal.String:  "\"Stop\""
Punctuation:  ","
Text:  "<newline>      "
Punctuation:  "..."
Keyword:  "if"
Text:  " "
Name.Variable:  "i"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "total_sounds"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\"Finish\""
Text:  " "
Keyword:  "else"
Text:  " "
Literal.String:  "\"Next\""
Text:  " "
Keyword:  "fi"
Punctuation:  ","
Text:  "<newline>      "
Punctuation:  "..."
Literal.Number:  "2"
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Text:  ")<newline>  "
Keyword:  "endif"
Text:  "<newline>  "
Name.Variable:  "editor_name$"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "if"
Text:  " "
Name.Variable:  "total_textgrids"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\"TextGrid \""
Text:  " "
Keyword:  "else"
Text:  " "
Literal.String:  "\"Sound \""
Text:  " "
Keyword:  "fi"
Text:  " "
Operator:  "+"
Text:  " "
Name.Variable:  "name$"
Text:  "<newline>  "
Keyword:  "nocheck"
Text:  " "
Keyword:  "editor"
Text:  " "
Name.Class:  "Sound"
Text:  " "
Literal.String.Interpol:  "'editor_name$'"
Text:  "<newline>    "
Keyword:  "nocheck"
Text:  " "
Keyword:  "Close"
Text:  "<newline>  "
Keyword:  "nocheck"
Text:  " "
Keyword:  "endeditor"
Text:  "<newline>  "
Name.Variable:  "editor_id"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "editor"
Text:  ": "
Name.Variable:  "editor_name$"
Text:  "<newline>    "
Keyword:  "Close"
Text:  "<newline>  "
Keyword:  "endeditor"
Text:  "<newline><newline>  "
Comment.Single:  "# New-style standalone command call"
Text:  "<newline>  "
Keyword:  "Rename:"
Text:  " "
Literal.String:  "\"SomeName\""
Text:  "<newline><newline>  "
Comment.Single:  "# Command call with assignment"
Text:  "<newline>  "
Name.Variable:  "duration"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get total duration"
Text:  "<newline><newline>  "
Comment.Single:  "# Multi-line command with modifier"
Text:  "<newline>  "
Name.Variable:  "pitch"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "noprogress"
Text:  " "
Keyword:  "To Pitch (ac):"
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Literal.Number:  "75"
Punctuation:  ","
Text:  " "
Literal.Number:  "15"
Punctuation:  ","
Text:  " "
Literal.String:  "\"no\""
Punctuation:  ","
Text:  "<newline>    "
Punctuation:  "..."
Literal.Number:  "0.03"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.45"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.01"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.35"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.14"
Punctuation:  ","
Text:  " "
Literal.Number:  "600"
Text:  "<newline>  "
Comment.Single:  "# Formulas are strings"
Text:  "<newline>  "
Keyword:  "Formula:"
Text:  " "
Literal.String:  "\"if col = 1 then row * Object_"
Literal.String.Interpol:  "'pitch'"
Literal.String:  ".dx + "
Literal.String.Interpol:  "'first'"
Literal.String:  " else self fi\""
Text:  "<newline><newline>  "
Comment.Single:  "# do-style command with assignment"
Text:  "<newline>  "
Name.Variable:  "minimum"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "do"
Text:  "("
Literal.String:  "\"Get minimum...\""
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Literal.String:  "\"Hertz\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"Parabolic\""
Text:  ")<newline><newline>  "
Comment.Single:  "# New-style multi-line command call with broken strings"
Text:  "<newline>  "
Name.Variable:  "table"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Create Table with column names:"
Text:  " "
Literal.String:  "\"table\""
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  "<newline>    "
Punctuation:  "..."
Literal.String:  "\"file subject speaker"
Punctuation:  "<newline>    ..."
Literal.String:  " f0 f1 f2 f\""
Text:  " "
Operator:  "+"
Text:  " "
Name.Function:  "string$"
Text:  "("
Literal.Number:  "3"
Text:  ") "
Operator:  "+"
Text:  " "
Literal.String:  "\" \""
Text:  " "
Operator:  "+"
Text:  "<newline>    "
Punctuation:  "..."
Literal.String:  "\"duration response\""
Text:  "<newline><newline>  "
Comment.Single:  "# Function call with trailing space"
Text:  "<newline>  "
Name.Function:  "removeObject"
Text:  ": "
Name.Variable:  "pitch"
Punctuation:  ","
Text:  " "
Name.Variable:  "table"
Text:  " <newline><newline>  "
Comment.Single:  "# Picture window commands"
Text:  "<newline>  "
Name.Function:  "selectObject"
Text:  ": "
Name.Variable:  "sound"
Text:  "<newline>  "
Comment.Single:  "# do-style command"
Text:  "<newline>  "
Name.Function:  "do"
Text:  "("
Literal.String:  "\"Select inner viewport...\""
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Punctuation:  ","
Text:  " "
Literal.Number:  "6"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.5"
Punctuation:  ","
Text:  " "
Literal.Number:  "1.5"
Text:  ")<newline>  "
Keyword:  "Black"
Text:  "<newline>  "
Keyword:  "Draw..."
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.String:  "\"no\""
Text:  " C"
Name.Variable:  "urve"
Text:  "<newline>  "
Keyword:  "Draw inner box"
Text:  "<newline>  "
Keyword:  "Text bottom:"
Text:  " "
Literal.String:  "\"yes\""
Punctuation:  ","
Text:  " "
Name.Variable:  "sound$"
Text:  "<newline>  "
Keyword:  "Erase"
Text:  " "
Name.Builtin:  "all"
Text:  "<newline><newline>  "
Comment.Single:  "# Demo window commands"
Text:  "<newline>  "
Keyword:  "demo"
Text:  " "
Keyword:  "Erase"
Text:  " "
Name.Builtin:  "all"
Text:  "<newline>  "
Keyword:  "demo"
Text:  " "
Keyword:  "Select inner viewport..."
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "100"
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "100"
Text:  "<newline>  "
Keyword:  "demo"
Text:  " "
Keyword:  "Axes..."
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "100"
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "100"
Text:  "<newline>  "
Keyword:  "demo"
Text:  " "
Keyword:  "Paint rectangle..."
Text:  " "
Name.Variable:  "white"
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "100"
Text:  " "
Literal.Number:  "0"
Text:  " "
Literal.Number:  "100"
Text:  "<newline>  "
Keyword:  "demo"
Text:  " "
Keyword:  "Text..."
Text:  " "
Literal.Number:  "50"
Text:  " "
Name.Variable:  "centre"
Text:  " "
Literal.Number:  "50"
Text:  " "
Name.Variable:  "half"
Text:  " C"
Name.Variable:  "lick"
Text:  " "
Keyword:  "to"
Text:  " "
Name.Variable:  "finish"
Text:  "<newline>  "
Name.Function:  "demoWaitForInput"
Text:  " ( )<newline>  "
Keyword:  "demo"
Text:  " "
Keyword:  "Erase"
Text:  " "
Name.Builtin:  "all"
Text:  "<newline>  "
Keyword:  "demo"
Text:  " "
Keyword:  "Text:"
Text:  " "
Literal.Number:  "50"
Punctuation:  ","
Text:  " "
Literal.String:  "\"centre\""
Punctuation:  ","
Text:  " "
Literal.Number:  "50"
Punctuation:  ","
Text:  " "
Literal.String:  "\"half\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"Finished\""
Text:  "<newline>"
Keyword:  "endwhile"
Text:  "<newline><newline>"
Name.Variable:  "switch$"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "if"
Text:  " "
Name.Variable:  "switch"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number:  "1"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\"a\""
Text:  " "
Keyword:  "else"
Text:  "<newline>  "
Punctuation:  "..."
Text:  "     "
Keyword:  "if"
Text:  " "
Name.Variable:  "switch"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number:  "2"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\"b\""
Text:  " "
Keyword:  "else"
Text:  "<newline>  "
Punctuation:  "..."
Text:  "     "
Keyword:  "if"
Text:  " "
Name.Variable:  "switch"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number:  "3"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\"c\""
Text:  " "
Keyword:  "else"
Text:  "<newline>  "
Punctuation:  "..."
Text:  "     "
Keyword:  "if"
Text:  " "
Name.Variable:  "switch"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number:  "4"
Text:  " "
Keyword:  "then"
Text:  " "
Literal.String:  "\"d\""
Text:  " "
Keyword:  "else"
Text:  "<newline>  "
Punctuation:  "..."
Text:  "     "
Literal.String:  "\"default\""
Text:  " "
Keyword:  "fi"
Text:  " "
Keyword:  "fi"
Text:  " "
Keyword:  "fi"
Text:  " "
Keyword:  "fi"
Text:  "<newline><newline>"
Comment.Single:  "# An old-style sendpraat block"
Text:  "<newline>"
Comment.Single:  "# All these lines should be a string!"
Text:  "<newline>"
Keyword:  "sendpraat"
Text:  " "
Literal.String:  "Praat"
Punctuation:  "<newline>  ..."
Literal.String.Interpol:  "'newline$'"
Text:  " "
Literal.String:  "Create Sound as pure tone... \"tone\" 1 0 0.4 44100 440 0.2 0.01 0.01"
Punctuation:  "<newline>  ..."
Literal.String.Interpol:  "'newline$'"
Text:  " "
Literal.String:  "Play"
Punctuation:  "<newline>  ..."
Literal.String.Interpol:  "'newline$'"
Text:  " "
Literal.String:  "Remove"
Text:  "<newline><newline>"
Comment.Single:  "# A new-style sendpraat block"
Text:  "<newline>"
Name.Function:  "beginSendPraat"
Text:  ": "
Literal.String:  "\"Praat\""
Text:  "<newline>  "
Keyword:  "Create Sound as pure tone:"
Text:  " "
Literal.String:  "\"tone\""
Punctuation:  ","
Text:  " "
Literal.Number:  "1"
Punctuation:  ","
Text:  " "
Literal.Number:  "0"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.4"
Punctuation:  ","
Text:  " "
Literal.Number:  "44100"
Punctuation:  ","
Text:  " "
Literal.Number:  "440"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.2"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.01"
Punctuation:  ","
Text:  " "
Literal.Number:  "0.01"
Text:  "<newline>  "
Name.Variable:  "duration"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get total duration"
Text:  "<newline>  "
Keyword:  "Remove"
Text:  "<newline>"
Name.Function:  "endSendPraat"
Text:  ": "
Literal.String:  "\"duration\""
Text:  "<newline>"
Name.Function:  "appendInfoLine"
Text:  ": "
Literal.String:  "\"The generated sound lasted for \""
Punctuation:  ","
Text:  " "
Name.Variable:  "duration"
Punctuation:  ","
Text:  " "
Literal.String:  "\"seconds\""
Text:  "<newline><newline>"
Comment.Single:  "# Number types"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  "   "
Literal.Number:  "10%"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  "  "
Operator:  "-"
Literal.Number:  "10"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  "  "
Operator:  "+"
Literal.Number:  "10"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  "   "
Literal.Number:  "10.4"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  "  "
Literal.Number:  "294e12"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  "    "
Literal.Number:  "2.94e12"
Text:  "<newline><newline>"
Comment.Single:  "# Operators"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "2"
Text:  " "
Operator:  "^"
Text:  " "
Operator:  "-"
Literal.Number:  "6"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "-"
Punctuation:  "("
Literal.Number:  "1"
Operator:  "+"
Literal.Number:  "1"
Punctuation:  ")"
Operator:  "^"
Literal.Number:  "6"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "4"
Operator:  "^"
Literal.Number:  "3"
Text:  " "
Operator:  "^"
Text:  " "
Literal.Number:  "2"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "54"
Text:  " "
Operator.Word:  "div"
Text:  " "
Literal.Number:  "5.1"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "54.3"
Text:  " "
Operator.Word:  "mod"
Text:  " "
Literal.Number:  "5"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "3"
Text:  " "
Operator:  "**"
Text:  " "
Literal.Number:  "8"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number:  "7"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "3"
Text:  " "
Operator:  "/"
Text:  " "
Punctuation:  "("
Literal.Number:  "8"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number:  "7"
Punctuation:  ")"
Text:  "<newline>"
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "("
Literal.Number:  "7"
Text:  " "
Operator:  "*"
Text:  " "
Punctuation:  "("
Literal.Number:  "3"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number:  "5"
Punctuation:  "))"
Text:  " "
Operator:  "/"
Text:  " "
Punctuation:  "(("
Literal.Number:  "2"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number:  "3"
Punctuation:  ")"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number:  "1"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "# Logical operators"
Text:  "<newline>"
Keyword:  "assert"
Text:  " "
Punctuation:  "("
Name.Variable:  "a"
Text:  " "
Operator:  "="
Text:  "   "
Name.Variable:  "b"
Punctuation:  ")"
Text:  " "
Operator.Word:  "and"
Text:  " "
Name.Variable:  "c"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  "=="
Text:  " "
Punctuation:  "("
Name.Variable:  "b"
Text:  "  "
Operator.Word:  "or"
Text:  "  "
Name.Variable:  "c"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  "<="
Text:  "  "
Name.Variable:  "b"
Text:  "  "
Operator.Word:  "not"
Text:  " "
Name.Variable:  "c"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  ">="
Text:  "  "
Name.Variable:  "b"
Text:  "     "
Operator:  "!"
Name.Variable:  "c"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  "!="
Text:  "  "
Name.Variable:  "b"
Text:  "  "
Operator:  "&"
Text:  "   "
Name.Variable:  "c"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  "!="
Text:  "  "
Name.Variable:  "b"
Text:  "  "
Operator:  "&&"
Text:  "  "
Name.Variable:  "c"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  "<>"
Text:  "  "
Name.Variable:  "b"
Text:  "  "
Operator:  "||"
Text:  "  "
Name.Variable:  "c"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  "<"
Text:  "   "
Name.Variable:  "b"
Text:  "  "
Operator:  "|"
Text:  "   "
Name.Variable:  "c"
Text:  "<newline>"
Keyword:  "assert"
Text:  "  "
Name.Variable:  "a"
Text:  " "
Operator:  ">"
Text:  "   "
Name.Variable:  "b"
Text:  "<newline><newline>"
Keyword:  "assert"
Text:  " "
Punctuation:  "("
Name.Variable:  "a"
Punctuation:  ")"
Operator.Word:  "or"
Text:  " "
Punctuation:  "("
Name.Variable:  "b"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "assert"
Text:  " "
Punctuation:  "("
Name.Variable:  "a"
Punctuation:  ")"
Text:  " "
Operator.Word:  "or"
Punctuation:  "("
Name.Variable:  "b"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "assert"
Text:  " "
Punctuation:  "("
Name.Variable:  "a"
Punctuation:  ")"
Operator.Word:  "and"
Punctuation:  "("
Name.Variable:  "b"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "assert"
Text:  " "
Literal.String:  "\"hello\""
Text:  " "
Operator:  "="
Text:  "  "
Literal.String:  "\"he\""
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\"llo\""
Text:  "<newline>"
Keyword:  "assert"
Text:  " "
Literal.String:  "\"hello\""
Text:  " "
Operator:  "=="
Text:  " "
Literal.String:  "\"hello world\""
Text:  " "
Operator:  "-"
Text:  " "
Literal.String:  "\" world\""
Text:  "<newline><newline>"
Keyword:  "stopwatch"
Text:  "<newline>"
Name.Variable:  "time"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "stopwatch"
Text:  "<newline>"
Keyword:  "clearinfo"
Text:  "<newline>"
Keyword:  "echo"
Text:  " "
Literal.String:  "This script took"
Text:  "<newline>"
Keyword:  "print"
Text:  " "
Literal.String.Interpol:  "'time'"
Text:  " "
Literal.String:  "seconds to"
Text:  "<newline>"
Keyword:  "printline"
Text:  " "
Literal.String:  "execute."
Text:  "<newline><newline>"
Comment.Single:  "# Old-style procedure declaration"
Text:  "<newline>"
Keyword:  "procedure"
Text:  " "
Name.Function:  "oldStyle"
Text:  " "
Name.Variable:  ".str1$"
Text:  " "
Name.Variable:  ".num"
Text:  " "
Name.Variable:  ".str2$"
Text:  "<newline>  "
Name.Variable:  ".local"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number:  "1"
Text:  "<newline>"
Keyword:  "endproc"
Text:  "<newline><newline>"
Comment.Single:  "# New-style procedure declaration with parentheses"
Text:  "<newline>"
Keyword:  "procedure"
Text:  " "
Name.Function:  "newStyle"
Punctuation:  " ("
Name.Variable:  ".str1$"
Punctuation:  ","
Text:  " "
Name.Variable:  ".num"
Punctuation:  ","
Text:  " "
Name.Variable:  ".str2$"
Punctuation:  ")"
Text:  "<newline>  "
Comment.Single:  "# Command with \"local\" variable"
Text:  "<newline>  "
Name.Variable:  ".local"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get total duration"
Text:  "<newline>  "
Name.Variable:  ".local"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get "
Literal.String.Interpol:  "'some'"
Keyword:  " duration"
Text:  "<newline>  "
Name.Variable:  ".local"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get "
Literal.String.Interpol:  "'some[1]'"
Keyword:  " value..."
Text:  " "
Name.Variable:  "hello"
Text:  " "
Literal.Number:  "10"
Text:  " "
Name.Variable:  "p"
Text:  "["
Name.Variable:  "i"
Text:  "]<newline>  "
Name.Variable:  ".local"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get "
Literal.String.Interpol:  "'some[1,3]'"
Keyword:  " value:"
Text:  " "
Literal.String:  "\"hello\""
Punctuation:  ","
Text:  " "
Literal.Number:  "10"
Punctuation:  ","
Text:  " "
Name.Variable:  "p"
Text:  "["
Name.Variable:  "i"
Text:  "]<newline>  "
Name.Variable:  ".local"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get "
Literal.String.Interpol:  "'some$'"
Keyword:  " duration"
Text:  "<newline>  "
Name.Variable:  ".local"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get "
Literal.String.Interpol:  "'some$[1]'"
Keyword:  " duration"
Text:  "<newline>"
Keyword:  "endproc"
Text:  "<newline><newline>"
Comment.Single:  "# New-style procedure declaration with colon"
Text:  "<newline>"
Keyword:  "procedure"
Text:  " "
Name.Function:  "_new_style"
Punctuation:  ":"
Text:  " "
Name.Variable:  ".str1$"
Punctuation:  ","
Text:  " "
Name.Variable:  ".num"
Punctuation:  ","
Text:  " "
Name.Variable:  ".str2$"
Text:  "<newline>  "
Comment.Single:  "# Command with \"local\" variable"
Text:  "<newline>  "
Comment.Single:  "# Initial underscores in variables not allowed (unless interpolated)"
Text:  "<newline>  _"
Name.Variable:  "new_style.local"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Get total duration"
Text:  "<newline>"
Keyword:  "endproc"
Text:  "<newline><newline>"
Keyword:  "asserterror"
Text:  " "
Literal.String:  "Unknown symbol:"
Literal.String.Interpol:  "'newline$'"
Literal.String:  "\u00AB _"
Text:  "<newline>"
Keyword:  "assert"
Text:  " "
Literal.String.Interpol:  "'_new_style.local'"
Text:  "<newline><newline>"
Name.Function:  "@proc"
Punctuation:  ":"
Text:  " "
Name.Variable:  "a"
Punctuation:  ","
Text:  " "
Name.Function:  "selected"
Text:  "("
Literal.String:  "\"string\""
Text:  ")"
Punctuation:  ","
Text:  " "
Name.Variable:  "b"
Text:  "<newline>"
Comment.Single:  "# Comment"
Text:  "<newline><newline>"
Keyword:  "for"
Text:  " "
Name.Variable:  "i"
Text:  " "
Keyword:  "to"
Text:  " "
Name.Variable:  "saveSelection.n"
Text:  "<newline>  "
Name.Function:  "selectObject"
Text:  ": "
Name.Variable:  "saveSelection.id"
Text:  "["
Name.Variable:  "i"
Text:  "]<newline>  "
Name.Function:  "appendInfoLine"
Text:  ": "
Name.Function:  "selected$"
Text:  "()<newline>"
Keyword:  "endfor"
Text:  "<newline><newline>"
Name.Function:  "@ok"
Punctuation:  "("
Keyword:  "if"
Text:  " "
Name.Function:  "selected$"
Text:  "("
Literal.String:  "\"Sound\""
Text:  ") "
Operator:  "="
Text:  " "
Literal.String:  "\"tone\""
Text:  " "
Keyword:  "then"
Text:  " "
Literal.Number:  "1"
Text:  " "
Keyword:  "else"
Text:  " "
Literal.Number:  "0"
Text:  " "
Keyword:  "fi"
Punctuation:  ","
Text:  "<newline>  "
Punctuation:  "..."
Text:  " "
Literal.String:  "\"selected sound is tone\""
Punctuation:  ")"
Text:  "<newline><newline>"
Name.Function:  "@ok_formula"
Punctuation:  "("
Literal.String:  "\"selected$(\"\"Sound\"\") = \"\"tone\"\"\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"selected sound is tone\""
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "call"
Text:  " "
Name.Function:  "try"
Text:  "<newline>  "
Punctuation:  "..."
Text:  " "
Literal.String.Interpol:  "'newline$'"
Text:  " "
Comment.Single:  "# This is really all a string, but it is undetectable"
Text:  "<newline>  "
Punctuation:  "..."
Text:  " "
Literal.String.Interpol:  "'newline$'"
Text:  " "
Comment.Single:  "# without knowing the arguments for the procedure"
Text:  "<newline>  "
Punctuation:  "..."
Text:  " "
Literal.String.Interpol:  "'newline$'"
Text:  " "
Keyword:  "assert"
Text:  " "
Literal.String:  "\"hello\""
Text:  " "
Operator:  "="
Text:  "  "
Literal.String:  "\"he\""
Text:  " "
Operator:  "+"
Text:  " "
Literal.String:  "\"llo\""
Text:  "<newline>  "
Punctuation:  "..."
Text:  " "
Literal.String.Interpol:  "'newline$'"
Text:  " "
Keyword:  "assert"
Text:  " "
Literal.String:  "\"hello\""
Text:  " "
Operator:  "=="
Text:  " "
Literal.String:  "\"hello world\""
Text:  " "
Operator:  "-"
Text:  " "
Literal.String:  "\" world\""
Text:  "<newline>"
