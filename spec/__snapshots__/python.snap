Keyword:  "def"
Text:  " "
Name.Function:  "lex"
Punctuation:  "("
Name:  "code"
Punctuation:  ","
Text:  " "
Name:  "lexer"
Punctuation:  "):"
Text:  "<newline>    "
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "<newline>    Lex ``code`` with ``lexer`` and return an iterable of tokens.<newline>    "
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline>    "
Keyword:  "try"
Punctuation:  ":"
Text:  "<newline>        "
Keyword:  "return"
Text:  " "
Name:  "lexer"
Punctuation:  "."
Name.Function:  "get_tokens"
Punctuation:  "("
Name:  "code"
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "except"
Text:  " "
Name.Builtin:  "TypeError"
Punctuation:  ","
Text:  " "
Name:  "err"
Punctuation:  ":"
Text:  "<newline>        "
Keyword:  "if"
Text:  " "
Name.Function:  "isinstance"
Punctuation:  "("
Name:  "err"
Punctuation:  "."
Name:  "args"
Punctuation:  "["
Literal.Number.Integer:  "0"
Punctuation:  "],"
Text:  " "
Name.Builtin:  "str"
Punctuation:  ")"
Text:  " "
Operator.Word:  "and"
Text:  " \\<newline>           "
Literal.String.Heredoc:  "'"
Literal.String:  "unbound method get_tokens"
Literal.String.Heredoc:  "'"
Text:  " "
Operator.Word:  "in"
Text:  " "
Name:  "err"
Punctuation:  "."
Name:  "args"
Punctuation:  "["
Literal.Number.Integer:  "0"
Punctuation:  "]:"
Text:  "<newline>            "
Keyword:  "raise"
Text:  " "
Name.Class:  "TypeError"
Punctuation:  "("
Literal.String.Heredoc:  "'"
Literal.String:  "lex() argument must be a lexer instance, "
Literal.String.Heredoc:  "'"
Text:  "<newline>                            "
Literal.String.Heredoc:  "'"
Literal.String:  "not a class"
Literal.String.Heredoc:  "'"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "raise"
Text:  "<newline><newline>"
Comment.Single:  "# quotes in strings<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "foo"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Heredoc:  "\""
Literal.String:  "it"
Literal.String.Heredoc:  "'"
Literal.String:  "s working"
Literal.String.Heredoc:  "\""
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "foo"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String:  "he said "
Literal.String.Heredoc:  "\""
Literal.String:  "hi"
Literal.String.Heredoc:  "\"'"
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "foo"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "it"
Literal.String.Heredoc:  "'"
Literal.String:  "s working"
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline>    "
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "he said "
Literal.String.Heredoc:  "\""
Literal.String:  "hi"
Literal.String.Heredoc:  "\""
Literal.String:  " "
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "foo"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Heredoc:  "'''"
Literal.String:  "he said "
Literal.String.Heredoc:  "\""
Literal.String:  "hi"
Literal.String.Heredoc:  "\"'''"
Text:  "<newline>    "
Literal.String.Heredoc:  "'''"
Literal.String:  "it"
Literal.String.Heredoc:  "'"
Literal.String:  "s working"
Literal.String.Heredoc:  "'''"
Text:  "<newline><newline>"
Comment.Single:  "# unicode docstrings<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "foo"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Affix:  "ur"
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "unicode-raw"
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "bar"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Affix:  "u"
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "unicode"
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "baz"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  "raw"
Literal.String.Heredoc:  "'"
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "zap"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "docstring"
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline><newline>"
Comment.Single:  "# escaped characters in string literals<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "baz"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String.Escape:  "\\a\\b\\f<newline>\\r\\t\\v\\\"\\'"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String.Escape:  "\\N{DEGREE SIGN}"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String.Escape:  "\\uaF09"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String.Escape:  "\\UaaaaAF09"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String.Escape:  "\\xaf\\xAF\\x09"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String.Escape:  "\\007"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Heredoc:  "'"
Literal.String:  ".*\\[p00t_(d\\d{4})\\].*"
Literal.String.Heredoc:  "'"
Text:  " "
Comment.Single:  "# There are no escape sequences in this string<newline>"
Text:  "<newline>"
Comment.Single:  "# escaped characters in raw strings<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "baz"
Punctuation:  "():"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  "\\a\\b\\f<newline>\\r\\t\\v\\\"\\'"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  "\\N{DEGREE SIGN}"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  "\\uaF09"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  "\\UaaaaAF09"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  "\\xaf\\xAF\\x09"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  "\\007"
Literal.String.Heredoc:  "'"
Text:  "<newline>    "
Literal.String.Affix:  "r"
Literal.String.Heredoc:  "'"
Literal.String:  ".*\\[p00t_(d\\d{4})\\].*"
Literal.String.Heredoc:  "'"
Text:  "<newline><newline>"
Comment.Single:  "# line continuations<newline>"
Name:  "apple"
Punctuation:  "."
Name.Function:  "filter"
Punctuation:  "("
Name:  "x"
Punctuation:  ","
Text:  " "
Name:  "y"
Punctuation:  ")"
Text:  "<newline>"
Name:  "apple"
Punctuation:  "."
Text:  "\\<newline>    "
Name.Function:  "filter"
Punctuation:  "("
Name:  "x"
Punctuation:  ","
Text:  " "
Name:  "y"
Punctuation:  ")"
Text:  "<newline><newline>"
Literal.Number.Integer:  "1"
Text:  " \\<newline>    "
Punctuation:  "."
Text:  " \\<newline>    "
Name:  "__str__"
Text:  "<newline><newline>"
Keyword.Namespace:  "from"
Text:  " "
Name:  "os"
Text:  " "
Keyword.Namespace:  "import"
Text:  " "
Name:  "path"
Text:  "<newline>"
Keyword.Namespace:  "from"
Text:  " \\<newline>        "
Name:  "os"
Text:  " \\<newline>        "
Keyword.Namespace:  "import"
Text:  " \\<newline>        "
Name:  "path"
Text:  "<newline><newline>"
Keyword.Namespace:  "import"
Text:  " "
Name:  "os.path"
Text:  " "
Keyword:  "as"
Text:  " "
Name:  "something"
Text:  "<newline><newline>"
Keyword:  "import"
Text:  " \\<newline>        "
Name:  "os"
Punctuation:  "."
Name:  "path"
Text:  " \\<newline>        "
Keyword:  "as"
Text:  " \\<newline>        "
Name:  "something"
Text:  "<newline><newline>"
Keyword:  "class"
Text:  " \\<newline> "
Name.Class:  "Spam"
Punctuation:  ":"
Text:  "<newline>    "
Keyword:  "pass"
Text:  "<newline><newline>"
Keyword:  "class"
Text:  " "
Name.Class:  "Spam"
Punctuation:  ":"
Text:  " "
Keyword:  "pass"
Text:  "<newline><newline>"
Keyword:  "class"
Text:  " "
Name.Class:  "Spam"
Punctuation:  "("
Name.Builtin:  "object"
Punctuation:  "):"
Text:  "<newline>    "
Keyword:  "pass"
Text:  "<newline><newline>"
Keyword:  "class"
Text:  " \\<newline> "
Name.Class:  "Spam"
Text:  " \\<newline>  "
Punctuation:  "("
Text:  "<newline>   "
Name.Builtin:  "object"
Text:  "<newline> "
Punctuation:  ")"
Text:  " \\<newline> "
Punctuation:  ":"
Text:  "<newline> "
Keyword:  "pass"
Text:  "<newline><newline><newline>"
Keyword:  "def"
Text:  " \\<newline> "
Name.Function:  "spam"
Text:  " \\<newline>  "
Punctuation:  "("
Text:  " \\<newline>  "
Punctuation:  ")"
Text:  " \\<newline>  "
Punctuation:  ":"
Text:  " \\<newline>  "
Keyword:  "pass"
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "the_word_strand"
Punctuation:  "():"
Text:  "<newline>    "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Name:  "b"
Punctuation:  "."
Name.Function:  "strip"
Punctuation:  "()"
Text:  "<newline>    "
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Name:  "strand"
Text:  "<newline>    "
Name:  "b"
Text:  " "
Operator:  "="
Text:  " "
Name:  "band"
Text:  "<newline>    "
Name:  "c"
Text:  " "
Operator:  "="
Text:  " "
Name:  "strand"
Text:  "<newline>    "
Name:  "b"
Text:  " "
Operator:  "="
Text:  " "
Name:  "error"
Text:  "<newline>    "
Name:  "c"
Text:  " "
Operator:  "="
Text:  " "
Name:  "stror"
Text:  "<newline>    "
Name:  "c"
Text:  " "
Operator:  "="
Text:  " "
Name:  "string"
Text:  "<newline><newline>"
Name:  "py2_long"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "-"
Literal.Number.Integer.Long:  "123L"
Text:  "<newline><newline>"
Comment.Single:  "# Python 3<newline>"
Text:  "<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "test"
Punctuation:  "():"
Text:  "<newline>    "
Keyword:  "raise"
Text:  " "
Name.Builtin:  "Exception"
Text:  " "
Keyword:  "from"
Text:  " "
Name:  "foo"
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "exceptions"
Punctuation:  "():"
Text:  "<newline>    "
Keyword:  "try"
Punctuation:  ":"
Text:  "<newline>        "
Name.Function:  "print"
Punctuation:  "("
Literal.String.Heredoc:  "\""
Literal.String:  "Hello"
Literal.String.Heredoc:  "\""
Punctuation:  ")"
Text:  "<newline>    "
Keyword:  "except"
Text:  " "
Name.Builtin:  "Exception"
Text:  " "
Keyword:  "as"
Text:  " "
Name:  "e"
Punctuation:  ":"
Text:  "<newline>        "
Name.Function:  "print"
Punctuation:  "("
Literal.String.Heredoc:  "\""
Literal.String:  "Exception"
Literal.String.Heredoc:  "\""
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "# PEP 515<newline>"
Name:  "integer_literals"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  "<newline>    "
Literal.Number.Integer:  "123"
Punctuation:  ","
Text:  " "
Operator:  "-"
Literal.Number.Integer:  "1_2_0"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "00"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "0_0_00"
Punctuation:  ","
Text:  " "
Literal.Number.Bin:  "0b1"
Punctuation:  ","
Text:  " "
Literal.Number.Bin:  "0B1_0"
Punctuation:  ","
Text:  " "
Literal.Number.Bin:  "0b_1"
Punctuation:  ","
Text:  " "
Literal.Number.Bin:  "0b00_0"
Punctuation:  ","
Text:  "<newline>    "
Literal.Number.Oct:  "0o1"
Punctuation:  ","
Text:  " "
Literal.Number.Oct:  "0O1_2"
Punctuation:  ","
Text:  " "
Literal.Number.Oct:  "0O_1"
Punctuation:  ","
Text:  " "
Literal.Number.Oct:  "0o00_0"
Punctuation:  ","
Text:  " "
Literal.Number.Hex:  "0x1"
Punctuation:  ","
Text:  " "
Literal.Number.Hex:  "0X1_2"
Punctuation:  ","
Text:  " "
Literal.Number.Hex:  "0x_1"
Punctuation:  ","
Text:  " "
Literal.Number.Hex:  "0x00_0"
Text:  "<newline>"
Punctuation:  "]"
Text:  "<newline>"
Name:  "float_literals"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Text:  "<newline>    "
Literal.Number.Float:  "0."
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "1."
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "00."
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0_00."
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "1_0_0."
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0_1."
Punctuation:  ","
Text:  " "
Punctuation:  "."
Literal.Number.Integer:  "0"
Punctuation:  ","
Text:  "<newline>    "
Punctuation:  "."
Literal.Number.Integer:  "1_2"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "3.4_5"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "1_2.3_4"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "00_0.0_0_0"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0_0.1_2"
Punctuation:  ","
Text:  "<newline>    "
Literal.Number.Float:  "0_1_2j"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0_00J"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "1.2J"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0.1j"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "1_0.J"
Punctuation:  ","
Text:  "<newline>    "
Literal.Number.Float:  "0_00E+2_34_5"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0.e+1"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "00_1.E-0_2"
Punctuation:  ","
Text:  " "
Operator:  "-"
Literal.Number.Float:  "100.e+20"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "1e01"
Punctuation:  ","
Text:  "<newline>    "
Literal.Number.Float:  "0_00E+2_34_5j"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0.e+1J"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "00_1.E-0_2j"
Punctuation:  ","
Text:  " "
Operator:  "-"
Literal.Number.Float:  "100.e+20J"
Text:  " "
Literal.Number.Float:  "1e01j"
Text:  "<newline>"
Punctuation:  "]"
Text:  "<newline>"
Name:  "floats"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "("
Literal.Number.Float:  "19.0"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "19."
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "# PEP 465<newline>"
Name:  "a"
Text:  " "
Operator:  "="
Text:  " "
Name:  "b"
Text:  " "
Operator:  "@"
Text:  " "
Name:  "c"
Text:  "<newline>"
Name:  "x"
Text:  " "
Operator:  "@="
Text:  " "
Name:  "y"
Text:  "<newline><newline>"
Comment.Single:  "# PEP 498<newline>"
Literal.String.Affix:  "f"
Literal.String.Heredoc:  "'"
Literal.String.Interpol:  "{"
Name:  "hello"
Literal.String.Interpol:  "}"
Literal.String:  " world "
Literal.String.Interpol:  "{"
Name.Function:  "int"
Punctuation:  "("
Name:  "x"
Punctuation:  ")"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Literal.String.Interpol:  "}"
Literal.String.Heredoc:  "'"
Text:  "<newline>"
Literal.String.Affix:  "f"
Literal.String.Heredoc:  "'"
Literal.String:  "{{ "
Literal.String.Interpol:  "{"
Literal.Number.Integer:  "4"
Operator:  "*"
Literal.Number.Integer:  "10"
Literal.String.Interpol:  "}"
Literal.String:  " }}"
Literal.String.Heredoc:  "'"
Text:  "<newline>"
Literal.String.Affix:  "f"
Literal.String.Heredoc:  "'"
Literal.String:  "result: "
Literal.String.Interpol:  "{"
Name:  "value"
Literal.String.Interpol:  ":{"
Name:  "width"
Literal.String.Interpol:  "}"
Punctuation:  "."
Literal.String.Interpol:  "{"
Name:  "precision"
Literal.String.Interpol:  "}}"
Literal.String.Heredoc:  "'"
Text:  "<newline>"
Literal.String.Affix:  "f"
Literal.String.Heredoc:  "'"
Literal.String.Interpol:  "{"
Name:  "value"
Literal.String.Interpol:  "!r}"
Literal.String.Heredoc:  "'"
Text:  "<newline><newline>"
Comment.Single:  "# Unicode identifiers<newline>"
Name:  "\u03B1"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "10"
Text:  "<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "co\u00F6perative"
Punctuation:  "("
Name:  "\u0431"
Punctuation:  "):"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Literal.String.Affix:  "f"
Literal.String.Heredoc:  "\""
Literal.String.Interpol:  "{"
Name:  "\u0431"
Literal.String.Interpol:  "}"
Literal.String:  " is Russian"
Literal.String.Heredoc:  "\""
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "__init__"
Punctuation:  "("
Name:  "self"
Punctuation:  ","
Text:  " "
Name:  "input_dim"
Punctuation:  ":"
Text:  " "
Name.Builtin:  "list"
Punctuation:  ","
Text:  " "
Name:  "output_dim"
Punctuation:  ":"
Text:  " "
Name.Builtin:  "int"
Punctuation:  ","
Text:  " "
Operator:  "**"
Name:  "kwargs"
Punctuation:  "):"
Text:  "<newline>    "
Name.Function:  "super"
Punctuation:  "("
Name:  "AverageEmbedding"
Punctuation:  ","
Text:  " "
Name:  "self"
Punctuation:  ")."
Name.Function:  "__init__"
Punctuation:  "("
Operator:  "**"
Name:  "kwargs"
Punctuation:  ")"
Text:  "<newline>    "
Name:  "self"
Punctuation:  "."
Name:  "input_dim"
Text:  " "
Operator:  "="
Text:  " "
Name:  "input_dim"
Text:  "<newline>    "
Name:  "self"
Punctuation:  "."
Name:  "output_dim"
Text:  " "
Operator:  "="
Text:  " "
Name:  "output_dim"
Text:  "<newline><newline>"
Name.Decorator:  "@abstractmethod"
Text:  "<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "evaluate"
Punctuation:  "("
Name:  "self"
Punctuation:  ","
Text:  " "
Operator:  "*"
Name:  "args"
Punctuation:  ","
Text:  " "
Operator:  "**"
Name:  "kwargs"
Punctuation:  "):"
Text:  "<newline>    "
Keyword:  "raise"
Text:  " "
Name.Builtin:  "NotImplementedError"
Text:  "<newline><newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "_get_metadata"
Punctuation:  "("
Name:  "self"
Punctuation:  ","
Text:  " "
Name:  "input_samples"
Punctuation:  ":"
Text:  " "
Name.Builtin:  "list"
Punctuation:  "["
Name:  "InputSample"
Punctuation:  "])"
Text:  " "
Operator:  "->"
Text:  " "
Name:  "Tuple"
Punctuation:  "["
Name.Builtin:  "str"
Punctuation:  ","
Text:  " "
Name.Builtin:  "str"
Punctuation:  ","
Text:  " "
Name.Builtin:  "int"
Punctuation:  "]:"
Text:  "<newline>    "
Name:  "project_name"
Punctuation:  ","
Text:  " "
Name.Builtin:  "id"
Text:  " "
Operator:  "="
Text:  " "
Name:  "self"
Punctuation:  "."
Name.Function:  "_get_info"
Punctuation:  "()"
Text:  "<newline><newline>"
Keyword:  "class"
Text:  " "
Name.Class:  "Spam"
Punctuation:  ":"
Text:  "<newline>    "
Keyword:  "pass"
Text:  "<newline><newline>"
Name:  "spam"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "Spam"
Punctuation:  "()"
Text:  "<newline><newline>"
Comment.Single:  "# Doctest<newline>"
Keyword:  "def"
Text:  " "
Name.Function:  "factorial"
Punctuation:  "("
Name:  "n"
Punctuation:  "):"
Text:  "<newline>    "
Literal.String.Heredoc:  "\"\"\""
Literal.String:  "Return the factorial of n, an exact integer >= 0.<newline><newline>    "
Generic.Prompt:  ">>>"
Text:  " "
Punctuation:  "["
Name.Function:  "factorial"
Punctuation:  "("
Name:  "n"
Punctuation:  ")"
Text:  " "
Keyword:  "for"
Text:  " "
Name:  "n"
Text:  " "
Operator.Word:  "in"
Text:  " "
Name.Function:  "range"
Punctuation:  "("
Literal.Number.Integer:  "6"
Punctuation:  ")]"
Text:  "<newline>    "
Punctuation:  "["
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "2"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "6"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "24"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "120"
Punctuation:  "]"
Text:  "<newline><newline>"
Literal.String:  "    "
Generic.Prompt:  ">>>"
Text:  " "
Keyword:  "for"
Text:  " "
Name:  "i"
Text:  " "
Operator.Word:  "in"
Text:  " "
Punctuation:  "["
Name.Function:  "factorial"
Punctuation:  "("
Name:  "n"
Punctuation:  ")"
Text:  " "
Keyword:  "for"
Text:  " "
Name:  "n"
Text:  " "
Operator.Word:  "in"
Text:  " "
Name.Function:  "range"
Punctuation:  "("
Literal.Number.Integer:  "2"
Punctuation:  ")]:"
Text:  "<newline>    "
Punctuation:  "..."
Text:  "     "
Name.Function:  "print"
Punctuation:  "("
Name:  "i"
Punctuation:  ")"
Text:  "<newline>    "
Literal.Number.Integer:  "1"
Text:  "<newline>    "
Literal.Number.Integer:  "1"
Text:  "<newline>    "
Generic.Prompt:  ">>>"
Text:  " "
Name.Function:  "factorial"
Punctuation:  "("
Literal.Number.Integer:  "30"
Punctuation:  ")"
Text:  "<newline>    "
Literal.Number.Integer:  "265252859812191058636308480000000"
Text:  "<newline>    "
Generic.Prompt:  ">>>"
Text:  " "
Name.Function:  "factorial"
Punctuation:  "("
Operator:  "-"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  "<newline>    "
Name.Class:  "Traceback "
Punctuation:  "("
Name:  "most"
Text:  " "
Name:  "recent"
Text:  " "
Name:  "call"
Text:  " "
Name:  "last"
Punctuation:  "):"
Text:  "<newline>        "
Name.Builtin.Pseudo:  "..."
Text:  "<newline>    "
Name.Builtin:  "ValueError"
Punctuation:  ":"
Text:  " "
Name:  "n"
Text:  " "
Name:  "must"
Text:  " "
Name:  "be"
Text:  " "
Operator:  ">="
Text:  " "
Literal.Number.Integer:  "0"
Text:  "<newline><newline>"
Literal.String:  "    Factorials of floats are OK, but the float must be an exact integer:<newline>    "
Generic.Prompt:  ">>>"
Text:  " "
Name.Function:  "factorial"
Punctuation:  "("
Literal.Number.Float:  "30.1"
Punctuation:  ")"
Text:  "<newline>    "
Name.Class:  "Traceback "
Punctuation:  "("
Name:  "most"
Text:  " "
Name:  "recent"
Text:  " "
Name:  "call"
Text:  " "
Name:  "last"
Punctuation:  "):"
Text:  "<newline>        "
Name.Builtin.Pseudo:  "..."
Text:  "<newline>    "
Name.Builtin:  "ValueError"
Punctuation:  ":"
Text:  " "
Name:  "n"
Text:  " "
Name:  "must"
Text:  " "
Name:  "be"
Text:  " "
Name:  "exact"
Text:  " "
Name:  "integer"
Text:  "<newline>    "
Generic.Prompt:  ">>>"
Text:  " "
Name.Function:  "factorial"
Punctuation:  "("
Literal.Number.Float:  "30.0"
Punctuation:  ")"
Text:  "<newline>    "
Literal.Number.Integer:  "265252859812191058636308480000000"
Text:  "<newline><newline>"
Literal.String:  "    It must also not be ridiculously large:<newline>    "
Generic.Prompt:  ">>>"
Text:  " "
Name.Function:  "factorial"
Punctuation:  "("
Literal.Number.Float:  "1e100"
Punctuation:  ")"
Text:  "<newline>    "
Name.Class:  "Traceback "
Punctuation:  "("
Name:  "most"
Text:  " "
Name:  "recent"
Text:  " "
Name:  "call"
Text:  " "
Name:  "last"
Punctuation:  "):"
Text:  "<newline>        "
Name.Builtin.Pseudo:  "..."
Text:  "<newline>    "
Name.Builtin:  "OverflowError"
Punctuation:  ":"
Text:  " "
Name:  "n"
Text:  " "
Name:  "too"
Text:  " "
Name:  "large"
Text:  "<newline>    "
Literal.String.Heredoc:  "\"\"\""
Text:  "<newline>    "
Name.Function:  "print"
Punctuation:  "("
Literal.String.Heredoc:  "\""
Literal.String:  "hello world"
Literal.String.Heredoc:  "\""
Punctuation:  ")"
Text:  "<newline>"
