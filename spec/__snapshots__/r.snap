Comment.Single:  "#!/usr/bin/env Rscript"
Text.Whitespace:  "<newline>"
Comment.Single:  "### Example R script for syntax highlighting"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "# This is also a comment"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Valid names"
Text.Whitespace:  "<newline>"
Name:  "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUV0123456789._a"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "f2_bar"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "F2_BAR"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  ".foo_"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "._foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "."
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  ".."
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "..."
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "c"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name.Function:  "c"
Punctuation:  "("
Name.Builtin:  "T"
Punctuation:  ","
Text.Whitespace:  " "
Name.Builtin:  "F"
Punctuation:  ")"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Invalid names"
Text.Whitespace:  "<newline>"
Literal.Number:  "0"
Name:  "abc"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Literal.Number:  ".0"
Name:  "abc"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "abc"
Operator:  "+"
Name:  "cde"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Error:  "_"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Error:  "_"
Name:  "x"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Reserved Words"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "NA"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "NA_integer_"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "NA_real_"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "NA_character_"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "NA_complex_"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "NaN"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "Inf"
Text.Whitespace:  "<newline>"
Comment.Single:  "## Not reserved"
Text.Whitespace:  "<newline>"
Name:  "NULLa"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "NULL1"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "NULL."
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline>"
Name:  "NA_foo_"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword.Constant:  "NULL"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Numbers"
Text.Whitespace:  "<newline>"
Literal.Number:  "12345678901"
Text.Whitespace:  "<newline>"
Literal.Number:  "123456.78901"
Text.Whitespace:  "<newline>"
Literal.Number:  "123e3"
Text.Whitespace:  "<newline>"
Literal.Number:  "123E3"
Text.Whitespace:  "<newline>"
Literal.Number:  "1.23e-3"
Text.Whitespace:  "<newline>"
Literal.Number:  "1.23e3"
Text.Whitespace:  "<newline>"
Literal.Number:  "1.23e-3"
Text.Whitespace:  "<newline>"
Literal.Number:  ".25"
Text.Whitespace:  "<newline>"
Comment.Single:  "## integer constants"
Text.Whitespace:  "<newline>"
Literal.Number:  "123L"
Text.Whitespace:  "<newline>"
Literal.Number:  "1.23L"
Text.Whitespace:  "<newline>"
Comment.Single:  "## imaginary numbers"
Text.Whitespace:  "<newline>"
Literal.Number:  "123i"
Text.Whitespace:  "<newline>"
Literal.Number:  "-123i"
Text.Whitespace:  "<newline>"
Literal.Number:  "123e4i"
Text.Whitespace:  "<newline>"
Literal.Number:  "123e-4i"
Text.Whitespace:  "<newline>"
Comment.Single:  "## Hex numbers"
Text.Whitespace:  "<newline>"
Literal.Number.Hex:  "0xabcdefABCDEF01234"
Text.Whitespace:  "<newline>"
Literal.Number.Hex:  "0xabcp123"
Text.Whitespace:  "<newline>"
Literal.Number.Hex:  "0xabcP123"
Text.Whitespace:  "<newline>"
Comment.Single:  "## Not hex"
Text.Whitespace:  "<newline>"
Literal.Number:  "0"
Name:  "xg"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Special operators %xyz%"
Text.Whitespace:  "<newline>"
Comment.Single:  "## %xyz%"
Text.Whitespace:  "<newline>"
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "%%"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Name:  "diag"
Punctuation:  "("
Literal.Number:  "2"
Punctuation:  ")"
Text.Whitespace:  " "
Operator:  "%*%"
Text.Whitespace:  " "
Name:  "diag"
Punctuation:  "("
Literal.Number:  "2"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "%/%"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "%in%"
Text.Whitespace:  " "
Literal.Number:  "1"
Operator:  ":"
Literal.Number:  "10"
Text.Whitespace:  "<newline>"
Name:  "diag"
Punctuation:  "("
Literal.Number:  "2"
Punctuation:  ")"
Text.Whitespace:  " "
Operator:  "%o%"
Text.Whitespace:  " "
Name:  "diag"
Punctuation:  "("
Literal.Number:  "2"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Name:  "diag"
Punctuation:  "("
Literal.Number:  "2"
Punctuation:  ")"
Text.Whitespace:  " "
Operator:  "%x%"
Text.Whitespace:  " "
Name:  "diag"
Punctuation:  "("
Literal.Number:  "2"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Name:  "`%foo bar%`"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword:  "function"
Punctuation:  "("
Name:  "x"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "y"
Punctuation:  ")"
Text.Whitespace:  " "
Name:  "x"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Name:  "y"
Text.Whitespace:  "<newline>"
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "%foo bar%"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Control Structures (3.2) and Function"
Text.Whitespace:  "<newline>"
Comment.Single:  "## if, else"
Text.Whitespace:  "<newline>"
Keyword:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Keyword.Constant:  "TRUE"
Punctuation:  ")"
Text.Whitespace:  " "
Name:  "print"
Punctuation:  "("
Literal.String.Double:  "\"foo\""
Punctuation:  ")"
Text.Whitespace:  " "
Keyword:  "else"
Text.Whitespace:  " "
Name:  "print"
Punctuation:  "("
Literal.String.Double:  "\"bar\""
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Comment.Single:  "## For, in"
Text.Whitespace:  "<newline>"
Keyword:  "for"
Punctuation:  "("
Name:  "i"
Text.Whitespace:  " "
Keyword:  "in"
Text.Whitespace:  " "
Literal.Number:  "1"
Operator:  ":"
Literal.Number:  "5"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name:  "print"
Punctuation:  "("
Name:  "i"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline>"
Comment.Single:  "## While, break"
Text.Whitespace:  "<newline>"
Name:  "i"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  "<newline>"
Keyword:  "while"
Text.Whitespace:  " "
Punctuation:  "("
Keyword.Constant:  "TRUE"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name:  "i"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Name:  "i"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  "<newline>    "
Keyword:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Name:  "i"
Text.Whitespace:  " "
Operator:  ">"
Text.Whitespace:  " "
Literal.Number:  "3"
Punctuation:  ")"
Text.Whitespace:  " "
Keyword:  "break"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline>"
Comment.Single:  "## Repeat"
Text.Whitespace:  "<newline>"
Keyword:  "repeat"
Text.Whitespace:  " "
Punctuation:  "{"
Literal.Number:  "1+1"
Punctuation:  "}"
Text.Whitespace:  "<newline>"
Comment.Single:  "## Switch"
Text.Whitespace:  "<newline>"
Name:  "x"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "3"
Text.Whitespace:  "<newline>"
Name.Function:  "switch"
Punctuation:  "("
Name:  "x"
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "2+2"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "mean"
Punctuation:  "("
Literal.Number:  "1"
Operator:  ":"
Literal.Number:  "10"
Punctuation:  "),"
Text.Whitespace:  " "
Name:  "rnorm"
Punctuation:  "("
Literal.Number:  "5"
Punctuation:  "))"
Text.Whitespace:  "<newline>"
Comment.Single:  "## Function, dot-dot-dot, return"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword:  "function"
Punctuation:  "("
Name:  "..."
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name.Function:  "return"
Punctuation:  "("
Name.Function:  "sum"
Punctuation:  "("
Name:  "..."
Punctuation:  "))"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline>"
Comment.Single:  "# Not keywords"
Text.Whitespace:  "<newline>"
Name:  "functiona"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Name:  "function."
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Name:  "function1"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline><newline><newline>"
Comment.Single:  "## Grouping Tokens 10.3.7"
Text.Whitespace:  "<newline>"
Comment.Single:  "## Parentheses"
Text.Whitespace:  "<newline>"
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Punctuation:  "("
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "3"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Comment.Single:  "## brackets"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Keyword:  "function"
Punctuation:  "("
Name:  "a"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text.Whitespace:  "<newline>    "
Name:  "a"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  "<newline>"
Punctuation:  "}"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Indexing 10.3.8"
Text.Whitespace:  "<newline>"
Comment.Single:  "## []"
Text.Whitespace:  "<newline>"
Name:  "bar"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "1"
Operator:  ":"
Literal.Number:  "10"
Text.Whitespace:  "<newline>"
Name:  "bar"
Punctuation:  "["
Literal.Number:  "3"
Punctuation:  "]"
Text.Whitespace:  "<newline>"
Comment.Single:  "## [[]]"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Name.Function:  "list"
Punctuation:  "("
Name:  "a"
Operator:  "="
Literal.Number:  "1"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "b"
Operator:  "="
Literal.Number:  "2"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "c"
Operator:  "="
Literal.Number:  "3"
Punctuation:  ")"
Text.Whitespace:  "<newline>"
Name:  "foo"
Punctuation:  "[["
Literal.String.Double:  "\"a\""
Punctuation:  "]]"
Text.Whitespace:  "<newline>"
Comment.Single:  "## $"
Text.Whitespace:  "<newline>"
Name:  "foo"
Operator:  "$"
Name:  "a"
Text.Whitespace:  "<newline>"
Name:  "foo"
Operator:  "$"
Literal.String.Double:  "\"a\""
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Operators"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "~"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Operator:  "!"
Text.Whitespace:  " "
Keyword.Constant:  "TRUE"
Text.Whitespace:  "<newline>"
Operator:  "?"
Literal.String.Double:  "\"help\""
Text.Whitespace:  "<newline>"
Literal.Number:  "1"
Operator:  ":"
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "*"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "/"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Operator:  "^"
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "<"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  ">"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "=="
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  ">="
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "<="
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "!="
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "TRUE"
Text.Whitespace:  " "
Operator:  "&"
Text.Whitespace:  " "
Keyword.Constant:  "FALSE"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "TRUE"
Text.Whitespace:  " "
Operator:  "&&"
Text.Whitespace:  " "
Keyword.Constant:  "FALSE"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "TRUE"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Keyword.Constant:  "FALSE"
Text.Whitespace:  "<newline>"
Keyword.Constant:  "TRUE"
Text.Whitespace:  " "
Operator:  "||"
Text.Whitespace:  " "
Keyword.Constant:  "FALSE"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "->"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<<-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "->>"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  "<newline>"
Name:  "base"
Operator:  ":::"
Name:  "sum"
Text.Whitespace:  "<newline>"
Name:  "base"
Operator:  "::"
Name:  "sum"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Strings"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Double:  "\"hello, world!\""
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Single:  "'hello, world!'"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Double:  "\"Hello, 'world!\""
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Single:  "'Hello, \"world!'"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Single:  "'Hello, \\'world!\\''"
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Double:  "\"Hello, \\\"world!\\\"\""
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Double:  "\"Hello,<newline>world!\""
Text.Whitespace:  "<newline>"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.String.Single:  "'Hello,<newline>world!'"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Backtick strings"
Text.Whitespace:  "<newline>"
Name:  "`foo123 +!\"bar'baz`"
Text.Whitespace:  " "
Operator:  "<-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline>"
Name:  "x"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name:  "` `"
Text.Whitespace:  " "
Operator:  "% %"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Builtin names"
Text.Whitespace:  "<newline><newline>"
Name.Builtin:  "LETTERS"
Text.Whitespace:  "<newline>"
Name.Builtin:  "letters"
Text.Whitespace:  "<newline>"
Name.Builtin:  "month.abb"
Text.Whitespace:  "<newline>"
Name.Builtin:  "month.name"
Text.Whitespace:  "<newline>"
Name.Builtin:  "pi"
Text.Whitespace:  "<newline><newline>"
Comment.Single:  "## Roxygen"
Text.Whitespace:  "<newline><newline>"
Comment.Doc:  "#' A description"
Text.Whitespace:  "<newline>"
Comment.Doc:  "#'"
Text.Whitespace:  "<newline>"
Comment.Doc:  "#' Long description"
Text.Whitespace:  "<newline>"
Comment.Doc:  "#' @param x the object"
Text.Whitespace:  "<newline>"
Comment.Doc:  "#' @return A logical indicating whether \\code{x == 0}"
Text.Whitespace:  "<newline>"
Name:  "is_zero"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Keyword:  "function"
Text.Whitespace:  " "
Punctuation:  "("
Name:  "x"
Punctuation:  ")"
Text.Whitespace:  " "
Name:  "x"
Text.Whitespace:  " "
Operator:  "=="
Text.Whitespace:  " "
Literal.Number:  "0"
Text.Whitespace:  "<newline>"
