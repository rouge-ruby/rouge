Operator:  "#"
Name.Variable:  "lang"
Text:  " "
Name.Variable:  "racket"
Text:  "<newline><newline>"
Comment.Single:  ";; Single-line comment"
Text:  "<newline><newline>"
Comment.Multiline:  "#| Block comment on one line |#"
Text:  "<newline><newline>"
Comment.Multiline:  "#|Block comment.<newline>(define x 3)<newline>is not highlighted as the commented text.<newline>|#"
Text:  "<newline><newline>"
Comment.Multiline:  "#|<newline>Block comment.<newline>(define x 3)<newline>is not highlighted as the commented text.<newline>|#"
Text:  "<newline><newline>"
Comment.Multiline:  "#| a |#"
Text:  " "
Literal.Number.Integer:  "1"
Text:  " "
Comment.Single:  "; reads equal to 1"
Text:  "<newline>"
Comment.Multiline:  "#| #| a |# 1 |#"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Comment.Single:  "; reads equal to 2"
Text:  "<newline><newline>"
Comment.Multiline:  "#;1"
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Comment.Single:  "; reads equal to 2"
Text:  "<newline>"
Comment.Multiline:  "#;(define x 1)"
Text:  " "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "x"
Text:  " "
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  " "
Comment.Single:  "; reads equal to (define x 2)"
Text:  "<newline>"
Comment.Multiline:  "#;(define x (f a b))"
Text:  " "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "x"
Text:  " "
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  " "
Comment.Single:  "; reads equal to (define x 2)"
Text:  "<newline><newline>"
Comment.Single:  "#!/bin/sh ; reads equal to nothing"
Text:  "<newline>"
Comment.Single:  "#! /bin/sh ; reads equal to nothing"
Text:  "<newline><newline>"
Literal.String.Symbol:  "'symbol"
Text:  "<newline>"
Literal.String.Symbol:  "`symbol"
Text:  "<newline>"
Operator:  "'"
Punctuation:  "("
Name.Function:  "a"
Text:  " "
Name.Variable:  "quoted"
Text:  " "
Name.Variable:  "list"
Punctuation:  ")"
Text:  "<newline>"
Operator:  "`"
Punctuation:  "("
Name.Function:  "a"
Text:  " "
Name.Variable:  "quasiquoted"
Text:  " "
Name.Variable:  "expr"
Text:  " "
Name.Variable:  "with"
Text:  " "
Operator:  ","
Name.Variable:  "unquasiquoted"
Text:  " "
Name.Variable:  "item"
Punctuation:  ")"
Text:  "<newline>"
Name.Tag:  "#:keyword"
Text:  "<newline>"
Literal.Number.Float:  "-inf.f"
Text:  "<newline>"
Literal.Number.Float:  "+inf.f"
Text:  "<newline>"
Literal.Number.Float:  "-inf.0"
Text:  "<newline>"
Literal.Number.Float:  "+inf.0"
Text:  "<newline>"
Literal.Number.Float:  "-min.0"
Text:  "<newline>"
Literal.Number.Float:  "+max.0"
Text:  "<newline>"
Literal.Number.Float:  "-nan.0"
Text:  "<newline>"
Literal.Number.Float:  "+nan.0"
Text:  "<newline><newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Punctuation:  "("
Name.Function:  "1-crazy-identifier-\u75AF\u72C2\u7684\u6807\u8BC6\u7B26-\u03C4\u03C1\u03B5\u03BB\u03CC-\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03CC"
Text:  " "
Name.Variable:  "x"
Punctuation:  ")"
Text:  "<newline>  "
Punctuation:  "("
Name.Builtin:  "add1"
Text:  " "
Name.Variable:  "x"
Punctuation:  "))"
Text:  "<newline><newline>"
Punctuation:  "("
Name.Function:  "check-equal?"
Text:  " "
Punctuation:  "("
Name.Function:  "1-crazy-identifier-\u75AF\u72C2\u7684\u6807\u8BC6\u7B26-\u03C4\u03C1\u03B5\u03BB\u03CC-\u03B1\u03BD\u03B1\u03B3\u03BD\u03C9\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03CC"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Literal.Number.Integer:  "2"
Punctuation:  ")"
Text:  "<newline><newline>"
Punctuation:  "("
Keyword:  "require"
Text:  " "
Name.Variable:  "xml"
Text:  " "
Name.Variable:  "net/url"
Text:  "<newline>         "
Name.Variable:  "racket/control"
Punctuation:  ")"
Text:  " "
Comment.Single:  ";; <<< new import"
Text:  "<newline><newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Punctuation:  "("
Name.Function:  "serve"
Text:  " "
Name.Variable:  "port-no"
Punctuation:  ")"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "main-cust"
Text:  " "
Punctuation:  "("
Name.Builtin:  "make-custodian"
Punctuation:  "))"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "parameterize"
Text:  " "
Punctuation:  "(["
Name.Builtin:  "current-custodian"
Text:  " "
Name.Variable:  "main-cust"
Punctuation:  "])"
Text:  "<newline>    "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "listener"
Text:  " "
Punctuation:  "("
Keyword:  "tcp-listen"
Text:  " "
Name.Variable:  "port-no"
Text:  " "
Literal.Number.Integer:  "5"
Text:  " "
Name.Constant:  "#t"
Punctuation:  "))"
Text:  "<newline>    "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Punctuation:  "("
Name.Function:  "loop"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "("
Name.Function:  "accept-and-handle"
Text:  " "
Name.Variable:  "listener"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "("
Name.Function:  "loop"
Punctuation:  "))"
Text:  "<newline>    "
Punctuation:  "("
Name.Builtin:  "thread"
Text:  " "
Name.Variable:  "loop"
Punctuation:  "))"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "\u03BB"
Text:  " "
Punctuation:  "()"
Text:  "<newline>    "
Punctuation:  "("
Name.Builtin:  "custodian-shutdown-all"
Text:  " "
Name.Variable:  "main-cust"
Punctuation:  ")))"
Text:  "<newline><newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Punctuation:  "("
Name.Function:  "accept-and-handle"
Text:  " "
Name.Variable:  "listener"
Punctuation:  ")"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "cust"
Text:  " "
Punctuation:  "("
Name.Builtin:  "make-custodian"
Punctuation:  "))"
Text:  "<newline>  "
Punctuation:  "("
Name.Builtin:  "custodian-limit-memory"
Text:  " "
Name.Variable:  "cust"
Text:  " "
Punctuation:  "("
Name.Builtin:  "*"
Text:  " "
Literal.Number.Integer:  "50"
Text:  " "
Literal.Number.Integer:  "1024"
Text:  " "
Literal.Number.Integer:  "1024"
Punctuation:  "))"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "parameterize"
Text:  " "
Punctuation:  "(["
Name.Builtin:  "current-custodian"
Text:  " "
Name.Variable:  "cust"
Punctuation:  "])"
Text:  "<newline>    "
Punctuation:  "("
Keyword:  "define-values"
Text:  " "
Punctuation:  "("
Name.Function:  "in"
Text:  " "
Name.Variable:  "out"
Punctuation:  ")"
Text:  " "
Punctuation:  "("
Keyword:  "tcp-accept"
Text:  " "
Name.Variable:  "listener"
Punctuation:  "))"
Text:  "<newline>    "
Punctuation:  "("
Name.Builtin:  "thread"
Text:  " "
Punctuation:  "("
Keyword:  "\u03BB"
Text:  " "
Punctuation:  "()"
Text:  "<newline>              "
Punctuation:  "("
Name.Function:  "handle"
Text:  " "
Name.Variable:  "in"
Text:  " "
Name.Variable:  "out"
Punctuation:  ")"
Text:  "<newline>              "
Punctuation:  "("
Name.Builtin:  "close-input-port"
Text:  " "
Name.Variable:  "in"
Punctuation:  ")"
Text:  "<newline>              "
Punctuation:  "("
Name.Builtin:  "close-output-port"
Text:  " "
Name.Variable:  "out"
Punctuation:  "))))"
Text:  "<newline>  "
Comment.Single:  ";; Watcher thread:"
Text:  "<newline>  "
Punctuation:  "("
Name.Builtin:  "thread"
Text:  " "
Punctuation:  "("
Keyword:  "\u03BB"
Text:  " "
Punctuation:  "()"
Text:  "<newline>            "
Punctuation:  "("
Name.Builtin:  "sleep"
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  ")"
Text:  "<newline>            "
Punctuation:  "("
Name.Builtin:  "custodian-shutdown-all"
Text:  " "
Name.Variable:  "cust"
Punctuation:  "))))"
Text:  "<newline><newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Punctuation:  "("
Name.Function:  "handle"
Text:  " "
Name.Variable:  "in"
Text:  " "
Name.Variable:  "out"
Punctuation:  ")"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "req"
Text:  "<newline>    "
Comment.Single:  ";; Match the first line to extract the request:"
Text:  "<newline>    "
Punctuation:  "("
Name.Builtin:  "regexp-match"
Text:  " "
Operator:  "#"
Name.Variable:  "rx\"^GET"
Text:  " "
Punctuation:  "("
Operator:  "."
Name.Variable:  "+"
Punctuation:  ")"
Text:  " "
Name.Variable:  "HTTP/"
Punctuation:  "["
Name.Function:  "0-9"
Punctuation:  "]"
Name.Variable:  "+\\\\"
Operator:  "."
Punctuation:  "["
Name.Function:  "0-9"
Punctuation:  "]"
Name.Variable:  "+\""
Text:  "<newline>                  "
Punctuation:  "("
Name.Builtin:  "read-line"
Text:  " "
Name.Variable:  "in"
Punctuation:  ")))"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "when"
Text:  " "
Name.Variable:  "req"
Text:  "<newline>    "
Comment.Single:  ";; Discard the rest of the header (up to blank line):"
Text:  "<newline>    "
Punctuation:  "("
Name.Builtin:  "regexp-match"
Text:  " "
Operator:  "#"
Name.Variable:  "rx\""
Punctuation:  "("
Name.Function:  "\\r<newline>|^"
Punctuation:  ")"
Name.Variable:  "\\r<newline>\""
Text:  " "
Name.Variable:  "in"
Punctuation:  ")"
Text:  "<newline>    "
Comment.Single:  ";; Dispatch:"
Text:  "<newline>    "
Punctuation:  "("
Keyword:  "let"
Text:  " "
Punctuation:  "(["
Name.Function:  "xexpr"
Text:  " "
Punctuation:  "("
Name.Function:  "prompt"
Text:  " "
Punctuation:  "("
Name.Function:  "dispatch"
Text:  " "
Punctuation:  "("
Name.Builtin:  "list-ref"
Text:  " "
Name.Variable:  "req"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")))])"
Text:  " "
Comment.Single:  ";; <<< changed"
Text:  "<newline>      "
Comment.Single:  ";; Send reply:"
Text:  "<newline>      "
Punctuation:  "("
Name.Builtin:  "display"
Text:  " "
Literal.String:  "\"HTTP/1.0 200 Okay\\r<newline>\""
Text:  " "
Name.Variable:  "out"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "("
Name.Builtin:  "display"
Text:  " "
Literal.String:  "\"Server: k\\r<newline>Content-Type: text/html\\r<newline>\\r<newline>\""
Text:  " "
Name.Variable:  "out"
Punctuation:  ")"
Text:  "<newline>      "
Punctuation:  "("
Name.Builtin:  "display"
Text:  " "
Punctuation:  "("
Name.Function:  "xexpr->string"
Text:  " "
Name.Variable:  "xexpr"
Punctuation:  ")"
Text:  " "
Name.Variable:  "out"
Punctuation:  "))))"
Text:  "<newline><newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Punctuation:  "("
Name.Function:  "dispatch"
Text:  " "
Name.Variable:  "str-path"
Punctuation:  ")"
Text:  "<newline>  "
Comment.Single:  ";; Parse the request as a URL:"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "url"
Text:  " "
Punctuation:  "("
Name.Function:  "string->url"
Text:  " "
Name.Variable:  "str-path"
Punctuation:  "))"
Text:  "<newline>  "
Comment.Single:  ";; Extract the path part:"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "path"
Text:  " "
Punctuation:  "("
Name.Builtin:  "map"
Text:  " "
Name.Variable:  "path/param-path"
Text:  " "
Punctuation:  "("
Name.Function:  "url-path"
Text:  " "
Name.Variable:  "url"
Punctuation:  ")))"
Text:  "<newline>  "
Comment.Single:  ";; Find a handler based on the path's first element:"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "h"
Text:  " "
Punctuation:  "("
Name.Function:  "hash-ref"
Text:  " "
Name.Variable:  "dispatch-table"
Text:  " "
Punctuation:  "("
Name.Builtin:  "car"
Text:  " "
Name.Variable:  "path"
Punctuation:  ")"
Text:  " "
Name.Constant:  "#f"
Punctuation:  "))"
Text:  "<newline>  "
Punctuation:  "("
Keyword:  "if"
Text:  " "
Name.Variable:  "h"
Text:  "<newline>      "
Comment.Single:  ";; Call a handler:"
Text:  "<newline>      "
Punctuation:  "("
Name.Function:  "h"
Text:  " "
Punctuation:  "("
Name.Function:  "url-query"
Text:  " "
Name.Variable:  "url"
Punctuation:  "))"
Text:  "<newline>      "
Comment.Single:  ";; No handler found:"
Text:  "<newline>      "
Operator:  "`"
Punctuation:  "("
Name.Function:  "html"
Text:  " "
Punctuation:  "("
Name.Function:  "head"
Text:  " "
Punctuation:  "("
Name.Function:  "title"
Text:  " "
Literal.String:  "\"Error\""
Punctuation:  "))"
Text:  "<newline>             "
Punctuation:  "("
Name.Function:  "body"
Text:  "<newline>              "
Punctuation:  "("
Name.Function:  "font"
Text:  " "
Punctuation:  "(("
Name.Function:  "color"
Text:  " "
Literal.String:  "\"red\""
Punctuation:  "))"
Text:  "<newline>                    "
Literal.String:  "\"Unknown page: \""
Text:  "<newline>                    "
Operator:  ","
Name.Variable:  "str-path"
Punctuation:  ")))))"
Text:  "<newline><newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "dispatch-table"
Text:  " "
Punctuation:  "("
Name.Function:  "make-hash"
Punctuation:  "))"
Text:  "<newline><newline>"
Punctuation:  "("
Name.Function:  "hash-set!"
Text:  " "
Name.Variable:  "dispatch-table"
Text:  " "
Literal.String:  "\"hello\""
Text:  "<newline>           "
Punctuation:  "("
Keyword:  "\u03BB"
Text:  " "
Punctuation:  "("
Name.Function:  "query"
Punctuation:  ")"
Text:  "<newline>             "
Operator:  "`"
Punctuation:  "("
Name.Function:  "html"
Text:  " "
Punctuation:  "("
Name.Function:  "body"
Text:  " "
Literal.String:  "\"Hello, World!\""
Punctuation:  "))))"
Text:  "<newline><newline><newline>"
Comment.Single:  ";; Highlight booleans"
Text:  "<newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "ht"
Text:  " "
Name.Constant:  "#true"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "ht"
Text:  " "
Name.Constant:  "#t"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "ht"
Text:  " "
Name.Constant:  "#T"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "hf"
Text:  " "
Name.Constant:  "#false"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "hf"
Text:  " "
Name.Constant:  "#f"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "("
Keyword:  "define"
Text:  " "
Name.Variable:  "hf"
Text:  " "
Name.Constant:  "#F"
Punctuation:  ")"
Text:  "<newline>"
