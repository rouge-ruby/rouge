Comment.Single:  "// A system agnostic domain specific language for runtime monitoring and verification"
Text:  "<newline>"
Comment.Single:  "// Basic events"
Text:  "<newline>"
Name.Function:  "insert"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'my_insert'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "remove"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  "  "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_post'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'my_remove'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "index"
Operator:  "],"
Name.Entity:  "res"
Operator:  ":"
Literal.String.Regex:  "elem"
Operator:  "};"
Text:  "<newline>"
Name.Function:  "size"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_post'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'my_size'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":[],"
Name.Entity:  "res"
Operator:  ":"
Literal.String.Regex:  "size"
Operator:  "};"
Text:  "<newline>"
Name.Function:  "get"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_post'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'my_get'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "index"
Operator:  "],"
Name.Entity:  "res"
Operator:  ":"
Literal.String.Regex:  "elem"
Operator:  "};"
Text:  "<newline><newline>"
Comment.Single:  "// set1: single set with add and delete"
Text:  "<newline>"
Name.Function:  "del_false"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "del"
Operator:  "(_,"
Keyword:  "false"
Operator:  ");"
Text:  "<newline>"
Name.Function:  "not_add_true_del"
Operator:  "("
Literal.String.Regex:  "el"
Operator:  ")"
Text:  " "
Keyword:  "not"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "add"
Operator:  "("
Literal.String.Regex:  "el"
Operator:  ","
Keyword:  "true"
Operator:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "del"
Operator:  "("
Literal.String.Regex:  "el"
Operator:  ",_);"
Text:  "<newline><newline>"
Comment.Single:  "// Additional events for Main"
Text:  "<newline>"
Name.Function:  "relevant"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "insert"
Operator:  "(_,_)|"
Name.Function:  "remove"
Operator:  "(_,_)|"
Name.Function:  "size"
Operator:  "(_)|"
Name.Function:  "get"
Operator:  "(_,_);"
Text:  "<newline>"
Name.Function:  "add_rm_get"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "insert"
Operator:  "(_,_)|"
Name.Function:  "remove"
Operator:  "(_,_)|"
Name.Function:  "get"
Operator:  "(_,_);"
Text:  "<newline><newline>"
Name.Class:  "Main"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "relevant"
Text:  " "
Operator:  ">>"
Text:  " "
Name.Class:  "Resources"
Operator:  ";"
Text:  "<newline>"
Name.Class:  "Resources"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Operator:  "{"
Keyword:  "let"
Text:  " "
Literal.String.Regex:  "id"
Operator:  ";"
Text:  " "
Name.Function:  "acquire"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  "<newline>        "
Operator:  "(("
Name.Class:  "Resources"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "use"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")*"
Text:  " "
Name.Function:  "release"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  "))"
Text:  " "
Operator:  "/\\"
Text:  "<newline>        "
Name.Function:  "acqRel"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  " "
Operator:  ">>"
Text:  " "
Name.Function:  "release"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  " "
Keyword:  "all"
Operator:  ")"
Text:  "<newline>    "
Operator:  "}?;"
Text:  "<newline><newline>"
Name.Function:  "msg"
Operator:  "("
Literal.String.Regex:  "ty"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'msg'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "ty"
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "relevant"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "msg"
Operator:  "(_);"
Text:  "<newline><newline>"
Name.Class:  "Msg"
Operator:  "<"
Literal.String.Regex:  "inf"
Operator:  ","
Literal.String.Regex:  "sup"
Operator:  ">"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "if"
Operator:  "("
Literal.String.Regex:  "inf"
Operator:  "<="
Literal.String.Regex:  "sup"
Operator:  ")"
Text:  " "
Name.Function:  "msg"
Operator:  "("
Literal.String.Regex:  "inf"
Operator:  ")"
Text:  " "
Name.Class:  "Msg"
Operator:  "<"
Literal.String.Regex:  "inf"
Operator:  "+"
Literal.Number.Integer:  "1"
Operator:  ","
Literal.String.Regex:  "sup"
Operator:  ">"
Text:  " "
Keyword:  "else"
Text:  " "
Keyword:  "empty"
Operator:  ";"
Text:  "<newline>"
Name.Class:  "Main"
Operator:  "="
Name.Function:  "relevant"
Operator:  ">>"
Name.Class:  "Msg"
Operator:  "<"
Literal.Number.Integer:  "1"
Operator:  ","
Literal.Number.Integer:  "4"
Operator:  ">*!;"
Text:  "<newline><newline>"
Name.Class:  "Main"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "relevant"
Text:  " "
Operator:  ">>"
Text:  " "
Operator:  "("
Name.Class:  "CheckIndex"
Operator:  "<"
Literal.Number.Integer:  "0"
Operator:  ">"
Text:  " "
Operator:  "/\\"
Text:  " "
Name.Function:  "add_rm_get"
Text:  " "
Operator:  ">>"
Text:  " "
Name.Class:  "CheckElem"
Operator:  ")!;"
Text:  "<newline>"
Name.Class:  "CheckIndex"
Operator:  "<"
Literal.String.Regex:  "size"
Operator:  ">"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Name.Function:  "get_size"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")*"
Text:  " "
Operator:  "("
Name.Function:  "insert_in_bounds"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")"
Text:  " "
Name.Class:  "CheckIndex"
Operator:  "<"
Literal.String.Regex:  "size"
Operator:  "+"
Literal.Number.Integer:  "1"
Operator:  ">"
Text:  " "
Operator:  "\\/"
Text:  " "
Name.Function:  "remove_in_bounds"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")"
Text:  " "
Name.Class:  "CheckIndex"
Operator:  "<"
Literal.String.Regex:  "size"
Operator:  "-"
Literal.Number.Integer:  "1"
Operator:  ">);"
Text:  "<newline>"
Name.Class:  "CheckElem"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Name.Function:  "not_insert"
Operator:  "*"
Text:  " "
Operator:  "{"
Keyword:  "let"
Text:  " "
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ";"
Text:  " "
Name.Function:  "insert"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ")"
Text:  " "
Operator:  "("
Name.Class:  "GetElem"
Operator:  "<"
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ">"
Text:  " "
Operator:  "/\\"
Text:  " "
Name.Class:  "CheckElem"
Operator:  ")};"
Text:  "<newline>"
Name.Class:  "GetElem"
Operator:  "<"
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ">"
Text:  " "
Operator:  "="
Text:  "<newline>    "
Operator:  "("
Name.Function:  "irrelevant"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ")"
Text:  " "
Operator:  "\\/"
Text:  " "
Name.Function:  "get"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  "))"
Text:  " "
Name.Class:  "GetElem"
Operator:  "<"
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ">"
Text:  " "
Operator:  "\\/"
Text:  "<newline>    "
Name.Function:  "increased"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ")"
Text:  " "
Name.Class:  "GetElem"
Operator:  "<"
Literal.String.Regex:  "index"
Operator:  "+"
Literal.Number.Integer:  "1"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ">"
Text:  " "
Operator:  "\\/"
Text:  "<newline>    "
Name.Function:  "decreased"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ")"
Text:  " "
Name.Class:  "GetElem"
Operator:  "<"
Literal.String.Regex:  "index"
Operator:  "-"
Literal.Number.Integer:  "1"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ">"
Text:  " "
Operator:  "\\/"
Text:  "<newline>    "
Name.Function:  "remove"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ","
Literal.String.Regex:  "elem"
Operator:  ")"
Text:  " "
Keyword:  "all"
Operator:  ";"
Text:  "<newline><newline>"
Comment.Single:  "// Additional events for CheckIndex"
Text:  "<newline>"
Name.Function:  "insert_in_bounds"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "insert"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  ">="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "&&"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  "<="
Text:  " "
Literal.String.Regex:  "size"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "remove_in_bounds"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "remove"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  ">="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "&&"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  "<"
Text:  " "
Literal.String.Regex:  "size"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "get_in_bounds"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "get"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  ">="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "&&"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  "<"
Text:  " "
Literal.String.Regex:  "size"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "get_size"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "size"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ")|"
Name.Function:  "get_in_bounds"
Operator:  "("
Literal.String.Regex:  "size"
Operator:  ");"
Text:  "<newline><newline>"
Comment.Single:  "// Additional events for CheckElem"
Text:  "<newline>"
Name.Function:  "not_insert"
Text:  " "
Keyword:  "not"
Text:  " "
Keyword:  "matches"
Text:  "  "
Name.Function:  "insert"
Operator:  "(_,_);"
Text:  "<newline><newline>"
Comment.Single:  "// Additional events for GetElem"
Text:  "<newline>"
Name.Function:  "increased"
Operator:  "("
Literal.String.Regex:  "i"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "insert"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  "<="
Text:  " "
Literal.String.Regex:  "i"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "decreased"
Operator:  "("
Literal.String.Regex:  "i"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "remove"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  "<"
Text:  " "
Literal.String.Regex:  "i"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "irrelevant_modification"
Operator:  "("
Literal.String.Regex:  "i"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "insert"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "remove"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  ">"
Text:  " "
Literal.String.Regex:  "i"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "irrelevant_get"
Operator:  "("
Literal.String.Regex:  "i"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "get"
Operator:  "("
Literal.String.Regex:  "index"
Operator:  ",_)"
Text:  "  "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "index"
Text:  " "
Operator:  "!="
Text:  " "
Literal.String.Regex:  "i"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "irrelevant"
Operator:  "("
Literal.String.Regex:  "i"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "irrelevant_modification"
Operator:  "("
Literal.String.Regex:  "i"
Operator:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "irrelevant_get"
Operator:  "("
Literal.String.Regex:  "i"
Operator:  ");"
Text:  "<newline><newline>"
Comment.Single:  "// alternating bit protocol: simpler version"
Text:  "<newline>"
Name.Function:  "msg"
Operator:  "("
Literal.String.Regex:  "ty"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'msg'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "ty"
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "ack"
Operator:  "("
Literal.String.Regex:  "ty"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'ack'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "ty"
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "no_msg"
Text:  " "
Keyword:  "not"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "msg"
Operator:  "(_);"
Text:  "<newline><newline>"
Name.Function:  "relevant"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "msg"
Operator:  "(_)"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "ack"
Operator:  "(_);"
Text:  "<newline><newline>"
Name.Class:  "Main"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "relevant"
Operator:  ">>"
Name.Class:  "Prop1_2"
Operator:  "/\\"
Name.Class:  "Prop3"
Operator:  ";"
Text:  "<newline>"
Name.Class:  "Prop1_2"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "("
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "1"
Operator:  ")"
Name.Function:  "ack"
Operator:  "("
Literal.Number.Integer:  "1"
Operator:  "))*"
Text:  " "
Operator:  "|"
Text:  " "
Operator:  "("
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "2"
Operator:  ")"
Name.Function:  "ack"
Operator:  "("
Literal.Number.Integer:  "2"
Operator:  "))*;"
Text:  "<newline>"
Name.Class:  "Prop3"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "("
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "1"
Operator:  ")"
Text:  " "
Name.Function:  "no_msg"
Operator:  "*"
Text:  " "
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "2"
Operator:  ")"
Text:  " "
Name.Function:  "no_msg"
Operator:  "*)*;"
Text:  "<newline><newline>"
Comment.Single:  "// alternating bit protocol: version where Prop3 uses shuffle"
Text:  "<newline>"
Name.Function:  "msg"
Operator:  "("
Literal.String.Regex:  "ty"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'msg'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "ty"
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "ack"
Operator:  "("
Literal.String.Regex:  "ty"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'ack'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":["
Literal.String.Regex:  "ty"
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "no_msg"
Text:  " "
Keyword:  "not"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "msg"
Operator:  "(_);"
Text:  "<newline><newline>"
Name.Function:  "relevant"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "msg"
Operator:  "(_)"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "ack"
Operator:  "(_);"
Text:  "<newline><newline>"
Name.Class:  "Main"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "relevant"
Operator:  ">>"
Name.Class:  "Prop1_2"
Operator:  "/\\"
Name.Class:  "Prop3"
Operator:  ";"
Text:  "<newline>"
Name.Class:  "Prop1_2"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "("
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "1"
Operator:  ")"
Name.Function:  "ack"
Operator:  "("
Literal.Number.Integer:  "1"
Operator:  "))*"
Text:  " "
Operator:  "|"
Text:  " "
Operator:  "("
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "2"
Operator:  ")"
Name.Function:  "ack"
Operator:  "("
Literal.Number.Integer:  "2"
Operator:  "))*;"
Text:  "<newline>"
Name.Class:  "Prop3"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "("
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "1"
Operator:  ")"
Text:  " "
Name.Function:  "msg"
Operator:  "("
Literal.Number.Integer:  "2"
Operator:  "))*"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "no_msg"
Operator:  "*;"
Text:  "<newline><newline>"
Comment.Single:  "// exclusive"
Text:  "<newline>"
Comment.Single:  "// non exclusive use of resources"
Text:  "<newline>"
Comment.Single:  "// works with traces generated from exclusive.js"
Text:  "<newline><newline>"
Name.Function:  "acquire"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'acquire'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":[_,"
Literal.String.Regex:  "id"
Operator:  ","
Literal.String.Symbol:  "..."
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "release"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'release'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":[_,"
Literal.String.Regex:  "id"
Operator:  ","
Literal.String.Symbol:  "..."
Operator:  "]};"
Text:  "<newline>"
Name.Function:  "use"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'use'"
Operator:  ","
Name.Entity:  "args"
Operator:  ":[_,"
Literal.String.Regex:  "id"
Operator:  ","
Literal.String.Symbol:  "..."
Operator:  "]};"
Text:  "<newline><newline>"
Name.Function:  "acqRel"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "acquire"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "release"
Operator:  "("
Literal.String.Regex:  "id"
Operator:  ");"
Text:  "<newline>"
Name.Function:  "relevant"
Text:  " "
Keyword:  "matches"
Text:  " "
Name.Function:  "acquire"
Operator:  "(_)"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "release"
Operator:  "(_)"
Text:  " "
Operator:  "|"
Text:  " "
Name.Function:  "use"
Operator:  "(_);"
Text:  "<newline><newline>"
Comment.Single:  "// rover"
Text:  "<newline>"
Comment.Single:  "// speed control of Curiosity rover"
Text:  "<newline>"
Comment.Single:  "// works with traces generated from curiosity-rover.js"
Text:  "<newline><newline>"
Name.Function:  "left_speed"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Text:  " "
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'command'"
Operator:  ","
Text:  " "
Name.Entity:  "args"
Operator:  ":[{"
Name.Entity:  "topic"
Operator:  ":"
Literal.String:  "'wheels_control'"
Operator:  ","
Name.Entity:  "direction"
Operator:  ":"
Literal.String:  "'left'"
Operator:  ","
Name.Entity:  "speed"
Operator:  ":"
Literal.String.Regex:  "val"
Operator:  "}]}"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "val"
Text:  " "
Operator:  "<="
Text:  " "
Literal.Number.Integer:  "10"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "right_speed"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Text:  " "
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'command'"
Operator:  ","
Text:  " "
Name.Entity:  "args"
Operator:  ":[{"
Name.Entity:  "topic"
Operator:  ":"
Literal.String:  "'wheels_control'"
Operator:  ","
Name.Entity:  "direction"
Operator:  ":"
Literal.String:  "'right'"
Operator:  ","
Name.Entity:  "speed"
Operator:  ":"
Literal.String.Regex:  "val"
Operator:  "}]}"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "val"
Text:  " "
Operator:  "<="
Text:  " "
Literal.Number.Integer:  "10"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "forward_speed"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Text:  " "
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'command'"
Operator:  ","
Text:  " "
Name.Entity:  "args"
Operator:  ":[{"
Name.Entity:  "topic"
Operator:  ":"
Literal.String:  "'wheels_control'"
Operator:  ","
Name.Entity:  "direction"
Operator:  ":"
Literal.String:  "'forward'"
Operator:  ","
Name.Entity:  "speed"
Operator:  ":"
Literal.String.Regex:  "val"
Operator:  "}]}"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "val"
Text:  " "
Operator:  "<="
Text:  " "
Literal.Number.Integer:  "15"
Operator:  ";"
Text:  "<newline>"
Name.Function:  "backward_speed"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Text:  " "
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'command'"
Operator:  ","
Text:  " "
Name.Entity:  "args"
Operator:  ":[{"
Name.Entity:  "topic"
Operator:  ":"
Literal.String:  "'wheels_control'"
Operator:  ","
Name.Entity:  "direction"
Operator:  ":"
Literal.String:  "'backward'"
Operator:  ","
Name.Entity:  "speed"
Operator:  ":"
Literal.String.Regex:  "val"
Operator:  "}]}"
Text:  " "
Keyword:  "with"
Text:  " "
Literal.String.Regex:  "val"
Text:  " "
Operator:  "<="
Text:  " "
Literal.Number.Integer:  "15"
Operator:  ";"
Text:  "<newline><newline>"
Name.Function:  "relevant"
Text:  " "
Keyword:  "matches"
Text:  " "
Operator:  "{"
Name.Entity:  "event"
Operator:  ":"
Literal.String:  "'func_pre'"
Operator:  ","
Text:  " "
Name.Entity:  "name"
Operator:  ":"
Literal.String:  "'command'"
Operator:  "};"
Text:  "<newline><newline>"
Name.Class:  "Main"
Text:  " "
Operator:  "="
Text:  " "
Name.Function:  "relevant"
Operator:  ">>("
Name.Function:  "left_speed"
Text:  " "
Operator:  "\\/"
Text:  " "
Name.Function:  "right_speed"
Text:  " "
Operator:  "\\/"
Text:  " "
Name.Function:  "forward_speed"
Text:  " "
Operator:  "\\/"
Text:  " "
Name.Function:  "backward_speed"
Operator:  ")*;"
Text:  "<newline>"
