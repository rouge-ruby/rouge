Comment.Hashbang:  "*! Example Stata script showing syntax highlighting"
Text:  "<newline><newline>"
Comment.Single:  "* This is a single-line comment"
Text:  "<newline>"
Comment.Single:  " * This is a single-line comment"
Text:  "<newline>"
Comment.Single:  "// This is also a single-line comment"
Text:  "<newline><newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Operator:  "*"
Literal.Number:  "3"
Text.Whitespace:  " "
Comment.Single:  "// This is an in-line comment"
Text:  "<newline><newline>"
Comment.Multiline:  "/*<newline>This is a multi-line <newline>comment<newline>*/"
Text:  "<newline><newline>"
Comment.Single:  "* Preprocessor command"
Text:  "<newline>"
Comment.Preproc:  "#delimit ;"
Text:  "<newline><newline>"
Comment.Single:  "* Valid names"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo1"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "_myvar"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline><newline>"
Comment.Single:  "* Invalid names"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Literal.Number:  "0"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Operator:  "^"
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Error:  "%"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline><newline>"
Comment.Single:  "* Numbers and formats"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "12345678901"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "123456.78901"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "123e3"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "123E3"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "1.23e-3"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "1.23e3"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Name.Property:  "%5.3fc"
Text.Whitespace:  " "
Literal.Number:  "32.32146"
Text:  "<newline>"
Keyword:  "format"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Name.Property:  "%12.3gc"
Text:  "<newline><newline>"
Comment.Single:  "* Functions"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Function:  "cos"
Punctuation:  "("
Name:  "bar"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Function:  "tan"
Punctuation:  "("
Name:  "bar"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Function:  "runiform"
Punctuation:  "()"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Function:  "e"
Punctuation:  "("
Name:  "sample"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "* Types and macros"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "byte"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "4"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "int"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "long"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "float"
Text.Whitespace:  " "
Name:  "bar"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3.2"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "double"
Text.Whitespace:  " "
Name:  "bar"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3.2"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "str"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "str132"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "str2045"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Keyword.Type:  "strL"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text:  "<newline>"
Keyword:  "confirm"
Text.Whitespace:  " "
Keyword.Type:  "numeric"
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "confirm"
Text.Whitespace:  " "
Keyword.Type:  "string"
Text.Whitespace:  " "
Literal.String.Double:  "\"foo\""
Text:  "<newline>"
Keyword:  "confirm"
Text.Whitespace:  " "
Keyword.Type:  "integer"
Text.Whitespace:  " "
Name:  "number"
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword.Type:  "scalar"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword.Type:  "matrix"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword.Type:  "local"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword.Type:  "global"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "3"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "bar1"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "`foo'"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "bar2"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "$foo"
Text:  "<newline><newline>"
Comment.Single:  "* Invalid types"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "str0"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "str2046"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text:  "<newline><newline>"
Comment.Single:  "* Control structures"
Text:  "<newline>"
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Literal.String.Double:  "`x'"
Operator:  "=="
Literal.Number:  "3"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    display"
Text.Whitespace:  " "
Literal.String.Double:  "\"foo\""
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
Keyword.Reserved:  "else"
Text.Whitespace:  " "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Literal.String.Double:  "`x'"
Operator:  "=="
Literal.Number:  "4"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    display"
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
Keyword.Reserved:  "else"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    display"
Text.Whitespace:  " "
Literal.String.Double:  "\"foobar\""
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Reserved:  "foreach"
Text.Whitespace:  " "
Name:  "i"
Text.Whitespace:  " "
Keyword.Reserved:  "in"
Text.Whitespace:  " "
Literal.String.Double:  "\"foo\""
Text.Whitespace:  " "
Literal.String.Double:  "\"bar\""
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    di"
Text.Whitespace:  " "
Literal.String.Double:  "\"`i'\""
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Reserved:  "forval"
Text.Whitespace:  " "
Name:  "i"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "1"
Operator:  "/"
Literal.Number:  "5"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    di"
Text.Whitespace:  " "
Literal.String.Double:  "`i'"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Reserved:  "forval"
Text.Whitespace:  " "
Name:  "i"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  " "
Literal.Number:  "5"
Text.Whitespace:  " "
Keyword.Reserved:  "to"
Text.Whitespace:  " "
Literal.Number:  "10"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    di"
Text.Whitespace:  " "
Literal.String.Double:  "`i'"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Type:  "local"
Text.Whitespace:  " "
Name:  "i"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.Number:  "1"
Text:  "<newline>"
Keyword.Reserved:  "while"
Text.Whitespace:  " "
Punctuation:  "("
Literal.String.Double:  "`i'"
Text.Whitespace:  " "
Operator:  "<"
Text.Whitespace:  " "
Literal.Number:  "5"
Punctuation:  ")"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Text.Whitespace:  "    "
Keyword.Type:  "local"
Text.Whitespace:  " "
Name:  "i"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "`i'"
Literal.Number:  "+1"
Text:  "<newline>"
Text.Whitespace:  "    "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Literal.String.Double:  "`i'"
Operator:  "<"
Literal.Number:  "3"
Punctuation:  ")"
Text.Whitespace:  " "
Keyword.Reserved:  "continue"
Text:  "<newline>"
Text.Whitespace:  "    "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Punctuation:  "("
Literal.String.Double:  "`i'"
Text.Whitespace:  " "
Operator:  ">"
Text.Whitespace:  " "
Literal.Number:  "3"
Punctuation:  ")"
Text.Whitespace:  " "
Keyword.Reserved:  "break"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword.Reserved:  "foreach"
Text.Whitespace:  " "
Name:  "v"
Text.Whitespace:  " "
Keyword.Reserved:  "of"
Text.Whitespace:  " "
Keyword.Type:  "varlist"
Text.Whitespace:  " "
Name:  "mpg"
Text.Whitespace:  " "
Name:  "weight"
Operator:  "-"
Name:  "turn"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    di"
Text.Whitespace:  " "
Literal.String.Double:  "\"`v'\""
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
Keyword.Reserved:  "foreach"
Text.Whitespace:  " "
Name:  "v"
Text.Whitespace:  " "
Keyword.Reserved:  "of"
Text.Whitespace:  " "
Keyword.Type:  "newlist"
Text.Whitespace:  " "
Name:  "newvar1"
Text.Whitespace:  " "
Name:  "newvar2"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    di"
Text.Whitespace:  " "
Literal.String.Double:  "\"`v'\""
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
Keyword.Reserved:  "foreach"
Text.Whitespace:  " "
Name:  "v"
Text.Whitespace:  " "
Keyword.Reserved:  "of"
Text.Whitespace:  " "
Keyword.Type:  "numlist"
Text.Whitespace:  " "
Literal.Number:  "1"
Operator:  "/"
Literal.Number:  "5"
Text.Whitespace:  " "
Literal.Number:  "12"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "    di"
Text.Whitespace:  " "
Literal.String.Double:  "`v'"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "* Programs"
Text:  "<newline>"
Keyword:  "program"
Text.Whitespace:  " "
Name:  "define"
Text.Whitespace:  " "
Name:  "myprog"
Text:  "<newline>"
Keyword:  "    di"
Text.Whitespace:  " "
Literal.String.Double:  "\"`0'\""
Text:  "<newline>"
Keyword:  "end"
Text:  "<newline><newline>"
Comment.Single:  "* Indexing"
Text:  "<newline>"
Keyword.Type:  "matrix"
Text.Whitespace:  " "
Name:  "input"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "("
Literal.Number:  "1"
Punctuation:  ","
Literal.Number:  "2"
Punctuation:  ","
Literal.Number:  "3"
Punctuation:  ","
Literal.Number:  "4"
Operator:  "\\"
Literal.Number:  "5"
Punctuation:  ","
Literal.Number:  "6"
Punctuation:  ","
Literal.Number:  "7"
Punctuation:  ","
Literal.Number:  "8"
Operator:  "\\"
Literal.Number:  "9"
Punctuation:  ","
Literal.Number:  "10"
Punctuation:  ","
Literal.Number:  "11"
Punctuation:  ","
Literal.Number:  "12"
Punctuation:  ")"
Text:  "<newline>"
Keyword.Type:  "matrix"
Text.Whitespace:  " "
Name:  "bar"
Text.Whitespace:  "  "
Operator:  "="
Text.Whitespace:  " "
Name:  "foo"
Punctuation:  "["
Literal.Number:  "1"
Operator:  "..."
Punctuation:  ","
Text.Whitespace:  " "
Literal.Number:  "2"
Operator:  ".."
Literal.Number:  "4"
Punctuation:  "]"
Operator:  "/"
Literal.Number:  "2"
Text:  "<newline>"
Keyword.Type:  "matrix"
Text.Whitespace:  " "
Name:  "symmetric"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Punctuation:  "("
Literal.Number:  "2"
Punctuation:  ","
Literal.Number:  "1"
Operator:  "\\"
Literal.Number:  "1"
Punctuation:  ","
Literal.Number:  "2"
Punctuation:  ")"
Text:  "<newline>"
Keyword.Type:  "matrix"
Text.Whitespace:  " "
Name:  "foobar"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Function:  "cholesky"
Punctuation:  "("
Literal.Number:  "0.1"
Operator:  "*"
Name.Function:  "I"
Punctuation:  "("
Name.Function:  "rowsof"
Punctuation:  "("
Name:  "symmetric"
Punctuation:  "))"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "0.9"
Operator:  "*"
Name:  "symmetric"
Punctuation:  ")"
Text:  "<newline><newline>"
Comment.Single:  "* Operators"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "-"
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "*"
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "/"
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Operator:  "^"
Literal.Number:  "2"
Text:  "<newline><newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "&"
Text.Whitespace:  " "
Literal.Number:  "0"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "|"
Text.Whitespace:  " "
Literal.Number:  "0"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Operator:  "!"
Literal.Number:  "1"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Operator:  "~"
Literal.Number:  "1"
Text:  "<newline><newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "<"
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  ">"
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  ">="
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "<="
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "=="
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "!="
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "~="
Text.Whitespace:  " "
Literal.Number:  "2"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "=="
Text.Whitespace:  " "
Literal.Number:  "4"
Text:  "<newline>"
Keyword:  "di"
Text.Whitespace:  " "
Literal.Number:  "1"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Punctuation:  "("
Literal.Number:  "2"
Text.Whitespace:  " "
Operator:  "+"
Text.Whitespace:  " "
Literal.Number:  "3"
Punctuation:  ")"
Text:  "<newline><newline>"
Keyword:  "reg"
Text.Whitespace:  " "
Name:  "y"
Text.Whitespace:  " "
Operator:  "i."
Name:  "foo"
Operator:  "#c."
Name:  "bar"
Text:  "<newline>"
Keyword:  "reg"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "io"
Punctuation:  "("
Literal.Number:  "2"
Text.Whitespace:  " "
Literal.Number:  "3"
Text.Whitespace:  " "
Literal.Number:  "4"
Punctuation:  ")"
Operator:  "."
Name:  "bar"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Operator:  "L3."
Name:  "bar"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Operator:  "L"
Punctuation:  "("
Literal.Number:  "1"
Operator:  "/"
Literal.Number:  "3"
Punctuation:  ")"
Operator:  "."
Name:  "bar"
Text:  "<newline><newline>"
Comment.Single:  "* Strings"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"hello, world!\""
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "`\"hello, world!\"'"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "`\"hello,\" world!\"'"
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "\"`mylocal'\""
Text:  "<newline>"
Keyword:  "gen"
Text.Whitespace:  " "
Name:  "foo"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Literal.String.Double:  "`\"`mylocal'\"'"
Text:  "<newline><newline>"
Comment.Single:  "* Estimation and data manipulation commands"
Text:  "<newline>"
Keyword:  "sysuse"
Text.Whitespace:  " "
Name:  "auto"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "clear"
Text:  "<newline>"
Keyword.Reserved:  "foreach"
Text.Whitespace:  " "
Name:  "v"
Text.Whitespace:  " "
Keyword.Reserved:  "of"
Text.Whitespace:  " "
Keyword.Type:  "varlist"
Text.Whitespace:  " "
Operator:  "*"
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "\tcap"
Text.Whitespace:  " "
Name:  "confirm"
Text.Whitespace:  " "
Keyword.Type:  "numeric"
Text.Whitespace:  " "
Name:  "var"
Text.Whitespace:  " "
Literal.String.Double:  "`v'"
Text:  "<newline>"
Text.Whitespace:  "\t"
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Name:  "_rc"
Text.Whitespace:  " "
Keyword.Reserved:  "continue"
Text:  "<newline>"
Keyword:  "\t<newline>\tgen"
Text.Whitespace:  " "
Name:  "imp_"
Literal.String.Double:  "`v'"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Function:  "mi"
Punctuation:  "("
Literal.String.Double:  "`v'"
Punctuation:  ")"
Text:  "<newline>"
Keyword:  "\tlabel"
Text.Whitespace:  " "
Name:  "var"
Text.Whitespace:  " "
Name:  "imp_"
Literal.String.Double:  "`v'"
Text.Whitespace:  " "
Literal.String.Double:  "\"Imputed value for `v'\""
Text:  "<newline>"
Keyword:  "\tsumm"
Text.Whitespace:  " "
Literal.String.Double:  "`v'"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "detail"
Text:  "<newline>"
Keyword:  "\treplace"
Text.Whitespace:  " "
Literal.String.Double:  "`v'"
Text.Whitespace:  " "
Operator:  "="
Text.Whitespace:  " "
Name.Function:  "r"
Punctuation:  "("
Name:  "p50"
Punctuation:  ")"
Text.Whitespace:  " "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Name.Function:  "mi"
Punctuation:  "("
Literal.String.Double:  "`v'"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline>"
Keyword:  "compress"
Text:  "<newline><newline>"
Keyword.Reserved:  "foreach"
Text.Whitespace:  " "
Name:  "rhs"
Text.Whitespace:  " "
Keyword.Reserved:  "in"
Text.Whitespace:  " "
Literal.String.Double:  "\"mpg\""
Text.Whitespace:  " "
Literal.String.Double:  "\"mpg weight\""
Text.Whitespace:  " "
Punctuation:  "{"
Text:  "<newline>"
Keyword:  "\treg"
Text.Whitespace:  " "
Name:  "price"
Text.Whitespace:  " "
Literal.String.Double:  "`rhs'"
Text.Whitespace:  " "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Name:  "foreign"
Operator:  "=="
Literal.String.Double:  "\"Domestic\""
Operator:  ":"
Name:  "origin"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "robust"
Text:  "<newline>"
Keyword:  "\treg"
Text.Whitespace:  " "
Name:  "price"
Text.Whitespace:  " "
Literal.String.Double:  "`rhs'"
Text.Whitespace:  " "
Keyword.Reserved:  "if"
Text.Whitespace:  " "
Name:  "foreign"
Operator:  "=="
Literal.String.Double:  "\"Foreign\""
Operator:  ":"
Name:  "origin"
Punctuation:  ","
Text.Whitespace:  " "
Name:  "robust"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "** EOF"
Text:  "<newline>"
