Comment.Single:  "// modulate a sine frequency and a noise amplitude with another sine"
Text:  "<newline>"
Comment.Single:  "// whose frequency depends on the horizontal mouse pointer position"
Text:  "<newline>"
Name.Variable.Global:  "~myFunction"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Keyword:  "var"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name.Class:  "SinOsc"
Punctuation:  "."
Name:  "ar"
Punctuation:  "("
Name.Class:  "MouseX"
Punctuation:  "."
Name:  "kr"
Punctuation:  "("
Literal.Number.Float:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "100"
Punctuation:  "));"
Text:  "<newline>        "
Name.Class:  "SinOsc"
Punctuation:  "."
Name:  "ar"
Punctuation:  "("
Literal.Number.Float:  "300"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Float:  "800"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "0.1"
Punctuation:  ")"
Text:  "<newline>        "
Operator:  "+"
Text:  "<newline>        "
Name.Class:  "PinkNoise"
Punctuation:  "."
Name:  "ar"
Punctuation:  "("
Literal.Number.Float:  "0.1"
Text:  " "
Operator:  "*"
Text:  " "
Name:  "x"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Float:  "0.1"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "};"
Text:  "<newline><newline>"
Name.Variable.Global:  "~myFunction"
Punctuation:  "."
Name:  "play"
Punctuation:  ";"
Text:  "<newline>"
Literal.String:  "\"that's all, folks!\""
Punctuation:  "."
Name:  "postln"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Multiline:  "/* Test Class */"
Text:  "<newline>"
Name.Class:  "Collection"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t"
Operator:  "*"
Name:  "newFrom"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "aCollection"
Text:  " "
Operator:  "|"
Text:  "<newline>\t\t"
Keyword:  "var"
Text:  " "
Name:  "newCollection"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "aCollection"
Punctuation:  "."
Name:  "size"
Punctuation:  ");"
Text:  "<newline>\t\t"
Name:  "aCollection"
Punctuation:  "."
Keyword.Reserved:  "do"
Text:  " "
Punctuation:  "{"
Operator:  "|"
Text:  " "
Name:  "item"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "newCollection"
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Name:  "item"
Punctuation:  ")"
Text:  " "
Punctuation:  "};"
Text:  "<newline>\t\t"
Operator:  "^"
Name:  "newCollection"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline>\t"
Operator:  "*"
Name:  "with"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "..."
Text:  " "
Name:  "args"
Text:  " "
Operator:  "|"
Text:  "<newline>\t\t"
Keyword:  "var"
Text:  " "
Name:  "newColl"
Punctuation:  ";"
Text:  "<newline>\t\t"
Comment.Single:  "// answer a collection of my class of the given arguments"
Text:  "<newline>\t\t"
Comment.Single:  "// the class Array has a simpler implementation"
Text:  "<newline>\t\t"
Name:  "newColl"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "args"
Punctuation:  "."
Name:  "size"
Punctuation:  ");"
Text:  "<newline>\t\t"
Name:  "newColl"
Punctuation:  "."
Name:  "addAll"
Punctuation:  "("
Name:  "args"
Punctuation:  ");"
Text:  "<newline>\t\t"
Operator:  "^"
Name:  "newColl"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline>\t"
Operator:  "*"
Name:  "fill"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "size"
Punctuation:  ","
Text:  " "
Name:  "function"
Text:  " "
Operator:  "|"
Text:  "<newline>\t\t"
Keyword:  "var"
Text:  " "
Name:  "obj"
Punctuation:  ";"
Text:  "<newline>\t\t"
Keyword.Reserved:  "if"
Punctuation:  "("
Name:  "size"
Punctuation:  "."
Name:  "isSequenceableCollection"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "^"
Keyword:  "this"
Punctuation:  "."
Name:  "fillND"
Punctuation:  "("
Name:  "size"
Punctuation:  ","
Text:  " "
Name:  "function"
Punctuation:  ")"
Text:  " "
Punctuation:  "};"
Text:  "<newline>\t\t"
Name:  "obj"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "size"
Punctuation:  ");"
Text:  "<newline>\t\t"
Name:  "size"
Punctuation:  "."
Keyword.Reserved:  "do"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "|"
Text:  "<newline>\t\t\t"
Name:  "obj"
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Name:  "function"
Punctuation:  "."
Name:  "value"
Punctuation:  "("
Name:  "i"
Punctuation:  "));"
Text:  "<newline>\t\t"
Punctuation:  "};"
Text:  "<newline>\t\t"
Operator:  "^"
Name:  "obj"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline>\t"
Operator:  "*"
Name:  "fill2D"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "rows"
Punctuation:  ","
Text:  " "
Name:  "cols"
Punctuation:  ","
Text:  " "
Name:  "function"
Text:  " "
Operator:  "|"
Text:  "<newline>\t\t"
Keyword:  "var"
Text:  " "
Name:  "obj"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "rows"
Punctuation:  ");"
Text:  "<newline>\t\t"
Name:  "rows"
Punctuation:  "."
Keyword.Reserved:  "do"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Name:  "row"
Operator:  "|"
Text:  "<newline>\t\t\t"
Keyword:  "var"
Text:  " "
Name:  "obj2"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "cols"
Punctuation:  ");"
Text:  "<newline>\t\t\t"
Name:  "cols"
Punctuation:  "."
Keyword.Reserved:  "do"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Name:  "col"
Operator:  "|"
Text:  "<newline>\t\t\t\t"
Name:  "obj2"
Text:  " "
Operator:  "="
Text:  " "
Name:  "obj2"
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Name:  "function"
Punctuation:  "."
Name:  "value"
Punctuation:  "("
Name:  "row"
Punctuation:  ","
Text:  " "
Name:  "col"
Punctuation:  "))"
Text:  "<newline>\t\t\t"
Punctuation:  "};"
Text:  "<newline>\t\t\t"
Name:  "obj"
Text:  " "
Operator:  "="
Text:  " "
Name:  "obj"
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Name:  "obj2"
Punctuation:  ");"
Text:  "<newline>\t\t"
Punctuation:  "};"
Text:  "<newline>\t\t"
Operator:  "^"
Name:  "obj"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline>\t"
Operator:  "*"
Name:  "fill3D"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Text:  " "
Name:  "planes"
Punctuation:  ","
Text:  " "
Name:  "rows"
Punctuation:  ","
Text:  " "
Name:  "cols"
Punctuation:  ","
Text:  " "
Name:  "function"
Text:  " "
Operator:  "|"
Text:  "<newline>\t\t"
Keyword:  "var"
Text:  " "
Name:  "obj"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "planes"
Punctuation:  ");"
Text:  "<newline>\t\t"
Name:  "planes"
Punctuation:  "."
Keyword.Reserved:  "do"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Name:  "plane"
Operator:  "|"
Text:  "<newline>\t\t\t"
Keyword:  "var"
Text:  " "
Name:  "obj2"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "rows"
Punctuation:  ");"
Text:  "<newline>\t\t\t"
Name:  "rows"
Punctuation:  "."
Keyword.Reserved:  "do"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Name:  "row"
Operator:  "|"
Text:  "<newline>\t\t\t\t"
Keyword:  "var"
Text:  " "
Name:  "obj3"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "this"
Punctuation:  "."
Keyword.Reserved:  "new"
Punctuation:  "("
Name:  "cols"
Punctuation:  ");"
Text:  "<newline>\t\t\t\t"
Name:  "cols"
Punctuation:  "."
Keyword.Reserved:  "do"
Text:  " "
Punctuation:  "{"
Text:  " "
Operator:  "|"
Name:  "col"
Operator:  "|"
Text:  "<newline>\t\t\t\t\t"
Name:  "obj3"
Text:  " "
Operator:  "="
Text:  " "
Name:  "obj3"
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Name:  "function"
Punctuation:  "."
Name:  "value"
Punctuation:  "("
Name:  "plane"
Punctuation:  ","
Text:  " "
Name:  "row"
Punctuation:  ","
Text:  " "
Name:  "col"
Punctuation:  "))"
Text:  "<newline>\t\t\t\t"
Punctuation:  "};"
Text:  "<newline>\t\t\t\t"
Name:  "obj2"
Text:  " "
Operator:  "="
Text:  " "
Name:  "obj2"
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Name:  "obj3"
Punctuation:  ");"
Text:  "<newline>\t\t\t"
Punctuation:  "};"
Text:  "<newline>\t\t\t"
Name:  "obj"
Text:  " "
Operator:  "="
Text:  " "
Name:  "obj"
Punctuation:  "."
Name:  "add"
Punctuation:  "("
Name:  "obj2"
Punctuation:  ");"
Text:  "<newline>\t\t"
Punctuation:  "};"
Text:  "<newline>\t\t"
Operator:  "^"
Name:  "obj"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline><newline>\t"
Comment.Single:  "// from Array"
Text:  "<newline>\t"
Name:  "mirror2"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t\t"
Name.Function:  "_ArrayMirror2"
Text:  "<newline>\t\t"
Operator:  "^"
Keyword:  "this"
Punctuation:  "."
Name:  "primitiveFailed"
Text:  "<newline>\t"
Punctuation:  "}"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "// class inheritance"
Text:  "<newline>"
Name.Class:  "MyClass"
Text:  " "
Operator:  ":"
Text:  " "
Name.Class:  "Object"
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t"
Keyword:  "classvar"
Text:  " "
Operator:  "<>"
Name:  "decorations"
Punctuation:  ";"
Text:  "<newline>\t"
Keyword:  "var"
Text:  " "
Operator:  "<>"
Name:  "igloos"
Punctuation:  ";"
Text:  "<newline>\t"
Keyword:  "const"
Text:  " "
Name:  "magicNumber"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "3"
Punctuation:  ";"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Multiline:  "/* This is a multiline comment <newline> /* With nesting! */<newline>   End of multiline comment */"
Text:  "<newline><newline>"
Name.Variable.Global:  "~environmentVariable"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Literal.Number.Float:  "3"
Punctuation:  "."
Keyword.Reserved:  "do"
Punctuation:  "("
Name.Builtin:  "_"
Punctuation:  "."
Name:  "postln"
Punctuation:  ")"
Text:  " "
Punctuation:  "};"
Text:  "<newline><newline>"
Name.Variable.Global:  "~environmentVariable"
Punctuation:  "."
Name:  "value"
Punctuation:  "();"
Text:  "<newline><newline>"
Name.Variable.Global:  "~myFunction"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Keyword:  "arg"
Text:  " "
Name:  "size"
Punctuation:  ","
Text:  " "
Name:  "offset"
Punctuation:  ","
Text:  " "
Name:  "freq"
Punctuation:  ";"
Text:  "<newline>\t"
Name:  "postln"
Punctuation:  "("
Literal.String:  "\"Bye!\""
Punctuation:  ");"
Text:  "<newline>"
Punctuation:  "};"
Text:  "<newline><newline>"
Comment.Single:  "// function calls with symbol arguments:"
Text:  "<newline>"
Name:  "s"
Punctuation:  "."
Name:  "boot"
Punctuation:  "("
Name.Label:  "startAliveThread:"
Text:  " "
Keyword.Constant:  "false"
Punctuation:  ","
Text:  " "
Name.Label:  "recover:"
Text:  " "
Keyword.Constant:  "true"
Punctuation:  ");"
Text:  "<newline>"
Name.Class:  "Array"
Punctuation:  "."
Name:  "geom"
Punctuation:  "("
Name.Label:  "size:"
Text:  " "
Literal.Number.Float:  "5"
Punctuation:  ","
Text:  " "
Name.Label:  "start:"
Text:  " "
Literal.Number.Float:  "1"
Punctuation:  ","
Text:  " "
Name.Label:  "grow:"
Text:  " "
Literal.Number.Float:  "8"
Punctuation:  ");"
Text:  "<newline>"
Punctuation:  "["
Text:  " "
Literal.Number.Float:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "8"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "64"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "512"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "4096"
Text:  " "
Punctuation:  "]."
Name:  "collect"
Text:  " "
Punctuation:  "{"
Text:  " "
Keyword:  "arg"
Text:  " "
Name:  "n"
Punctuation:  ";"
Text:  "<newline>\t"
Name:  "n"
Punctuation:  "."
Name:  "squared"
Text:  "<newline>"
Punctuation:  "};"
Text:  "<newline><newline>"
Comment.Single:  "// array unpacking"
Text:  "<newline>"
Operator:  "#"
Name:  "a"
Punctuation:  ","
Text:  " "
Name:  "b"
Punctuation:  ","
Text:  " "
Name:  "c"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "["
Literal.Number.Float:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "4"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "9"
Punctuation:  "];"
Text:  "<newline><newline>"
Comment.Single:  "// some numbers"
Text:  "<newline>"
Comment.Single:  "// integers"
Text:  "<newline>"
Literal.Number.Float:  "0"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "10"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "33"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "-235"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Hex:  "0x15"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Hex:  "0x159abcdef"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Hex:  "0x159ABCDEF"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "2r01"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "8r711"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "36rabczyblkgh"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "36rAZ19GH"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Single:  "// floats"
Text:  "<newline>"
Literal.Number.Float:  "0.0"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "0.0e5"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "1e5"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "1e-5"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "0.5e-5"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "10r2034.5"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "36r2358.ABCDZ"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "-36r2358.ABCDZ"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "15pi"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "15"
Text:  " "
Literal.Number.Float:  "pi"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "-10"
Text:  " "
Literal.Number.Float:  "pi"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "-10pi"
Punctuation:  ";"
Text:  "<newline>"
Literal.Number.Float:  "-1.5e7pi"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Single:  "// strings"
Text:  "<newline>"
Literal.String:  "\"abcdefg hijklmnop\""
Punctuation:  ";"
Text:  "<newline>"
Literal.String:  "\"\\\"quoted\\\"\""
Punctuation:  ";"
Text:  "<newline>"
Literal.String:  "\"\\ttabbed\\t\""
Punctuation:  ";"
Text:  "<newline>"
Literal.String:  "\"\\\\\\ttabbed with backslashes\\t\\\\\""
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Single:  "// symbols"
Text:  "<newline>"
Literal.String.Other:  "\\abc"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Other:  "\\a1"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Other:  "\\a_symbol"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Other:  "'a symbol'"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Other:  "'a cl3v3r\\'_symb0l\"'"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Single:  "// characters"
Text:  "<newline>"
Literal.String.Char:  "$a"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$ "
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$b"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$0"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$$"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$\\t"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$\\0"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$\\&"
Punctuation:  ";"
Text:  "<newline>"
Literal.String.Char:  "$\\\\"
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Single:  "// curry argument vs underscore in name"
Text:  "<newline>"
Punctuation:  "["
Literal.Number.Float:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "2"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "3"
Punctuation:  "]."
Keyword.Reserved:  "do"
Punctuation:  "("
Name.Builtin:  "_"
Punctuation:  "."
Name:  "postln"
Punctuation:  ");"
Text:  "<newline>"
Punctuation:  "["
Literal.Number.Float:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "2"
Punctuation:  ","
Text:  " "
Literal.Number.Float:  "3"
Punctuation:  "]."
Name:  "collect"
Punctuation:  "("
Name.Builtin:  "_"
Text:  " "
Operator:  "+"
Text:  " "
Name.Builtin:  "_"
Punctuation:  ");"
Text:  "<newline>"
Name:  "variable_name"
Punctuation:  "."
Name:  "function_name"
Punctuation:  "("
Name.Class:  "Class_Name"
Punctuation:  ");"
Text:  "<newline><newline>"
Comment.Single:  "// comments"
Text:  "<newline>"
Comment.Multiline:  "/* abc */"
Text:  " "
Name:  "notComment"
Punctuation:  ";"
Text:  "<newline>"
Comment.Multiline:  "/* /* */ comment */"
Text:  " "
Name:  "notComment"
Punctuation:  ";"
Text:  "<newline>"
Comment.Multiline:  "/* /* * */ comment */"
Text:  " "
Name:  "notComment"
Punctuation:  ";"
Text:  "<newline>"
Comment.Multiline:  "/* /*/ comment */ comment */"
Text:  " "
Name:  "notComment"
Punctuation:  ";"
Text:  "<newline>"
Comment.Multiline:  "/* /**/ comment */"
Text:  " "
Name:  "notComment"
Punctuation:  ";"
Text:  "<newline>"
Comment.Single:  "// /*"
Text:  "<newline>"
Name:  "notComment"
Punctuation:  ";"
Text:  "<newline>"
Comment.Single:  "// */"
Text:  "<newline>"
