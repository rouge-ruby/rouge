Comment.Single:  "# taken from jimtcl:tests/parse.test"
Text:  "<newline><newline>source "
Punctuation:  "["
Text:  "file dirname "
Punctuation:  "["
Text:  "info script"
Punctuation:  "]]"
Text:  "/testing.tcl<newline><newline>test parse-1.1 "
Literal.String.Double:  "\"Quoted closing bracket\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "string length "
Literal.String.Double:  "\"]\""
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "1"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.2 "
Literal.String.Double:  "\"Quoted opening bracket\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "string length "
Literal.String.Double:  "\""
Literal.String.Escape:  "\\["
Literal.String.Double:  "\""
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "1"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.3 "
Literal.String.Double:  "\"Quoted open brace\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "string length "
Literal.String.Double:  "\""
Literal.String.Escape:  "\\{"
Literal.String.Double:  "\""
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "1"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.4 "
Literal.String.Double:  "\"Quoted open brace via var\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset lb "
Literal.String.Escape:  "\\{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "string length "
Literal.String.Double:  "\""
Name.Variable:  "$lb"
Literal.String.Double:  "\""
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "1"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.5 "
Literal.String.Double:  "\"Braced bracket\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "string length "
Punctuation:  "{"
Text:  "]"
Punctuation:  "}]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "1"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.6 "
Literal.String.Double:  "\"Dict sugar\""
Text:  " -body "
Punctuation:  "{"
Text:  "<newline>    unset -nocomplain a<newline>    array set a "
Punctuation:  "{"
Text:  "a 1 b 2 c 3"
Punctuation:  "}"
Text:  "<newline>    set x $a"
Punctuation:  "("
Text:  "<newline>"
Punctuation:  "}"
Text:  " -returnCodes error -match glob -result "
Literal.String.Double:  "\"*\""
Text:  "<newline><newline>test parse-1.8 "
Literal.String.Double:  "\"Dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>    unset -nocomplain a<newline>    array set a "
Punctuation:  "{"
Text:  "a 1 b 2 c 3"
Punctuation:  "}"
Text:  "<newline>    set x $a"
Punctuation:  "(["
Text:  "set y b"
Punctuation:  "])"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 2<newline><newline>test parse-1.9 "
Literal.String.Double:  "\"Backslash newline\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x 123"
Punctuation:  ";"
Literal.String.Escape:  "\\<newline>"
Text:  "\tset y 456<newline>\tlist $x $y<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "123 456"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.10 "
Literal.String.Double:  "\"Backslash newline in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Literal.String.Double:  "\"abc"
Literal.String.Escape:  "\\<newline>"
Literal.String.Double:  "def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc def\""
Text:  "<newline><newline>test parse-1.11 "
Literal.String.Double:  "\"Backslash newline in quotes after var\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\"abc"
Name.Variable:  "$y"
Literal.String.Escape:  "\\<newline>"
Literal.String.Double:  "def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc1 def\""
Text:  "<newline><newline>test parse-1.12 "
Literal.String.Double:  "\"Backslash newline in quotes after var\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\"abc"
Name.Variable:  "$y"
Literal.String.Escape:  "\\<newline>"
Literal.String.Double:  "def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc1 def\""
Text:  "<newline><newline>test parse-1.13 "
Literal.String.Double:  "\"Newline in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\"abc<newline>def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc"
Literal.String.Escape:  "<newline>"
Literal.String.Double:  "def\""
Text:  "<newline><newline>test parse-1.14 "
Literal.String.Double:  "\"Newline in quotes after var\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\"abc"
Name.Variable:  "$y"
Literal.String.Double:  "<newline>def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc1"
Literal.String.Escape:  "<newline>"
Literal.String.Double:  "def\""
Text:  "<newline><newline>test parse-1.15 "
Literal.String.Double:  "\"Space in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\"abc def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc def\""
Text:  "<newline><newline>test parse-1.16 "
Literal.String.Double:  "\"Space in quotes after var\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\"abc"
Name.Variable:  "${y}"
Literal.String.Double:  " def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc1 def\""
Text:  "<newline><newline>test parse-1.17 "
Literal.String.Double:  "\"Command and var in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\""
Punctuation:  "["
Text:  "set z 2"
Punctuation:  "]["
Text:  "set y"
Punctuation:  "]"
Literal.String.Double:  "\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " 21<newline><newline>test parse-1.18 "
Literal.String.Double:  "\"Command and var in bare context\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Punctuation:  "["
Text:  "set z 2"
Punctuation:  "]["
Text:  "set y"
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 21<newline><newline>test parse-1.19 "
Literal.String.Double:  "\"Lone dollar sign in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x "
Literal.String.Double:  "\"6"
Text:  "$"
Punctuation:  "["
Text:  "set y"
Punctuation:  "]"
Literal.String.Double:  "\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " 6"
Literal.String.Escape:  "\\$"
Text:  "1<newline><newline>test parse-1.20 "
Literal.String.Double:  "\"Command and var in bare context\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset x 6$"
Punctuation:  "["
Text:  "set y"
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 6"
Literal.String.Escape:  "\\$"
Text:  "1<newline><newline>test parse-1.21 "
Literal.String.Double:  "\"Comment\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>"
Comment.Single:  "# A comment one a line"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "set y"
Punctuation:  "]"
Text:  " "
Punctuation:  ";"
Comment.Single:  "# comment after semicolon"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 1<newline><newline>test parse-1.22 "
Literal.String.Double:  "\"# char\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tappend y #<newline>\tset x "
Literal.String.Double:  "\""
Punctuation:  "["
Text:  "set y"
Punctuation:  "]"
Literal.String.Double:  "#\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "1##"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.23 "
Literal.String.Double:  "\"newline in command\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset y 1<newline>\tset z 2<newline>\tset x "
Punctuation:  "["
Text:  "incr y<newline>\tincr z"
Punctuation:  "]"
Text:  "<newline>\tlist $x $y $z<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "3 2 3"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.24 "
Literal.String.Double:  "\"semicolon in command\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "list a"
Punctuation:  ";"
Text:  " list b c"
Punctuation:  ";"
Text:  " list d e f"
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "d e f"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "# Note that Tcl complains about the missing brace here"
Text:  "<newline>"
Comment.Single:  "# while Jim ignores it"
Text:  "<newline>test parse-1.25 "
Literal.String.Double:  "\"missing brace in var\""
Text:  " jim "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a<newline>\tset a 3<newline>\tset brace "
Literal.String.Escape:  "\\{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "subst "
Literal.String.Escape:  "\\$"
Name.Variable:  "${brace}"
Text:  "a"
Punctuation:  "]"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 3<newline><newline>test parse-1.26 "
Literal.String.Double:  "\"newline in braced var\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset "
Literal.String.Double:  "\"a"
Literal.String.Escape:  "<newline>"
Literal.String.Double:  "b\""
Text:  " var1<newline>\tset x $"
Punctuation:  "{"
Text:  "a<newline>b"
Punctuation:  "}"
Text:  "<newline>"
Punctuation:  "}"
Text:  " var1<newline><newline>test parse-1.27 "
Literal.String.Double:  "\"backslash escape in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a<newline>\tset a"
Punctuation:  "("
Text:  "b"
Literal.String.Escape:  "\\x55"
Text:  "d"
Punctuation:  ")"
Text:  " 5<newline>\tset x $a"
Punctuation:  "("
Text:  "b"
Literal.String.Escape:  "\\x55"
Text:  "d"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 5<newline><newline>test parse-1.28 "
Literal.String.Double:  "\"nested dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a b<newline>\tset a"
Punctuation:  "("
Text:  "V"
Punctuation:  ")"
Text:  " 5<newline>\tset b"
Punctuation:  "("
Text:  "5"
Punctuation:  ")"
Text:  " five<newline>\tset x $b"
Punctuation:  "("
Name.Variable:  "$a"
Punctuation:  "("
Text:  "V"
Punctuation:  "))"
Text:  "<newline>"
Punctuation:  "}"
Text:  " five<newline><newline>set dq "
Punctuation:  "{"
Literal.String.Double:  "\""
Punctuation:  "}"
Text:  "<newline>set script "
Literal.String.Double:  "\"set x "
Name.Variable:  "${dq}"
Literal.String.Double:  "hello\""
Text:  "<newline><newline>test parse-1.29 "
Literal.String.Double:  "\"missing quote\""
Text:  " jim "
Punctuation:  "{"
Text:  "<newline>\teval $script<newline>"
Punctuation:  "}"
Text:  " hello<newline><newline>test parse-1.30 "
Literal.String.Double:  "\"missing quote\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tinfo complete $script<newline>"
Punctuation:  "}"
Text:  " 0<newline><newline>test parse-1.31 "
Literal.String.Double:  "\"backslash newline in bare context\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tlist abc"
Literal.String.Escape:  "\\<newline>"
Text:  "\t123<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "abc 123"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.32 "
Literal.String.Double:  "\"comment as last line of script\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset script "
Punctuation:  "{"
Text:  "set x 3"
Punctuation:  ";"
Text:  " # this is a comment"
Punctuation:  "}"
Text:  "<newline>\teval $script<newline>"
Punctuation:  "}"
Text:  " 3<newline><newline>test parse-1.33 "
Literal.String.Double:  "\"upper case hex escapes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Escape:  "\\x4A"
Text:  " "
Literal.String.Escape:  "\\x4F"
Text:  " "
Literal.String.Escape:  "\\x3C"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "J O <"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.34 "
Literal.String.Double:  "\"octal escapes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Escape:  "\\112"
Text:  " "
Literal.String.Escape:  "\\117"
Text:  " "
Literal.String.Escape:  "\\074"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "J O <"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.35 "
Literal.String.Double:  "\"invalid hex escape\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Escape:  "\\x"
Text:  "ZZ<newline>"
Punctuation:  "}"
Text:  " xZZ<newline><newline>test parse-1.36 "
Literal.String.Double:  "\"unicode escape\""
Text:  " jim "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Escape:  "\\u00b5"
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Escape:  "\\xc2\\xb5"
Text:  "<newline><newline>test parse-1.37 "
Literal.String.Double:  "\"invalid unicode escape after unicode\""
Text:  " jim "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Escape:  "\\u"
Text:  "b5x<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Escape:  "\\xc2\\xb5"
Text:  "x<newline><newline>test parse-1.38 "
Literal.String.Double:  "\"invalid unicode escape\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Escape:  "\\u"
Text:  "x<newline>"
Punctuation:  "}"
Text:  " ux<newline><newline>test parse-1.39 "
Literal.String.Double:  "\"octal escape followed by invalid\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Escape:  "\\7"
Text:  "6x<newline>"
Punctuation:  "}"
Text:  " >x<newline><newline>test parse-1.40 "
Literal.String.Double:  "\"list containing quoted trailing backslash\""
Text:  " jim "
Punctuation:  "{"
Text:  "<newline>\tset x "
Literal.String.Double:  "\"abc "
Literal.String.Escape:  "\\\""
Literal.String.Double:  "def"
Literal.String.Escape:  "\\\\"
Literal.String.Double:  "\""
Text:  "<newline>\tlindex $x 1<newline>"
Punctuation:  "}"
Text:  " def"
Literal.String.Escape:  "\\\\"
Text:  "<newline><newline>test parse-1.41 "
Literal.String.Double:  "\"list containing quoted newline\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "{"
Text:  "abc "
Literal.String.Double:  "\"def<newline>ghi\""
Punctuation:  "}"
Text:  "<newline>\tlindex $x 1<newline>"
Punctuation:  "}"
Text:  " def"
Literal.String.Escape:  "<newline>"
Text:  "ghi<newline><newline>test parse-1.42 "
Literal.String.Double:  "\"list containing missing quote\""
Text:  " jim "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "{"
Text:  "abc "
Literal.String.Double:  "\"def"
Punctuation:  "}"
Text:  "<newline>\tlindex $x 1<newline>"
Punctuation:  "}"
Text:  " def<newline><newline>test parse-1.43 "
Literal.String.Double:  "\"list containing trailing backslash\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Literal.String.Double:  "\"abc def"
Literal.String.Escape:  "\\\\"
Literal.String.Double:  "\""
Text:  "<newline>\tlindex $x 1<newline>"
Punctuation:  "}"
Text:  " def"
Literal.String.Escape:  "\\\\"
Text:  "<newline><newline>test parse-1.44 "
Literal.String.Double:  "\"list creation\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tlist "
Literal.String.Double:  "\"a{ }d\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{{"
Text:  "a"
Punctuation:  "{"
Text:  " "
Punctuation:  "}"
Text:  "d"
Punctuation:  "}}"
Text:  "<newline><newline>test parse-1.45 "
Literal.String.Double:  "\"spaces before expr function args\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\texpr "
Punctuation:  "{"
Text:  "round  "
Punctuation:  "("
Text:  "3.2"
Punctuation:  ")}"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 3<newline><newline>test parse-1.46 "
Literal.String.Double:  "\"expr function missing paren\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tcatch "
Punctuation:  "{"
Text:  "expr "
Punctuation:  "{"
Text:  "round 3.2"
Punctuation:  "}}"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 1<newline><newline>test parse-1.47 "
Literal.String.Double:  "\"backslash newline in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t# spaces<newline>\tset x "
Literal.String.Double:  "\"abc"
Literal.String.Escape:  "\\<newline>"
Literal.String.Double:  "      def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc def\""
Text:  "<newline><newline>test parse-1.48 "
Literal.String.Double:  "\"backslash newline in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t# tabs<newline>\tset x "
Literal.String.Double:  "\"abc"
Literal.String.Escape:  "\\<newline>"
Literal.String.Double:  "\t\tdef\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc def\""
Text:  "<newline><newline>test parse-1.49 "
Literal.String.Double:  "\"backslash newline in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t# tabs plus newline<newline>\tset x "
Literal.String.Double:  "\"abc"
Literal.String.Escape:  "\\<newline>"
Literal.String.Double:  "<newline>def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc "
Literal.String.Escape:  "<newline>"
Literal.String.Double:  "def\""
Text:  "<newline><newline>test parse-1.50 "
Literal.String.Double:  "\"backslash newline in quotes\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\t# tabs plus newline<newline>\tset x "
Literal.String.Double:  "\"abc"
Literal.String.Escape:  "\\<newline>"
Literal.String.Double:  "def\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Literal.String.Double:  "\"abc def\""
Text:  "<newline><newline>test parse-1.51 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a<newline>\tset a"
Punctuation:  "("
Text:  "x$"
Punctuation:  ")"
Text:  " 5<newline>\tarray names a<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{{"
Text:  "x$"
Punctuation:  "}}"
Text:  "<newline><newline>test parse-1.52 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x $a"
Punctuation:  "("
Text:  "x$"
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 5<newline><newline>test parse-1.53 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a<newline>\tset a"
Punctuation:  "("
Text:  "x"
Literal.String.Escape:  "\\["
Punctuation:  ")"
Text:  " 5<newline>\tarray names a<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{{"
Text:  "x"
Punctuation:  "[}}"
Text:  "<newline><newline>test parse-1.54 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x $a"
Punctuation:  "("
Text:  "x"
Literal.String.Escape:  "\\["
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 5<newline><newline>test parse-1.55 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a<newline>\tset a"
Punctuation:  "("
Text:  "x"
Literal.String.Escape:  "\\("
Punctuation:  ")"
Text:  " 5<newline>\tarray names a<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "x"
Punctuation:  "(}"
Text:  "<newline><newline>test parse-1.56 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x $a"
Punctuation:  "("
Text:  "x"
Literal.String.Escape:  "\\("
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 5<newline><newline>test parse-1.57 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a<newline>\tset a"
Punctuation:  "("
Text:  "x"
Punctuation:  "()"
Text:  " 5<newline>\tarray names a<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "x"
Punctuation:  "(}"
Text:  "<newline><newline>test parse-1.58 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x $a"
Punctuation:  "("
Text:  "x"
Punctuation:  "()"
Text:  "<newline>"
Punctuation:  "}"
Text:  " 5<newline><newline>test parse-1.59 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tunset -nocomplain a<newline>\tset a"
Punctuation:  "("
Text:  "x"
Literal.String.Double:  "\") 5<newline>\tlindex "
Punctuation:  "["
Text:  "array names a"
Punctuation:  "]"
Literal.String.Double:  " 0<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "x"
Literal.String.Double:  "\""
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.60 "
Literal.String.Double:  "\"special chars in dict sugar\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x $a"
Punctuation:  "("
Text:  "x"
Literal.String.Double:  "\")<newline>"
Punctuation:  "}"
Text:  " 5<newline><newline>test parse-1.61 "
Literal.String.Double:  "\"quote in command\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Punctuation:  "["
Text:  "list "
Literal.String.Escape:  "\\\\"
Literal.String.Double:  "\" x]<newline>\tlindex "
Name.Variable:  "$x"
Literal.String.Double:  " end<newline>"
Punctuation:  "}"
Text:  " x<newline><newline>test parse-1.62 "
Literal.String.Double:  "\"quoted orphan dollar sign\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x "
Literal.String.Double:  "\"x"
Text:  "$"
Literal.String.Double:  "\""
Text:  "<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "x$"
Punctuation:  "}"
Text:  "<newline><newline>test parse-1.63 "
Literal.String.Double:  "\"unquoted dollar sign\""
Text:  " "
Punctuation:  "{"
Text:  "<newline>\tset x x$<newline>"
Punctuation:  "}"
Text:  " "
Punctuation:  "{"
Text:  "x$"
Punctuation:  "}"
Text:  "<newline><newline>testreport<newline>"
