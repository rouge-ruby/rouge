Comment:  "# This is a TOML document. Boom."
Text:  "<newline><newline>"
Name.Property:  "title"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"TOML Example\""
Text:  "<newline><newline>"
Name.Namespace:  "[owner]"
Text:  "<newline>"
Name.Property:  "name"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"Tom Preston-Werner\""
Text:  "<newline>"
Name.Property:  "organization"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"GitHub\""
Text:  "<newline>"
Name.Property:  "bio"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"GitHub Cofounder & CEO"
Literal.String.Escape:  "<newline>"
Literal.String:  "Likes tater tots and beer.\""
Text:  "<newline>"
Name.Property:  "dob"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Date:  "1979-05-27T07:32:00Z"
Text:  " "
Comment:  "# First class dates? Why not?"
Text:  "<newline><newline>"
Name.Namespace:  "[database]"
Text:  "<newline>"
Name.Property:  "server"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"192.168.1.1\""
Text:  "<newline>"
Name.Property:  "ports"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Literal.Number.Integer:  "8001"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "8001"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "8002"
Text:  " "
Punctuation:  "]"
Text:  "<newline>"
Name.Property:  "connection_max"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "5000"
Text:  "<newline>"
Name.Property:  "enabled"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword.Constant:  "true"
Text:  "<newline><newline>"
Name.Namespace:  "[servers]"
Text:  "<newline><newline>  "
Comment:  "# You can indent as you please. Tabs or spaces. TOML don't care."
Text:  "<newline>  "
Name.Namespace:  "[servers.alpha]"
Text:  "<newline>  "
Name.Property:  "ip"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"10.0.0.1\""
Text:  "<newline>  "
Name.Property:  "dc"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"eqdc10\""
Text:  "<newline><newline>  "
Name.Namespace:  "[servers.beta]"
Text:  "<newline>  "
Name.Property:  "ip"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"10.0.0.2\""
Text:  "<newline>  "
Name.Property:  "dc"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"eqdc10\""
Text:  "<newline><newline>"
Name.Namespace:  "[dog.\"tater.man\"]"
Text:  "<newline>"
Name.Property:  "type.name"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"pug\""
Text:  "<newline><newline>"
Name.Namespace:  "[a.b.c]"
Text:  "            "
Comment:  "# this is best practice"
Text:  "<newline>"
Name.Namespace:  "[ d.e.f ]"
Text:  "          "
Comment:  "# same as [d.e.f]"
Text:  "<newline>"
Name.Namespace:  "[ g .  h  . i ]"
Text:  "    "
Comment:  "# same as [g.h.i]"
Text:  "<newline>"
Name.Namespace:  "[ j . \"\u029E\" . 'l' ]"
Text:  "  "
Comment:  "# same as [j.\"\u029E\".'l']"
Text:  "<newline><newline>"
Name.Namespace:  "[clients]"
Text:  "<newline>"
Name.Property:  "data"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Punctuation:  "["
Literal.String:  "\"gamma\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"delta\""
Punctuation:  "],"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "2"
Punctuation:  "]"
Text:  " "
Punctuation:  "]"
Text:  " "
Comment:  "# just an update to make sure parsers support it"
Text:  "<newline><newline>"
Comment:  "# Line breaks are OK when inside arrays"
Text:  "<newline>"
Name.Property:  "hosts"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  "<newline>  "
Literal.String:  "\"alpha\""
Punctuation:  ","
Text:  "<newline>  "
Literal.String:  "\"omega\""
Text:  "<newline>"
Punctuation:  "]"
Text:  "<newline><newline>"
Name.Property:  "funky"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"I'm a string. "
Literal.String.Escape:  "\\\""
Literal.String:  "You can quote me"
Literal.String.Escape:  "\\\""
Literal.String:  ". Tab "
Literal.String.Escape:  "\\t"
Literal.String:  " newline "
Literal.String.Escape:  "<newline>"
Literal.String:  " you get it.\""
Text:  "<newline>"
Name.Property:  "right"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"C:"
Literal.String.Escape:  "\\\\"
Literal.String:  "Users"
Literal.String.Escape:  "\\\\"
Literal.String:  "nodejs"
Literal.String.Escape:  "\\\\"
Literal.String:  "templates\""
Text:  "<newline>"
Name.Property:  "wrong"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"C:"
Error:  "\\"
Literal.String:  "Users"
Literal.String.Escape:  "<newline>"
Literal.String:  "odejs"
Literal.String.Escape:  "\\t"
Literal.String:  "emplates\""
Text:  " "
Comment:  "# note: doesn't produce a valid path"
Text:  "<newline><newline>"
Comment:  "# What you see is what you get - no escapes"
Text:  "<newline>"
Name.Property:  "winpath"
Text:  "  "
Punctuation:  "="
Text:  " "
Literal.String:  "'C:\\Users<newline>odejs\\templates'"
Text:  "<newline>"
Name.Property:  "winpath2"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "'\\\\ServerX\\admin$\\system32\\'"
Text:  "<newline>"
Name.Property:  "quoted"
Text:  "   "
Punctuation:  "="
Text:  " "
Literal.String:  "'Tom \"Dubs\" Preston-Werner'"
Text:  "<newline>"
Name.Property:  "regex"
Text:  "    "
Punctuation:  "="
Text:  " "
Literal.String:  "'<\\i\\c*\\s*>'"
Text:  "<newline>"
Name.Property:  "wrong"
Text:  "    "
Punctuation:  "="
Text:  " "
Literal.String:  "'no multiline - but rest of lex is okay"
Error:  "<newline>"
Text:  "<newline>"
Comment:  "# multiline"
Text:  "<newline>"
Name.Property:  "regex2"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "'''I [dw]on't need \\d{2} apples'''"
Text:  "<newline>"
Name.Property:  "lines"
Text:  "  "
Punctuation:  "="
Text:  " "
Literal.String:  "'''<newline>The first newline is<newline>trimmed in raw strings.<newline>   All other whitespace<newline>   is preserved.<newline>'''"
Text:  "<newline><newline>"
Name.Property:  "str4"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"\"\"Here are two quotation marks: \"\". Simple enough.\"\"\""
Text:  "<newline>"
Comment:  "# str5 = \"\"\"Here are three quotation marks: \"\"\".\"\"\"  # INVALID"
Text:  "<newline>"
Name.Property:  "str5"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"\"\"Here are three quotation marks: \"\""
Literal.String.Escape:  "\\\""
Literal.String:  ".\"\"\""
Text:  "<newline>"
Name.Property:  "str6"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"\"\"Here are fifteen quotation marks: \"\""
Literal.String.Escape:  "\\\""
Literal.String:  "\"\""
Literal.String.Escape:  "\\\""
Literal.String:  "\"\""
Literal.String.Escape:  "\\\""
Literal.String:  "\"\""
Literal.String.Escape:  "\\\""
Literal.String:  "\"\""
Literal.String.Escape:  "\\\""
Literal.String:  ".\"\"\""
Text:  "<newline><newline>"
Comment:  "# \"This,\" she said, \"is just a pointless statement.\""
Text:  "<newline>"
Name.Property:  "str7"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"\"\"\"This,\" she said, \"is just a pointless statement.\"\"\""
Text:  "<newline>"
Comment:  "# The following strings are byte-for-byte equivalent:"
Text:  "<newline>"
Name.Property:  "str1"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"The quick brown fox jumps over the lazy dog.\""
Text:  "<newline><newline>"
Name.Property:  "str2"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"\"\"<newline>The quick brown "
Literal.String.Escape:  "\\<newline>"
Literal.String:  "<newline><newline>  fox jumps over "
Literal.String.Escape:  "\\<newline>"
Literal.String:  "    the lazy dog.\"\"\""
Text:  "<newline><newline>"
Name.Property:  "str3"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"\"\""
Literal.String.Escape:  "\\<newline>"
Literal.String:  "       The quick brown "
Literal.String.Escape:  "\\<newline>"
Literal.String:  "       fox jumps over "
Literal.String.Escape:  "\\<newline>"
Literal.String:  "       the lazy dog."
Literal.String.Escape:  "\\<newline>"
Literal.String:  "       \"\"\""
Text:  "<newline><newline>"
Comment:  "# Test file for TOML"
Text:  "<newline>"
Comment:  "# Only this one tries to emulate a TOML file written by a user of the kind of parser writers probably hate"
Text:  "<newline>"
Comment:  "# This part you'll really hate"
Text:  "<newline><newline>"
Name.Namespace:  "[the]"
Text:  "<newline>"
Name.Property:  "test_string"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"You'll hate me after this - #\""
Text:  "          "
Comment:  "# \" Annoying, isn't it?"
Text:  "<newline><newline>    "
Name.Namespace:  "[the.hard]"
Text:  "<newline>    "
Name.Property:  "test_array"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Literal.String:  "\"] \""
Punctuation:  ","
Text:  " "
Literal.String:  "\" # \""
Punctuation:  "]"
Text:  "      "
Comment:  "# ] There you go, parse this!"
Text:  "<newline>    "
Name.Property:  "test_array2"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Literal.String:  "\"Test #11 ]proved that\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"Experiment #9 was a success\""
Text:  " "
Punctuation:  "]"
Text:  "<newline>    "
Comment:  "# You didn't think it'd as easy as chucking out the last #, did you?"
Text:  "<newline>    "
Name.Property:  "another_test_string"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\" Same thing, but with a string #\""
Text:  "<newline>    "
Name.Property:  "harder_test_string"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\" And when "
Literal.String.Escape:  "\\\""
Literal.String:  "'s are in the string, along with # "
Literal.String.Escape:  "\\\""
Literal.String:  "\""
Text:  "   "
Comment:  "# \"and comments are there too\""
Text:  "<newline>    "
Comment:  "# Things will get harder"
Text:  "<newline>    <newline>        "
Name.Namespace:  "[the.hard.bit#]"
Text:  "<newline>        "
Name.Property:  "what?"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"You don't think some user won't do that?\""
Text:  "<newline>        "
Name.Property:  "multi_line_array"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  "<newline>            "
Literal.String:  "\"]\""
Punctuation:  ","
Text:  "<newline>            "
Literal.String:  "\"Oi!"
Literal.String.Escape:  "<newline>"
Literal.String:  "\""
Punctuation:  ","
Text:  "<newline>            "
Comment:  "# ] Oh yes I did"
Text:  "<newline>            "
Punctuation:  "]"
Text:  "<newline><newline>"
Name.Property:  "\u6771\u4EAC\u90FD"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "123"
Text:  "<newline><newline>"
Comment:  "# Inline table"
Text:  "<newline>"
Name.Namespace:  "name"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Name.Property:  "first"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"Tom\""
Punctuation:  ","
Text:  " "
Name.Property:  "last"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"Preston-Werner\""
Text:  " "
Punctuation:  "}"
Text:  "<newline>"
Name.Namespace:  "point"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Name.Property:  "x"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Name.Property:  "y"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Punctuation:  "}"
Text:  "<newline>"
Name.Namespace:  "'student names'"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "{"
Text:  " "
Name.Property:  "\"first name\""
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"Tom\""
Punctuation:  ","
Text:  " "
Name.Property:  "\"last name\""
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"Preston-Werner\""
Text:  " "
Punctuation:  "}"
Text:  "<newline><newline>"
Comment:  "# Quoted keys"
Text:  "<newline>"
Name.Property:  "\"127.0.0.1\""
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"value\""
Text:  "<newline>"
Name.Property:  "\"character encoding\""
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"value\""
Text:  "<newline>"
Name.Property:  "\"\u028E\u01DD\u029E\""
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"value\""
Text:  "<newline>"
Name.Property:  "'key2'"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"value\""
Text:  "<newline>"
Name.Property:  "'quoted \"value\"'"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"value\""
Text:  "<newline><newline>"
Comment:  "# Array"
Text:  "<newline>"
Name.Property:  "integers"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "2"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "3"
Text:  " "
Punctuation:  "]"
Text:  "<newline>"
Name.Property:  "colors"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Literal.String:  "\"red\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"yellow\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"green\""
Text:  " "
Punctuation:  "]"
Text:  "<newline>"
Name.Property:  "nested_arrays_of_ints"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Punctuation:  "["
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Punctuation:  "],"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "3"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "4"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "5"
Punctuation:  "]"
Text:  " "
Punctuation:  "]"
Text:  "<newline>"
Name.Property:  "nested_mixed_array"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Punctuation:  "["
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "2"
Text:  " "
Punctuation:  "],"
Text:  " "
Punctuation:  "["
Literal.String:  "\"a\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"b\""
Punctuation:  ","
Text:  " "
Literal.String:  "\"c\""
Punctuation:  "]"
Text:  " "
Punctuation:  "]"
Text:  "<newline>"
Name.Property:  "string_array"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Text:  " "
Literal.String:  "\"all\""
Punctuation:  ","
Text:  " "
Literal.String:  "'strings'"
Punctuation:  ","
Text:  " "
Literal.String:  "\"\"\"are the same\"\"\""
Punctuation:  ","
Text:  " "
Literal.String:  "'''type'''"
Text:  " "
Punctuation:  "]"
Text:  "<newline>"
Name.Property:  "link-libraries"
Text:  " "
Punctuation:  "="
Text:  " "
Punctuation:  "["
Literal.String:  "\"mylib::mylib\""
Punctuation:  "]"
Text:  "<newline><newline>"
Comment:  "# Dotted keys"
Text:  "<newline>"
Name.Property:  "physical.color"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"orange\""
Text:  "<newline>"
Name.Property:  "physical.shape"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"round\""
Text:  "<newline>"
Name.Property:  "site.\"google.com\""
Text:  " "
Punctuation:  "="
Text:  " "
Keyword.Constant:  "true"
Text:  "<newline><newline>"
Comment:  "# floating point numbers"
Text:  "<newline>"
Name.Property:  "float_space1"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "3.141_592_653"
Text:  "<newline>"
Name.Property:  "float_space2"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "123_456.789_012e+1_000"
Text:  "<newline>"
Name.Property:  "just_inf"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "inf"
Text:  "<newline>"
Name.Property:  "pos_inf"
Text:  "  "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "+inf"
Text:  "<newline>"
Name.Property:  "neg_inf"
Text:  "  "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "-inf"
Text:  "<newline>"
Name.Property:  "just_nan"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "nan"
Text:  "<newline>"
Name.Property:  "pos_nan"
Text:  "  "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "+nan"
Text:  "<newline>"
Name.Property:  "neg_nan"
Text:  "  "
Punctuation:  "="
Text:  " "
Literal.Number.Float:  "-nan"
Text:  "<newline><newline>"
Comment:  "# integer formats"
Text:  "<newline>"
Name.Property:  "dec"
Text:  "         "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "123456"
Text:  "<newline>"
Name.Property:  "dec_spacing"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "123_456"
Text:  "<newline>"
Name.Property:  "hex"
Text:  "         "
Punctuation:  "="
Text:  " "
Literal.Number.Hex:  "0xdeadBEEF"
Text:  "<newline>"
Name.Property:  "hex_spacing"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Hex:  "0xdead_BEEF"
Text:  "<newline>"
Name.Property:  "oct"
Text:  "         "
Punctuation:  "="
Text:  " "
Literal.Number.Oct:  "0o755"
Text:  "<newline>"
Name.Property:  "oct_spacing"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Oct:  "0o755_777"
Text:  "<newline>"
Name.Property:  "bin"
Text:  "         "
Punctuation:  "="
Text:  " "
Literal.Number.Bin:  "0b1100"
Text:  "<newline>"
Name.Property:  "bin_spacing"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Bin:  "0b0101_1100"
Text:  "<newline><newline>"
Name.Namespace:  "[[products]]"
Text:  "<newline>"
Name.Property:  "name"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"array of table\""
Text:  "<newline>"
Name.Property:  "sku"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "738594937"
Text:  "<newline>"
Name.Property:  "emptyTableAreAllowed"
Text:  " "
Punctuation:  "="
Text:  " "
Keyword.Constant:  "true"
Text:  "<newline><newline>"
Name.Namespace:  "[[products]]"
Text:  "<newline><newline>"
Name.Namespace:  "[[products]]"
Text:  "<newline>"
Name.Property:  "name"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"Nail\""
Text:  "<newline>"
Name.Property:  "sku"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.Number.Integer:  "284758393"
Text:  "<newline>"
Name.Property:  "color"
Text:  " "
Punctuation:  "="
Text:  " "
Literal.String:  "\"gray\""
Text:  "<newline>"
