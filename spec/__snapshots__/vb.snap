Comment.Single:  "' Copyright (c) 2008 Silken Web - Free BSD License"
Text:  "<newline>"
Comment.Single:  "' All rights reserved."
Text:  "<newline>"
Comment.Single:  "'"
Text:  "<newline>"
Comment.Single:  "' Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:"
Text:  "<newline>"
Comment.Single:  "' * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer"
Text:  "<newline>"
Comment.Single:  "' * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution."
Text:  "<newline>"
Comment.Single:  "' * Neither the name of Silken Web nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission."
Text:  "<newline>"
Comment.Single:  "'"
Text:  "<newline>"
Comment.Single:  "' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,"
Text:  "<newline>"
Comment.Single:  "' THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS"
Text:  "<newline>"
Comment.Single:  "' BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE"
Text:  "<newline>"
Comment.Single:  "' GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT"
Text:  "<newline>"
Comment.Single:  "' LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH"
Text:  "<newline>"
Comment.Single:  "' DAMAGE."
Text:  "<newline><newline>"
Keyword:  "Imports"
Text:  " "
Name.Namespace:  "System.Net.Mail"
Text:  "<newline>"
Keyword:  "Imports"
Text:  " "
Name.Namespace:  "SilkenWeb.Entities"
Text:  "<newline>"
Keyword:  "Imports"
Text:  " "
Name.Namespace:  "System.Text.RegularExpressions"
Text:  "<newline>"
Keyword:  "Imports"
Text:  " "
Name.Namespace:  "System.Reflection"
Text:  "<newline>"
Keyword:  "Imports"
Text:  " "
Name.Namespace:  "SilkenWeb.Validation"
Text:  "<newline>"
Keyword:  "Imports"
Text:  " "
Name.Namespace:  "System.Globalization"
Text:  "<newline>"
Keyword:  "Imports"
Text:  " "
Name.Namespace:  "SilkenWeb.Reflection"
Text:  "<newline><newline>"
Keyword:  "Namespace"
Text:  " "
Name.Namespace:  "SilkenWeb"
Text:  "<newline><newline>    "
Comment.Single:  "''' <summary>"
Text:  "<newline>    "
Comment.Single:  "''' Represents an Email and what you can do with it."
Text:  "<newline>    "
Comment.Single:  "''' </summary>"
Text:  "<newline>    "
Comment.Single:  "''' <remarks>"
Text:  "<newline>    "
Comment.Single:  "''' Keith Jackson"
Text:  "<newline>    "
Comment.Single:  "''' 11/04/2008"
Text:  "<newline>    "
Comment.Single:  "'''"
Text:  "<newline>    "
Comment.Single:  "''' This class is intended to be inherrited for providing all manner of system generated emails, each represented by it's own class."
Text:  "<newline>    "
Comment.Single:  "''' </remarks>"
Text:  "<newline>    "
Keyword:  "Public"
Text:  " "
Keyword:  "MustInherit"
Text:  " "
Keyword:  "Class"
Text:  " "
Name.Class:  "EmailBase"
Text:  " "
Punctuation:  ":"
Text:  " "
Keyword:  "Implements"
Text:  " "
Name:  "IValidatable"
Punctuation:  ","
Text:  " "
Name:  "IDisposable"
Text:  "<newline><newline>"
Comment.Preproc:  "#Region \" Constants \"<newline>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Const"
Text:  " "
Name.Variable:  "LenientRegexPattern"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\""
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Const"
Text:  " "
Name.Variable:  "StrictRegexPattern"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"^(([^<>()[\\]\\\\.,;:\\s@\\"
Literal.String.Escape:  "\"\""
Literal.String:  "]+(\\.[^<>()[\\]\\\\.,;:\\s@\\"
Literal.String.Escape:  "\"\""
Literal.String:  "]+)*)|(\\"
Literal.String.Escape:  "\"\""
Literal.String:  ".+\\"
Literal.String.Escape:  "\"\""
Literal.String:  "))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\""
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Const"
Text:  " "
Name.Variable:  "InvalidEmailAddressError"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"The Email address provided was invalid\""
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Const"
Text:  " "
Name.Variable:  "InvalidEmailAddressErrorWithAddress"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"The Email address, {0}, provided was invalid\""
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Const"
Text:  " "
Name.Variable:  "NullEmailAddressError"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Literal.String:  "\"The Email address was not provided\""
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>"
Comment.Preproc:  "#Region \" Fields \"<newline>"
Text:  "<newline>        "
Keyword:  "Private"
Text:  " "
Name:  "disposedValue"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Text:  "<newline><newline>        "
Keyword:  "Private"
Text:  " "
Name:  "_message"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "MailMessage"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailMessage"
Punctuation:  "()"
Text:  "<newline>        "
Keyword:  "Private"
Text:  " "
Name:  "_mailClient"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "SmtpClient"
Text:  "<newline><newline>        "
Keyword:  "Private"
Text:  " "
Name:  "_useStrictValidation"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>"
Comment.Preproc:  "#Region \" Construction \"<newline>"
Text:  "<newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Instantiates a new Email of the derived type."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"sender\">The email address of the sender of the message.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"recipients\">The email addresses of the recipients of the message.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"subject\">The subject of the message.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"body\">The body of the message.</param>"
Text:  "<newline>        "
Keyword:  "Protected"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "New"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "sender"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "subject"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "body"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Keyword:  "ParamArray"
Text:  " "
Name:  "recipients"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "())"
Text:  "<newline>            "
Name:  "_message"
Punctuation:  "."
Name:  "From"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailAddress"
Punctuation:  "("
Name:  "sender"
Punctuation:  ")"
Text:  "<newline>            "
Keyword:  "For"
Text:  " "
Name:  "i"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Integer"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "To"
Text:  " "
Name:  "recipients"
Punctuation:  "."
Name:  "Length"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "To"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Name:  "recipients"
Punctuation:  "("
Name:  "i"
Punctuation:  "))"
Text:  "<newline>            "
Keyword:  "Next"
Text:  "<newline>            "
Name:  "_message"
Punctuation:  "."
Name:  "Subject"
Text:  " "
Operator:  "="
Text:  " "
Name:  "subject"
Text:  "<newline>            "
Name:  "_message"
Punctuation:  "."
Name:  "Body"
Text:  " "
Operator:  "="
Text:  " "
Name:  "body"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>"
Comment.Preproc:  "#Region \" Properties \"<newline>"
Text:  "<newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Gets the Attachments for the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Protected"
Text:  " "
Keyword:  "Overridable"
Text:  " "
Keyword:  "ReadOnly"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "Attachments"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "AttachmentCollection"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "Attachments"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The email addresses of the BCC recipients of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "BccRecipients"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "()"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "Bcc"
Punctuation:  "."
Name:  "ToAddressStringArray"
Punctuation:  "()"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "())"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "Bcc"
Punctuation:  "."
Name:  "Clear"
Punctuation:  "()"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "Bcc"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Name:  "value"
Punctuation:  "."
Name:  "ToDelimitedString"
Punctuation:  "())"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The body of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Protected"
Text:  " "
Keyword:  "Overridable"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "Body"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "Body"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "Body"
Text:  " "
Operator:  "="
Text:  " "
Name:  "value"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The email addresses of the CC recipients of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "CCRecipients"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "()"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "CC"
Punctuation:  "."
Name:  "ToAddressStringArray"
Punctuation:  "()"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "())"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "CC"
Punctuation:  "."
Name:  "Clear"
Punctuation:  "()"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "CC"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Name:  "value"
Punctuation:  "."
Name:  "ToDelimitedString"
Punctuation:  "())"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Gets or Sets a flag to indicate if the body of the message is HTML."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "IsBodyHtml"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "IsBodyHtml"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Punctuation:  ")"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "IsBodyHtml"
Text:  " "
Operator:  "="
Text:  " "
Name:  "value"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Gets the Mail message wrapped by the EmailBase class."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Protected"
Text:  " "
Keyword:  "ReadOnly"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "Message"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "MailMessage"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Gets or Sets the Priority of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "Priority"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "MailPriority"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "Priority"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "MailPriority"
Punctuation:  ")"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "Priority"
Text:  " "
Operator:  "="
Text:  " "
Name:  "value"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The email addresses of the recipients of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "Recipients"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "()"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "To"
Punctuation:  "."
Name:  "ToAddressStringArray"
Punctuation:  "()"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "())"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "To"
Punctuation:  "."
Name:  "Clear"
Punctuation:  "()"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "To"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Name:  "value"
Punctuation:  "."
Name:  "ToDelimitedString"
Punctuation:  "())"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The reply email address of the sender of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "ReplyTo"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator.Word:  "Is"
Text:  " "
Keyword:  "Nothing"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                    "
Keyword:  "Return"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "."
Name:  "Empty"
Text:  "<newline>                "
Keyword:  "Else"
Text:  "<newline>                    "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Punctuation:  "."
Name:  "Address"
Text:  "<newline>                "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator.Word:  "Is"
Text:  " "
Keyword:  "Nothing"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                    "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailAddress"
Punctuation:  "("
Name:  "value"
Punctuation:  ")"
Text:  "<newline>                "
Keyword:  "Else"
Text:  "<newline>                    "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailAddress"
Punctuation:  "("
Name:  "value"
Punctuation:  ","
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Punctuation:  "."
Name:  "DisplayName"
Punctuation:  ")"
Text:  "<newline>                "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The reply display name of the sender of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "ReplyToDisplayName"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator.Word:  "Is"
Text:  " "
Keyword:  "Nothing"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                    "
Keyword:  "Return"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "."
Name:  "Empty"
Text:  "<newline>                "
Keyword:  "Else"
Text:  "<newline>                    "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Punctuation:  "."
Name:  "DisplayName"
Text:  "<newline>                "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator.Word:  "Is"
Text:  " "
Keyword:  "Nothing"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                    "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailAddress"
Punctuation:  "("
Name:  "_message"
Punctuation:  "."
Name:  "From"
Punctuation:  "."
Name:  "Address"
Punctuation:  ","
Text:  " "
Name:  "value"
Punctuation:  ")"
Text:  "<newline>                "
Keyword:  "Else"
Text:  "<newline>                    "
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailAddress"
Punctuation:  "("
Name:  "_message"
Punctuation:  "."
Name:  "ReplyTo"
Punctuation:  "."
Name:  "Address"
Punctuation:  ","
Text:  " "
Name:  "value"
Punctuation:  ")"
Text:  "<newline>                "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The email address of the sender of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Overridable"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "Sender"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "From"
Punctuation:  "."
Name:  "Address"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Protected"
Text:  " "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "From"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailAddress"
Punctuation:  "("
Name:  "value"
Punctuation:  ","
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "From"
Punctuation:  "."
Name:  "DisplayName"
Punctuation:  ")"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The display name of the sender of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Overridable"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "SenderDisplayName"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "From"
Punctuation:  "."
Name:  "DisplayName"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Protected"
Text:  " "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "From"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "MailAddress"
Punctuation:  "("
Name:  "_message"
Punctuation:  "."
Name:  "From"
Punctuation:  "."
Name:  "Address"
Punctuation:  ","
Text:  " "
Name:  "value"
Punctuation:  ")"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' The subject of the message."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Overridable"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "Subject"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_message"
Punctuation:  "."
Name:  "Subject"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Protected"
Text:  " "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>                "
Name:  "_message"
Punctuation:  "."
Name:  "Subject"
Text:  " "
Operator:  "="
Text:  " "
Name:  "value"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>"
Comment.Preproc:  "#Region \" Methods \"<newline>"
Text:  "<newline>"
Comment.Preproc:  "#Region \" Send Methods \"<newline>"
Text:  "<newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Sends this email"
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"mailServer\">The SMTP server to use to send the email.</param>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "Send"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "mailServer"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "_mailClient"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "SmtpClient"
Punctuation:  "("
Name:  "mailServer"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "_mailClient"
Punctuation:  "."
Name:  "Send"
Punctuation:  "("
Name:  "_message"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Sends this email asynchronously."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"mailServer\">The SMTP server to use to send the email.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"userToken\">A user defined token passed to the recieving method on completion of the asynchronous task.</param>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "SendAsync"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "mailServer"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "userToken"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Object"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "_mailClient"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "SmtpClient"
Punctuation:  "("
Name:  "mailServer"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "_mailClient"
Punctuation:  "."
Name:  "SendAsync"
Punctuation:  "("
Name:  "_message"
Punctuation:  ","
Text:  " "
Name:  "userToken"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Cancels an attempt to send this email asynchronously."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "SendAsyncCancel"
Punctuation:  "()"
Text:  "<newline>            "
Name:  "_mailClient"
Punctuation:  "."
Name:  "SendAsyncCancel"
Punctuation:  "()"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>"
Comment.Preproc:  "#Region \" IValidatable Implementation \"<newline>"
Text:  "<newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' gets and Sets a flag to indicate whether to use strict validation."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Property"
Text:  " "
Name.Function:  "UseStrictValidation"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Text:  "<newline>            "
Keyword:  "Get"
Text:  "<newline>                "
Keyword:  "Return"
Text:  " "
Name:  "_useStrictValidation"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Get"
Text:  "<newline>            "
Keyword:  "Set"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "value"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Punctuation:  ")"
Text:  "<newline>                "
Name:  "_useStrictValidation"
Text:  " "
Operator:  "="
Text:  " "
Name:  "value"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "Set"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Property"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Validates this email."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <returns>A ValidationResponse, containing a flag to indicate if validation was passed and a collection of Property Names and validation errors.</returns>"
Text:  "<newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Function"
Text:  " "
Name.Function:  "Validate"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "ValidationResponse"
Text:  " "
Keyword:  "Implements"
Text:  " "
Name:  "IValidatable"
Punctuation:  "."
Name:  "Validate"
Text:  "<newline><newline>            "
Keyword:  "Dim"
Text:  " "
Name.Variable:  "retVal"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword:  "New"
Text:  " "
Name:  "ValidationResponse"
Punctuation:  "()"
Text:  "<newline>            "
Keyword:  "Dim"
Text:  " "
Name.Variable:  "mailRegEx"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "If"
Punctuation:  "("
Name:  "_useStrictValidation"
Punctuation:  ","
Text:  " "
Name:  "StrictRegexPattern"
Punctuation:  ","
Text:  " "
Name:  "LenientRegexPattern"
Punctuation:  ")"
Text:  "<newline><newline>            "
Name:  "ValidateAddress"
Punctuation:  "("
Literal.String:  "\"Sender\""
Punctuation:  ","
Text:  " "
Name:  "retVal"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  ","
Text:  " "
Keyword:  "True"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "ValidateAddresses"
Punctuation:  "("
Literal.String:  "\"Recipients\""
Punctuation:  ","
Text:  " "
Name:  "retVal"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  ","
Text:  " "
Keyword:  "True"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "ValidateAddresses"
Punctuation:  "("
Literal.String:  "\"CcRecipients\""
Punctuation:  ","
Text:  " "
Name:  "retVal"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "ValidateAddresses"
Punctuation:  "("
Literal.String:  "\"BccRecipients\""
Punctuation:  ","
Text:  " "
Name:  "retVal"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "ValidateAddress"
Punctuation:  "("
Literal.String:  "\"ReplyTo\""
Punctuation:  ","
Text:  " "
Name:  "retVal"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  ")"
Text:  "<newline><newline>            "
Keyword:  "Return"
Text:  " "
Name:  "retVal"
Text:  "<newline><newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Function"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Validates a single Email Address property."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"propertyName\">The name of the property to validate.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"retVal\">The validation response object.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"mailRegEx\">The regular expression pattern to use for validation.</param>"
Text:  "<newline>        "
Keyword:  "Private"
Text:  " "
Keyword:  "Overloads"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "ValidateAddress"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "propertyName"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByRef"
Text:  " "
Name:  "retVal"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "ValidationResponse"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "mailRegEx"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "ValidateAddress"
Punctuation:  "("
Name:  "propertyName"
Punctuation:  ","
Text:  " "
Name:  "retVal"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  ","
Text:  " "
Keyword:  "False"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Validates a single Email Address property."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"propertyName\">The name of the property to validate.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"retVal\">The validation response object.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"mailRegEx\">The regular expression pattern to use for validation.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"required\">Indicates if the address is required; False if not specified.</param>"
Text:  "<newline>        "
Keyword:  "Private"
Text:  " "
Keyword:  "Overloads"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "ValidateAddress"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "propertyName"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByRef"
Text:  " "
Name:  "retVal"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "ValidationResponse"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "mailRegEx"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "required"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Punctuation:  ")"
Text:  "<newline><newline>            "
Keyword:  "Dim"
Text:  " "
Name.Variable:  "emailAddress"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Name:  "ReflectionHelper"
Punctuation:  "."
Name:  "Properties"
Punctuation:  "."
Name:  "GetProperty"
Punctuation:  "("
Keyword:  "Of"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")("
Keyword:  "Me"
Punctuation:  ","
Text:  " "
Name:  "propertyName"
Punctuation:  ")"
Text:  "<newline><newline>            "
Keyword:  "If"
Text:  " "
Name:  "emailAddress"
Text:  " "
Operator.Word:  "Is"
Text:  " "
Keyword:  "Nothing"
Text:  " "
Operator.Word:  "OrElse"
Text:  " "
Name:  "emailAddress"
Punctuation:  "."
Name:  "Length"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Name:  "required"
Text:  " "
Keyword:  "Then"
Text:  " "
Name:  "retVal"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Keyword:  "New"
Text:  " "
Name:  "KeyValuePair"
Punctuation:  "("
Keyword:  "Of"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")("
Name:  "propertyName"
Punctuation:  ","
Text:  " "
Name:  "NullEmailAddressError"
Punctuation:  "))"
Text:  "<newline>            "
Keyword:  "Else"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Punctuation:  "("
Keyword:  "Not"
Text:  " "
Name:  "Regex"
Punctuation:  "."
Name:  "IsMatch"
Punctuation:  "("
Name:  "emailAddress"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  "))"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                    "
Name:  "retVal"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Keyword:  "New"
Text:  " "
Name:  "KeyValuePair"
Punctuation:  "("
Keyword:  "Of"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")("
Name:  "propertyName"
Punctuation:  ","
Text:  " "
Name:  "InvalidEmailAddressError"
Punctuation:  "))"
Text:  "<newline>                "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline><newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Validates a string array of Email Address property."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"propertyName\">The name of the property to validate.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"retVal\">The validation response object.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"mailRegEx\">The regular expression pattern to use for validation.</param>"
Text:  "<newline>        "
Keyword:  "Private"
Text:  " "
Keyword:  "Overloads"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "ValidateAddresses"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "propertyName"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByRef"
Text:  " "
Name:  "retVal"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "ValidationResponse"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "mailRegEx"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "ValidateAddresses"
Punctuation:  "("
Name:  "propertyName"
Punctuation:  ","
Text:  " "
Name:  "retVal"
Punctuation:  ","
Text:  " "
Name:  "mailRegEx"
Punctuation:  ","
Text:  " "
Keyword:  "False"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>        "
Comment.Single:  "''' <summary>"
Text:  "<newline>        "
Comment.Single:  "''' Validates a string array of Email Address property."
Text:  "<newline>        "
Comment.Single:  "''' </summary>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"propertyName\">The name of the property to validate.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"retVal\">The validation response object.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"mailRegEx\">The regular expression pattern to use for validation.</param>"
Text:  "<newline>        "
Comment.Single:  "''' <param name=\"required\">Indicates if the address is required; False if not specified.</param>"
Text:  "<newline>        "
Keyword:  "Private"
Text:  " "
Keyword:  "Overloads"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "ValidateAddresses"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "propertyName"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByRef"
Text:  " "
Name:  "retVal"
Text:  " "
Operator.Word:  "As"
Text:  " "
Name:  "ValidationResponse"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "mailRegEx"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword:  "ByVal"
Text:  " "
Name:  "required"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Punctuation:  ")"
Text:  "<newline><newline>            "
Keyword:  "Dim"
Text:  " "
Name.Variable:  "emailAddresses"
Punctuation:  "()"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "String"
Text:  " "
Operator:  "="
Text:  " "
Name:  "ReflectionHelper"
Punctuation:  "."
Name:  "Properties"
Punctuation:  "."
Name:  "GetProperty"
Punctuation:  "("
Keyword:  "Of"
Text:  " "
Keyword.Type:  "String"
Punctuation:  "())("
Keyword:  "Me"
Punctuation:  ","
Text:  " "
Name:  "propertyName"
Punctuation:  ")"
Text:  "<newline><newline>            "
Keyword:  "If"
Text:  " "
Name:  "emailAddresses"
Text:  " "
Operator.Word:  "Is"
Text:  " "
Keyword:  "Nothing"
Text:  " "
Operator.Word:  "OrElse"
Text:  " "
Name:  "emailAddresses"
Punctuation:  "."
Name:  "Length"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Name:  "required"
Text:  " "
Keyword:  "Then"
Text:  " "
Name:  "retVal"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Keyword:  "New"
Text:  " "
Name:  "KeyValuePair"
Punctuation:  "("
Keyword:  "Of"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")("
Name:  "propertyName"
Punctuation:  ","
Text:  " "
Keyword.Type:  "String"
Punctuation:  "."
Name:  "Format"
Punctuation:  "("
Name:  "CultureInfo"
Punctuation:  "."
Name:  "CurrentCulture"
Punctuation:  ","
Text:  " "
Name:  "NullEmailAddressError"
Punctuation:  ")))"
Text:  "<newline>            "
Keyword:  "Else"
Text:  "<newline>                "
Keyword:  "For"
Text:  " "
Name:  "i"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Integer"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Keyword:  "To"
Text:  " "
Name:  "emailAddresses"
Punctuation:  "."
Name:  "Length"
Text:  " "
Operator:  "-"
Text:  " "
Literal.Number.Integer:  "1"
Text:  "<newline>                    "
Keyword:  "If"
Text:  " "
Punctuation:  "("
Keyword:  "Not"
Text:  " "
Name:  "Regex"
Punctuation:  "."
Name:  "IsMatch"
Punctuation:  "("
Name:  "emailAddresses"
Punctuation:  "("
Name:  "i"
Punctuation:  "),"
Text:  " "
Name:  "mailRegEx"
Punctuation:  "))"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                        "
Name:  "retVal"
Punctuation:  "."
Name:  "Add"
Punctuation:  "("
Keyword:  "New"
Text:  " "
Name:  "KeyValuePair"
Punctuation:  "("
Keyword:  "Of"
Text:  " "
Keyword.Type:  "String"
Punctuation:  ","
Text:  " "
Keyword.Type:  "String"
Punctuation:  ")("
Name:  "propertyName"
Punctuation:  ","
Text:  " "
Keyword.Type:  "String"
Punctuation:  "."
Name:  "Format"
Punctuation:  "("
Name:  "CultureInfo"
Punctuation:  "."
Name:  "CurrentCulture"
Punctuation:  ","
Text:  " "
Name:  "InvalidEmailAddressErrorWithAddress"
Punctuation:  ","
Text:  " "
Name:  "emailAddresses"
Punctuation:  "("
Name:  "i"
Punctuation:  "))))"
Text:  "<newline>                    "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>                "
Keyword:  "Next"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline><newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>"
Comment.Preproc:  "#Region \" IDisposable Implementation \"<newline>"
Text:  "<newline>        "
Keyword:  "Protected"
Text:  " "
Keyword:  "Overridable"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "Dispose"
Punctuation:  "("
Keyword:  "ByVal"
Text:  " "
Name:  "disposing"
Text:  " "
Operator.Word:  "As"
Text:  " "
Keyword.Type:  "Boolean"
Punctuation:  ")"
Text:  "<newline>            "
Keyword:  "If"
Text:  " "
Keyword:  "Not"
Text:  " "
Keyword:  "Me"
Punctuation:  "."
Name:  "disposedValue"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                "
Keyword:  "If"
Text:  " "
Name:  "disposing"
Text:  " "
Keyword:  "Then"
Text:  "<newline>                    "
Name:  "_message"
Punctuation:  "."
Name:  "Dispose"
Punctuation:  "()"
Text:  "<newline>                "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>                "
Name:  "_mailClient"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Nothing"
Text:  "<newline>                "
Name:  "_message"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "Nothing"
Text:  "<newline>            "
Keyword:  "End"
Text:  " "
Keyword:  "If"
Text:  "<newline>            "
Keyword:  "Me"
Punctuation:  "."
Name:  "disposedValue"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "True"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>        "
Keyword:  "Public"
Text:  " "
Keyword:  "Sub"
Text:  " "
Name.Function:  "Dispose"
Punctuation:  "()"
Text:  " "
Keyword:  "Implements"
Text:  " "
Name:  "IDisposable"
Punctuation:  "."
Name:  "Dispose"
Text:  "<newline>            "
Comment.Single:  "' Do not change this code.  Put cleanup code in Dispose(ByVal disposing As Boolean) above."
Text:  "<newline>            "
Name:  "Dispose"
Punctuation:  "("
Keyword:  "True"
Punctuation:  ")"
Text:  "<newline>            "
Name:  "GC"
Punctuation:  "."
Name:  "SuppressFinalize"
Punctuation:  "("
Keyword:  "Me"
Punctuation:  ")"
Text:  "<newline>        "
Keyword:  "End"
Text:  " "
Keyword:  "Sub"
Text:  "<newline><newline>"
Comment.Preproc:  "#End Region"
Text:  "<newline><newline>    "
Keyword:  "End"
Text:  " "
Keyword:  "Class"
Text:  "<newline><newline>"
Keyword:  "End"
Text:  " "
Keyword:  "Namespace"
Text:  "<newline>"
