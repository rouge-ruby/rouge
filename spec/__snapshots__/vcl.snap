Comment.Single:  "# Define a function that converts a string to lower-case in-place."
Text:  "<newline>"
Comment.Preproc:  "C{"
Text:  "<newline>    "
Comment.Preproc:  "#include"
Text:  " "
Comment.PreprocFile:  "<ctype.h>"
Comment.Preproc:  "<newline>"
Text:  "<newline>    "
Keyword:  "static"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Function:  "strtolower"
Punctuation:  "("
Keyword.Type:  "char"
Text:  " "
Operator:  "*"
Name:  "c"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Keyword:  "for"
Text:  " "
Punctuation:  "(;"
Text:  " "
Operator:  "*"
Name:  "c"
Punctuation:  ";"
Text:  " "
Name:  "c"
Operator:  "++"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>            "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Name:  "isupper"
Punctuation:  "("
Operator:  "*"
Name:  "c"
Punctuation:  "))"
Text:  " "
Punctuation:  "{"
Text:  "<newline>                "
Operator:  "*"
Name:  "c"
Text:  " "
Operator:  "="
Text:  " "
Name:  "tolower"
Punctuation:  "("
Operator:  "*"
Name:  "c"
Punctuation:  ");"
Text:  "<newline>            "
Punctuation:  "}"
Text:  "<newline>        "
Punctuation:  "}"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline>"
Comment.Preproc:  "}C"
Text:  "<newline><newline>"
Keyword:  "sub"
Text:  " "
Name.Function:  "vcl_recv"
Text:  " "
Punctuation:  "{"
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Name.Variable:  "req.http.host"
Text:  " "
Operator:  "~"
Text:  " "
Literal.String.Double:  "\"[A-Z]\""
Text:  " "
Operator:  "||"
Text:  " "
Name.Variable:  "req.url"
Text:  " "
Operator:  "~"
Text:  " "
Literal.String.Double:  "\"[A-Z]\""
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Comment.Single:  "# Convert host and path to lowercase in-place (dummy C code from Varnish 3 instead of builtin std.tolower function)"
Text:  "<newline>        "
Comment.Preproc:  "C{"
Text:  "<newline>            "
Comment.Multiline:  "/* foo */"
Text:  "<newline>            "
Name:  "strtolower"
Punctuation:  "("
Name:  "VRT_GetHdr"
Punctuation:  "("
Name:  "sp"
Punctuation:  ","
Text:  " "
Name:  "HDR_REQ"
Punctuation:  ","
Text:  " "
Literal.String:  "\""
Literal.String.Escape:  "\\005"
Literal.String:  "host:\""
Punctuation:  "));"
Text:  "<newline>            "
Name:  "strtolower"
Punctuation:  "(("
Keyword.Type:  "char"
Text:  " "
Operator:  "*"
Punctuation:  ")"
Name:  "VRT_r_req_url"
Punctuation:  "("
Name:  "sp"
Punctuation:  "));"
Text:  "<newline>        "
Comment.Preproc:  "}C"
Text:  "<newline>        "
Comment.Single:  "# and redirect based on the fake HTTP code 701 and set new URL as reason"
Text:  "<newline>        "
Name.Function:  "return"
Text:  " "
Punctuation:  "("
Name.Function:  "synth"
Punctuation:  "("
Literal.Number.Integer:  "701"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"http://\""
Text:  " "
Operator:  "+"
Text:  " "
Name.Variable:  "req.http.host"
Text:  " "
Operator:  "+"
Text:  " "
Name.Variable:  "req.url"
Punctuation:  "));"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline><newline>    "
Comment.Single:  "# Fall-through to default"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Keyword:  "sub"
Text:  " "
Name.Function:  "vcl_synth"
Text:  " "
Punctuation:  "{"
Text:  "<newline>    "
Comment.Single:  "# Check for redirects - redirects are performed using: synth(701, \"http://target-url/\")"
Text:  "<newline>    "
Comment.Single:  "# Thus we piggyback the redirect target in the error response variable."
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Literal.Number.Integer:  "701"
Text:  " "
Operator:  "=="
Text:  " "
Name.Variable:  "resp.status"
Punctuation:  ")"
Text:  " "
Punctuation:  "{"
Text:  "<newline>        "
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.location"
Text:  " "
Operator:  "="
Text:  " "
Name.Variable:  "resp.reason"
Punctuation:  ";"
Text:  "<newline>        "
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.status"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "301"
Punctuation:  ";"
Text:  "<newline>        "
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.reason"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"Moved permanently\""
Punctuation:  ";"
Text:  "<newline>        "
Name.Function:  "return"
Punctuation:  "("
Text:  "deliver"
Punctuation:  ");"
Text:  "<newline>    "
Punctuation:  "}"
Text:  "<newline><newline>    "
Comment.Single:  "# Fall-through to default"
Text:  "<newline>"
Punctuation:  "}"
Text:  "<newline><newline>"
Comment.Single:  "#### Fastly's dialect ####"
Text:  "<newline><newline>"
Comment.Single:  "# reference: https://docs.fastly.com/vcl/"
Text:  "<newline><newline>"
Comment.Single:  "# local variables"
Text:  "<newline>"
Keyword:  "declare"
Text:  " "
Keyword:  "local"
Text:  " "
Name.Variable:  "var.ip1"
Text:  " "
Keyword:  "IP"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "var.ip1"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Double:  "\"192.0.2.0\""
Punctuation:  ";"
Text:  "<newline><newline>"
Comment.Single:  "# string literals"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "var.s"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "{xyz\"Hello, world!\"xyz}"
Punctuation:  ";"
Text:  " "
Comment.Single:  "# heredoc-style"
Text:  "<newline><newline>"
Comment.Single:  "# more literals"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-Str"
Text:  " "
Operator:  "="
Text:  " "
Literal.String.Single:  "{\"Hello, world!\"}"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-Rtime"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Other:  "10ms"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-RTime"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Other:  "2.5h"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-Int"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0xFF"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-Float"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "1.2e3"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-Float"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "1e2"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-HexFloat"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "0xA.Bp3"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "set"
Text:  " "
Name.Variable:  "resp.http.X-HexFloat"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Float:  "0xAp3"
Punctuation:  ";"
Text:  "<newline>"
