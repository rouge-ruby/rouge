Text:  "<newline>"
Comment.Multiline:  "#*<newline> There is multi-line comment.<newline> see this text because the Velocity Templating Engine will ignore it.<newline>*#"
Text:  "<newline>"
Name.Tag:  "<h3>"
Text:  "List"
Name.Tag:  "</h3>"
Text:  "<newline>"
Comment.Single:  "## This is a single line comment."
Text:  "<newline>"
Punctuation:  "#"
Name.Function:  "if"
Punctuation:  "("
Text:  " "
Punctuation:  "$"
Name.Variable:  "allProducts"
Text:  " "
Punctuation:  ")"
Text:  "<newline>"
Name.Tag:  "<p>"
Text:  "not found."
Name.Tag:  "</p>"
Text:  "<newline>"
Punctuation:  "#"
Name.Function:  "else"
Text:  "<newline><newline>"
Name.Tag:  "<table>"
Text:  "<newline>  "
Name.Tag:  "<tbody>"
Text:  "<newline>    "
Punctuation:  "#"
Name.Function:  "foreach"
Punctuation:  "("
Text:  " "
Punctuation:  "$"
Name.Variable:  "product"
Text:  " "
Operator:  "in"
Text:  " "
Punctuation:  "$"
Name.Variable:  "allProducts"
Text:  " "
Punctuation:  ")"
Text:  "<newline>    "
Name.Tag:  "<tr"
Text:  " "
Name.Attribute:  "id="
Literal.String:  "\"product-"
Punctuation:  "$"
Name.Variable:  "product"
Punctuation:  "."
Name.Variable:  "Id"
Literal.String:  "\""
Text:  " "
Name.Attribute:  "data-url="
Literal.String:  "\""
Punctuation:  "#"
Name.Function:  "SURL"
Punctuation:  "("
Literal.String.Double:  "\"$!product.Slug\""
Punctuation:  ")"
Literal.String:  "\""
Name.Tag:  ">"
Text:  "<newline>      "
Name.Tag:  "<td>"
Punctuation:  "$"
Name.Variable:  "product"
Punctuation:  "."
Name.Variable:  "Title"
Name.Tag:  "</td>"
Text:  "<newline>    "
Name.Tag:  "</tr>"
Text:  "<newline>    "
Punctuation:  "#"
Name.Function:  "end"
Text:  "<newline>  "
Name.Tag:  "</tbody>"
Text:  "<newline>"
Name.Tag:  "</table>"
Text:  "<newline>"
Punctuation:  "#"
Name.Function:  "end"
Text:  "<newline>"
Punctuation:  "#"
Name.Function:  "set"
Punctuation:  "("
Text:  " "
Punctuation:  "$"
Name.Variable:  "monkey"
Punctuation:  "."
Name.Variable:  "Say"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "["
Literal.String.Double:  "\"Not\""
Punctuation:  ","
Text:  " "
Punctuation:  "$"
Name.Variable:  "my"
Punctuation:  ","
Text:  " "
Literal.String.Double:  "\"fault\""
Punctuation:  ","
Text:  " "
Literal.Number.Integer:  "10"
Punctuation:  ","
Text:  " "
Keyword.Constant:  "false"
Punctuation:  ","
Text:  " "
Keyword.Constant:  "null"
Punctuation:  "]"
Text:  " "
Punctuation:  ")"
Text:  " "
Comment.Single:  "## ArrayList"
Text:  "<newline>"
Punctuation:  "#"
Name.Function:  "set"
Punctuation:  "("
Text:  " "
Punctuation:  "$"
Name.Variable:  "result"
Text:  " "
Operator:  "="
Text:  " "
Punctuation:  "$"
Name.Variable:  "foo"
Punctuation:  "($"
Name.Variable:  "bar"
Punctuation:  "[$"
Name.Variable:  "baz"
Punctuation:  "])"
Text:  " "
Punctuation:  ")"
Text:  "<newline>"
Punctuation:  "${"
Name.Variable:  "mudSlinger"
Punctuation:  "}"
Text:  "<newline>"
Punctuation:  "${"
Name.Variable:  "customer"
Punctuation:  "."
Name.Variable:  "Address"
Punctuation:  "}"
Text:  "<newline>"
Punctuation:  "${"
Name.Variable:  "purchase"
Punctuation:  "."
Name.Variable:  "getTotal"
Punctuation:  "("
Keyword.Constant:  "true"
Punctuation:  ")}"
Text:  "<newline>"
Punctuation:  "$"
Name.Variable:  "title"
Punctuation:  "."
Name.Variable:  "set"
Punctuation:  "("
Text:  " "
Literal.String.Double:  "\"Homage to Catalonia\""
Text:  " "
Punctuation:  ")"
Text:  "<newline>"
