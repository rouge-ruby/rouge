Comment.Multiline:  "/**<newline> * Verilog Lexer<newline> */"
Text:  "<newline>"
Keyword.Type:  "class"
Text:  " "
Name:  "C"
Text:  " "
Punctuation:  "#("
Keyword:  "parameter"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "N"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword:  "extends"
Text:  " "
Name:  "BaseClass"
Punctuation:  ";"
Text:  "<newline>  "
Keyword.Type:  "int"
Text:  " "
Name:  "x"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "protected"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "data"
Punctuation:  ";"
Text:  "<newline><newline>  "
Keyword:  "constraint"
Text:  " "
Name:  "cq"
Text:  " "
Operator:  "{"
Text:  " "
Name:  "message"
Punctuation:  "."
Name:  "data"
Text:  " "
Keyword:  "inside"
Text:  " "
Operator:  "{"
Punctuation:  "["
Literal.Number.Integer:  "0"
Operator:  ":"
Literal.Number.Integer:  "8"
Punctuation:  "]"
Operator:  "}"
Punctuation:  ";"
Text:  " "
Operator:  "}"
Text:  "<newline><newline>  "
Keyword:  "task"
Text:  " "
Name:  "set"
Text:  " "
Punctuation:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "i"
Punctuation:  ");"
Text:  "<newline>    "
Name:  "x"
Text:  " "
Operator:  "="
Text:  " "
Name:  "i"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "endtask"
Text:  "<newline><newline>  "
Keyword:  "function"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "get"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "return"
Text:  " "
Name:  "x"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "endfunction"
Text:  "<newline><newline>"
Keyword:  "endclass"
Text:  "<newline><newline>"
Comment.Multiline:  "/*<newline> Register module<newline> */"
Text:  "<newline>"
Keyword.Type:  "class"
Text:  " "
Name:  "Register"
Text:  " "
Punctuation:  "#("
Keyword:  "parameter"
Text:  " "
Keyword:  "type"
Text:  " "
Name:  "T"
Text:  " "
Operator:  "="
Text:  " "
Keyword.Type:  "int"
Punctuation:  ");"
Text:  "<newline>  "
Name:  "T"
Text:  " "
Name:  "data"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "endclass"
Text:  "<newline><newline>"
Keyword.Type:  "virtual"
Text:  " "
Keyword.Type:  "class"
Text:  " "
Name:  "Register"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "endclass"
Text:  "<newline><newline>"
Keyword:  "typedef"
Text:  " "
Keyword.Type:  "struct"
Text:  " "
Operator:  "{"
Text:  "<newline>  "
Keyword:  "rand"
Text:  " "
Keyword.Type:  "bit"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "10"
Operator:  ":"
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  " "
Name:  "ID"
Punctuation:  ";"
Text:  "      "
Comment.Single:  "// 11-bit identifier"
Text:  "<newline>       "
Keyword.Type:  "bit"
Text:  "  "
Punctuation:  "["
Literal.Number.Integer:  "1"
Operator:  ":"
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  " "
Name:  "rsvd"
Punctuation:  ";"
Text:  "    "
Comment.Single:  "// \"reserved for expansion\" bits"
Text:  "<newline>  "
Keyword:  "rand"
Text:  " "
Keyword.Type:  "byte"
Text:  "       "
Name:  "data"
Punctuation:  "[];"
Text:  "  "
Comment.Single:  "// data payload"
Text:  "<newline>"
Operator:  "}"
Text:  " "
Name:  "message_t"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword.Type:  "class"
Text:  " "
Name:  "CAN_Message"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "rand"
Text:  " "
Name:  "message_t"
Text:  " "
Name:  "message"
Punctuation:  ";"
Text:  "<newline><newline>  "
Keyword:  "task"
Text:  " "
Name:  "getbits"
Punctuation:  "("
Keyword.Type:  "ref"
Text:  " "
Keyword.Type:  "bit"
Text:  " "
Name:  "data_o"
Punctuation:  ","
Text:  " "
Keyword.Type:  "input"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "delay"
Operator:  "="
Literal.Number.Integer:  "1"
Punctuation:  ");"
Text:  "<newline>    "
Keyword.Type:  "bit"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "17"
Operator:  ":"
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  " "
Name:  "header"
Punctuation:  ";"
Text:  "<newline>    "
Keyword.Type:  "bit"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "14"
Operator:  ":"
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  " "
Name:  "tail"
Punctuation:  ";"
Text:  "<newline>    "
Name:  "header"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "{"
Name:  "message"
Punctuation:  "."
Name:  "ID"
Punctuation:  ","
Name:  "message"
Punctuation:  "."
Name:  "RTR"
Punctuation:  ","
Name:  "message"
Punctuation:  "."
Name:  "rsvd"
Punctuation:  ","
Name:  "message"
Punctuation:  "."
Name:  "DLC"
Operator:  "}"
Punctuation:  ";"
Text:  "<newline>    "
Name:  "tail"
Text:  " "
Operator:  "="
Text:  " "
Name:  "message"
Punctuation:  "."
Name:  "CRC"
Punctuation:  ";"
Text:  "<newline>    "
Punctuation:  "$"
Name.Builtin:  "display"
Punctuation:  "("
Literal.String:  "\"tail=%0b\""
Punctuation:  ","
Name:  "tail"
Punctuation:  ");"
Text:  "<newline>    "
Comment.Single:  "//step through message and output each bit (from left to right)"
Text:  "<newline>    "
Keyword:  "foreach"
Punctuation:  "("
Name:  "header"
Punctuation:  "["
Name:  "i"
Punctuation:  "])"
Text:  " "
Punctuation:  "#"
Name:  "delay"
Text:  " "
Name:  "data_o"
Text:  " "
Operator:  "="
Text:  " "
Name:  "header"
Punctuation:  "["
Name:  "i"
Punctuation:  "];"
Text:  "<newline>    "
Keyword:  "foreach"
Punctuation:  "("
Name:  "message"
Punctuation:  "."
Name:  "data"
Punctuation:  "["
Name:  "i"
Punctuation:  ","
Name:  "j"
Punctuation:  "])"
Text:  " "
Punctuation:  "#"
Name:  "delay"
Text:  " "
Name:  "data_o"
Text:  " "
Operator:  "="
Text:  " "
Name:  "message"
Punctuation:  "."
Name:  "data"
Punctuation:  "["
Name:  "i"
Punctuation:  "]["
Name:  "j"
Punctuation:  "];"
Text:  "<newline>    "
Keyword:  "foreach"
Punctuation:  "("
Name:  "tail"
Punctuation:  "["
Name:  "i"
Punctuation:  "])"
Text:  " "
Punctuation:  "#"
Name:  "delay"
Text:  " "
Name:  "data_o"
Text:  " "
Operator:  "="
Text:  " "
Name:  "tail"
Punctuation:  "["
Name:  "i"
Punctuation:  "];"
Text:  "<newline>  "
Keyword:  "endtask"
Text:  "<newline>"
Keyword:  "endclass"
Text:  "<newline><newline>"
Keyword.Type:  "enum"
Text:  " "
Operator:  "{"
Name:  "Red"
Punctuation:  ","
Text:  " "
Name:  "Green"
Punctuation:  ","
Text:  " "
Name:  "Blue"
Operator:  "}"
Text:  " "
Name:  "Colour"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "covergroup"
Text:  " "
Name:  "cg_Colour"
Text:  " "
Operator:  "@"
Punctuation:  "("
Keyword.Type:  "posedge"
Text:  " "
Name:  "Clock"
Punctuation:  ");"
Text:  "<newline>  "
Keyword:  "coverpoint"
Text:  " "
Name:  "Colour"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "endgroup"
Text:  "<newline><newline>"
Name:  "cg_Colour"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "new"
Text:  " "
Name:  "cg_inst"
Punctuation:  ";"
Text:  "<newline><newline>"
Keyword:  "covergroup"
Text:  " "
Name:  "cg_Short"
Text:  " "
Operator:  "@"
Punctuation:  "("
Keyword.Type:  "posedge"
Text:  " "
Name:  "Clock"
Punctuation:  ");"
Text:  "<newline>  "
Keyword:  "coverpoint"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "{"
Text:  "<newline>    "
Keyword:  "bins"
Text:  " "
Name:  "zero"
Text:  "     "
Operator:  "="
Text:  " "
Operator:  "{"
Text:  " "
Literal.Number.Integer:  "0"
Text:  " "
Operator:  "}"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "bins"
Text:  " "
Name:  "small"
Text:  "    "
Operator:  "="
Text:  " "
Operator:  "{"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "1"
Operator:  ":"
Literal.Number.Integer:  "100"
Punctuation:  "]"
Text:  " "
Operator:  "}"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "bins"
Text:  " "
Name:  "hunds"
Punctuation:  "["
Literal.Number.Integer:  "3"
Punctuation:  "]"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "{"
Text:  " "
Literal.Number.Integer:  "200"
Punctuation:  ","
Literal.Number.Integer:  "300"
Punctuation:  ","
Literal.Number.Integer:  "400"
Punctuation:  ","
Literal.Number.Integer:  "500"
Punctuation:  ","
Literal.Number.Integer:  "600"
Punctuation:  ","
Literal.Number.Integer:  "700"
Punctuation:  ","
Literal.Number.Integer:  "800"
Punctuation:  ","
Literal.Number.Integer:  "900"
Text:  " "
Operator:  "}"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "bins"
Text:  " "
Name:  "large"
Text:  "    "
Operator:  "="
Text:  " "
Operator:  "{"
Text:  " "
Punctuation:  "["
Literal.Number.Integer:  "1000"
Operator:  ":"
Punctuation:  "$]"
Text:  " "
Operator:  "}"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "bins"
Text:  " "
Name:  "others"
Punctuation:  "[]"
Text:  " "
Operator:  "="
Text:  " "
Keyword:  "default"
Punctuation:  ";"
Text:  "<newline>  "
Operator:  "}"
Punctuation:  ";"
Text:  "<newline>"
Keyword:  "endgroup"
Text:  "<newline><newline>"
Keyword:  "module"
Text:  " "
Name:  "Bus"
Punctuation:  "("
Keyword.Type:  "input"
Text:  " "
Name:  "In1"
Punctuation:  ","
Text:  " "
Keyword.Type:  "output"
Text:  " "
Name:  "Out1"
Punctuation:  ");"
Text:  "<newline>  "
Keyword:  "import"
Text:  " "
Literal.String:  "\"DPI\""
Text:  " "
Keyword:  "function"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name:  "slave_write"
Punctuation:  "("
Keyword.Type:  "input"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "address"
Punctuation:  ","
Text:  "<newline>                                         "
Keyword.Type:  "input"
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "data"
Punctuation:  ");"
Text:  "<newline>  "
Keyword:  "export"
Text:  " "
Literal.String:  "\"DPI\""
Text:  " "
Keyword:  "function"
Text:  " "
Name.Builtin:  "write"
Punctuation:  ";"
Text:  "  "
Comment.Single:  "// Note \u2013 not a function prototype"
Text:  "<newline><newline>  "
Comment.Single:  "// This SystemVerilog function could be called from C"
Text:  "<newline>  "
Keyword:  "function"
Text:  " "
Keyword.Type:  "void"
Text:  " "
Name.Builtin:  "write"
Punctuation:  "("
Keyword.Type:  "int"
Text:  " "
Name:  "address"
Punctuation:  ","
Text:  " "
Keyword.Type:  "int"
Text:  " "
Name:  "data"
Punctuation:  ");"
Text:  "<newline>    "
Comment.Single:  "// Call C function"
Text:  "<newline>    "
Name:  "slave_write"
Punctuation:  "("
Name:  "address"
Punctuation:  ","
Text:  " "
Name:  "data"
Punctuation:  ");"
Text:  " "
Comment.Single:  "// Arguments passed by copy"
Text:  "<newline>  "
Keyword:  "endfunction"
Text:  "<newline>  "
Punctuation:  "..."
Text:  "<newline>"
Keyword:  "endmodule"
Text:  "<newline><newline>"
Comment.Single:  "// Verilog code for AND-OR-INVERT gate"
Text:  "<newline>"
Keyword:  "module"
Text:  " "
Name:  "AOI"
Text:  " "
Punctuation:  "("
Keyword.Type:  "input"
Text:  " "
Name:  "A"
Punctuation:  ","
Text:  " "
Name:  "B"
Punctuation:  ","
Text:  " "
Name:  "C"
Punctuation:  ","
Text:  " "
Name:  "D"
Punctuation:  ","
Text:  " "
Keyword.Type:  "output"
Text:  " "
Name:  "F"
Punctuation:  ");"
Text:  "<newline>  "
Keyword:  "assign"
Text:  " "
Name:  "F"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "~"
Punctuation:  "(("
Name:  "A"
Text:  " "
Operator:  "&"
Text:  " "
Name:  "B"
Punctuation:  ")"
Text:  " "
Operator:  "|"
Text:  " "
Punctuation:  "("
Name:  "C"
Text:  " "
Operator:  "&"
Text:  " "
Name:  "D"
Punctuation:  "));"
Text:  "<newline>  "
Keyword.Type:  "reg"
Text:  " "
Name:  "f"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "always"
Text:  " "
Operator:  "@"
Punctuation:  "("
Name:  "sel"
Text:  " "
Keyword.Type:  "or"
Text:  " "
Name:  "a"
Text:  " "
Keyword.Type:  "or"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  "<newline>  "
Keyword.Type:  "reg"
Text:  " "
Name:  "f"
Punctuation:  ","
Text:  " "
Name:  "g"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// a new reg variable, g"
Text:  "<newline>  "
Keyword:  "always"
Text:  " "
Operator:  "@"
Punctuation:  "("
Name:  "sel"
Text:  " "
Keyword.Type:  "or"
Text:  " "
Name:  "a"
Text:  " "
Keyword.Type:  "or"
Text:  " "
Name:  "b"
Punctuation:  ")"
Text:  "<newline>  "
Keyword:  "begin"
Text:  "<newline>    "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Name:  "sel"
Text:  " "
Operator:  "=="
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  "<newline>      "
Keyword:  "begin"
Text:  "<newline>        "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Name:  "a"
Punctuation:  ";"
Text:  "<newline>       "
Name:  "g"
Text:  " "
Operator:  "="
Text:  " "
Operator:  "~"
Name:  "a"
Punctuation:  ";"
Text:  "<newline>      "
Keyword:  "end"
Text:  "<newline>    "
Keyword:  "else"
Text:  "<newline>      "
Keyword:  "begin"
Text:  "<newline>        "
Name:  "f"
Text:  " "
Operator:  "="
Text:  " "
Name:  "b"
Punctuation:  ";"
Text:  "<newline>        "
Name:  "g"
Text:  " "
Operator:  "="
Text:  " "
Name:  "a"
Text:  " "
Operator:  "&"
Text:  " "
Name:  "b"
Punctuation:  ";"
Text:  "<newline>      "
Keyword:  "end"
Text:  "<newline><newline>    "
Keyword:  "casez"
Punctuation:  "("
Name:  "A"
Punctuation:  ")"
Text:  "<newline>      "
Literal.Number.Bin:  "4'b1???"
Operator:  ":"
Text:  " "
Name:  "Y"
Operator:  "<="
Literal.Number.Bin:  "4'b1000"
Punctuation:  ";"
Text:  "<newline>      "
Literal.Number.Bin:  "4'b01??"
Operator:  ":"
Text:  " "
Name:  "Y"
Operator:  "<="
Literal.Number.Bin:  "4'b0100"
Punctuation:  ";"
Text:  "<newline>      "
Literal.Number.Bin:  "4'b001?"
Operator:  ":"
Text:  " "
Name:  "Y"
Operator:  "<="
Literal.Number.Bin:  "4'b0010"
Punctuation:  ";"
Text:  "<newline>      "
Literal.Number.Bin:  "4'b0001"
Operator:  ":"
Text:  " "
Name:  "Y"
Operator:  "<="
Literal.Number.Bin:  "4'b0001"
Punctuation:  ";"
Text:  "<newline>      "
Name.Label:  "default:"
Text:  " "
Name:  "Y"
Operator:  "<="
Literal.Number.Bin:  "4'b0000"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "endcase"
Text:  "<newline><newline>    "
Keyword:  "for"
Text:  " "
Punctuation:  "("
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "0"
Punctuation:  ";"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "<"
Text:  " "
Literal.Number.Integer:  "16"
Punctuation:  ";"
Text:  " "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Name:  "i"
Text:  " "
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Text:  "<newline>      "
Punctuation:  "$"
Name.Builtin:  "display"
Text:  " "
Punctuation:  "("
Literal.String:  "\"Current value of i is %d\""
Punctuation:  ","
Text:  " "
Name:  "i"
Punctuation:  ");"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline><newline>    "
Keyword.Type:  "repeat"
Text:  " "
Punctuation:  "("
Literal.Number.Integer:  "16"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Text:  "<newline>      "
Punctuation:  "$"
Name.Builtin:  "display"
Text:  " "
Punctuation:  "("
Literal.String:  "\"Current value of i is %d\""
Punctuation:  ","
Text:  " "
Name:  "i"
Punctuation:  ");"
Text:  "<newline>      "
Name:  "i"
Text:  " "
Operator:  "="
Text:  " "
Name:  "i"
Text:  " "
Operator:  "+"
Text:  " "
Literal.Number.Integer:  "1"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline><newline>  "
Keyword:  "parameter"
Text:  " "
Name:  "ROWBITS"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "4"
Punctuation:  ";"
Text:  "<newline>  "
Keyword.Type:  "reg"
Text:  " "
Punctuation:  "["
Name:  "ROWBITS"
Operator:  "-"
Literal.Number.Integer:  "1"
Operator:  ":"
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  " "
Name:  "temp"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "always"
Text:  " "
Operator:  "@"
Punctuation:  "("
Keyword.Type:  "posedge"
Text:  " "
Name:  "sysclk"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Text:  "<newline>    "
Name:  "temp"
Text:  " "
Operator:  "<="
Text:  " "
Literal.Number.Bin:  "'0"
Punctuation:  ";"
Text:  " "
Comment.Single:  "// fill with 0"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline><newline>  "
Keyword:  "parameter"
Text:  " "
Name:  "ROWBITS"
Text:  " "
Operator:  "="
Text:  " "
Literal.Number.Integer:  "4"
Punctuation:  ";"
Text:  "<newline>  "
Keyword.Type:  "reg"
Text:  " "
Punctuation:  "["
Name:  "ROWBITS"
Operator:  "-"
Literal.Number.Integer:  "1"
Operator:  ":"
Literal.Number.Integer:  "0"
Punctuation:  "]"
Text:  " "
Name:  "temp"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "always"
Text:  " "
Operator:  "@"
Punctuation:  "("
Keyword.Type:  "posedge"
Text:  " "
Name:  "sysclk"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Text:  "<newline>    "
Keyword:  "for"
Text:  " "
Punctuation:  "("
Keyword.Type:  "integer"
Text:  " "
Name:  "c"
Operator:  "="
Literal.Number.Integer:  "0"
Punctuation:  ";"
Text:  " "
Name:  "c"
Operator:  "<"
Name:  "ROWBITS"
Punctuation:  ";"
Text:  " "
Name:  "c"
Operator:  "="
Name:  "c"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Operator:  ":"
Text:  " "
Name:  "test"
Text:  "<newline>      "
Name:  "temp"
Punctuation:  "["
Name:  "c"
Punctuation:  "]"
Text:  " "
Operator:  "<="
Text:  " "
Literal.Number.Bin:  "1'b0"
Punctuation:  ";"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline><newline>  "
Keyword:  "genvar"
Text:  " "
Name:  "index"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "generate"
Text:  "<newline>  "
Keyword:  "for"
Text:  " "
Punctuation:  "("
Name:  "index"
Operator:  "="
Literal.Number.Integer:  "0"
Punctuation:  ";"
Text:  " "
Name:  "index"
Text:  " "
Operator:  "<"
Text:  " "
Literal.Number.Integer:  "8"
Punctuation:  ";"
Text:  " "
Name:  "index"
Operator:  "="
Name:  "index"
Operator:  "+"
Literal.Number.Integer:  "1"
Punctuation:  ")"
Text:  "<newline>    "
Name.Label:  "begin:"
Text:  " "
Name:  "gen_code_label"
Text:  "<newline>      "
Name:  "BUFR"
Text:  " "
Name:  "BUFR_inst"
Text:  " "
Punctuation:  "("
Text:  "<newline>        "
Punctuation:  "."
Name:  "O"
Punctuation:  "("
Name:  "clk_o"
Punctuation:  "("
Name:  "index"
Punctuation:  ")),"
Text:  " "
Comment.Single:  "// Clock buffer ouptput"
Text:  "<newline>        "
Punctuation:  "."
Name:  "CE"
Punctuation:  "("
Name:  "ce"
Punctuation:  "),"
Text:  " "
Comment.Single:  "// Clock enable input"
Text:  "<newline>        "
Punctuation:  "."
Name:  "CLR"
Punctuation:  "("
Name:  "clear"
Punctuation:  "),"
Text:  " "
Comment.Single:  "// Clock buffer reset input"
Text:  "<newline>        "
Punctuation:  "."
Name:  "I"
Punctuation:  "("
Name:  "clk_i"
Punctuation:  "("
Name:  "index"
Punctuation:  "))"
Text:  " "
Comment.Single:  "// Clock buffer input"
Text:  "<newline>      "
Punctuation:  ");"
Text:  "<newline>    "
Keyword:  "end"
Text:  "<newline>  "
Keyword:  "endgenerate"
Text:  "<newline><newline>  "
Keyword:  "always_latch"
Text:  " "
Keyword:  "begin"
Text:  "<newline>  "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Name:  "enable"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Text:  "<newline>     "
Name:  "a_latch"
Text:  " "
Operator:  "="
Text:  " "
Name:  "something"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline>    "
Comment.Single:  "//No else clause so a_latch's value"
Text:  "<newline>    "
Comment.Single:  "//is not always defined, so it holds its value"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline><newline>  "
Keyword:  "always"
Text:  " "
Operator:  "@*"
Text:  " "
Keyword:  "begin"
Text:  "<newline>  "
Keyword:  "if"
Text:  " "
Punctuation:  "("
Name:  "enable"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Text:  "<newline>     "
Name:  "a_latch"
Text:  " "
Operator:  "="
Text:  " "
Name:  "something"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline>    "
Comment.Single:  "//No else clause so a_latch's value"
Text:  "<newline>    "
Comment.Single:  "//is not always defined, so it holds its value"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline><newline>  "
Keyword:  "always_ff"
Text:  " "
Operator:  "@"
Punctuation:  "("
Keyword.Type:  "posedge"
Text:  " "
Name:  "clk"
Punctuation:  ")"
Text:  " "
Keyword:  "begin"
Text:  "<newline>    "
Name:  "a"
Text:  " "
Operator:  "<="
Text:  " "
Name:  "b"
Punctuation:  ";"
Text:  "<newline>  "
Keyword:  "end"
Text:  "<newline><newline>"
Keyword:  "endmodule"
Text:  "<newline>"
Comment.Single:  "// end of Verilog code"
Text:  "<newline>"
Comment.Single:  "//"
Text:  "<newline>"
