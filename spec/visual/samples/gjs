import { concat, hash, uniqueId } from '@ember/helper';
import { on } from '@ember/modifier';
import { action } from '@ember/object';
import Component from '@glimmer/component';
import { ContainerQuery, width } from 'ember-container-query';
import { t } from 'ember-intl';
import { TrackedObject } from 'tracked-built-ins';

import autofocus from '../../modifiers/autofocus.js';
import styles from './form.css';
import UiFormCheckbox from './form/checkbox.gjs';
import UiFormInformation from './form/information.gjs';
import UiFormInput from './form/input.gjs';
import UiFormNumber from './form/number.gjs';
import UiFormSelect from './form/select.gjs';
import UiFormTextarea from './form/textarea.gjs';

export default class UiForm extends Component {
  data = new TrackedObject(this.args.data ?? {});

  @action async submitForm(event) {
    event.preventDefault();

    await this.args.onSubmit(this.data);
  }

  @action updateData({ key, value }) {
    this.data[key] = value;
  }

  <template>
    {{#let (uniqueId) as |formId|}}
      <form
        aria-describedby={{if @instructions (concat formId "-instructions")}}
        aria-labelledby={{if @title (concat formId "-title")}}
        class={{styles.form}}
        data-test-form={{if @title @title ""}}
        {{autofocus}}
        {{on "submit" this.submitForm}}
      >
        <UiFormInformation
          @formId={{formId}}
          @instructions={{@instructions}}
          @title={{@title}}
        />

        <ContainerQuery @features={{hash wide=(width min=480)}} as |CQ|>
          {{yield
            (hash
              Checkbox=(component
                UiFormCheckbox
                data=this.data
                isInline=true
                isWide=CQ.features.wide
                onUpdate=this.updateData
              )
              Input=(component
                UiFormInput
                data=this.data
                isWide=CQ.features.wide
                onUpdate=this.updateData
              )
              Number=(component
                UiFormNumber
                data=this.data
                isWide=CQ.features.wide
                onUpdate=this.updateData
              )
              Select=(component
                UiFormSelect
                data=this.data
                isWide=CQ.features.wide
                onUpdate=this.updateData
              )
              Textarea=(component
                UiFormTextarea
                data=this.data
                isWide=CQ.features.wide
                onUpdate=this.updateData
              )
            )
          }}
        </ContainerQuery>

        <div class={{styles.actions}}>
          <button
            class={{styles.submit-button}}
            data-test-button="Submit"
            type="submit"
          >
            {{t "components.ui.form.submit"}}
          </button>
        </div>
      </form>
    {{/let}}
  </template>
}
