# -*- coding: utf-8 -*- #
# frozen_string_literal: true

require 'yaml'

# YAML files are generated by Scilab when running scilab/keywords.sce
# rake command-line: rake predefs:scilab builtins:scilab keywords:scilab functions:scilab
SCILAB_BUILTINS_SYNTAX_FILE = File.join(__dir__, "scilab/builtins.yml")
SCILAB_BUILTINS_FILE = "./lib/rouge/lexers/scilab/builtins.rb"
SCILAB_KEYWORDS_SYNTAX_FILE = File.join(__dir__, "scilab/keywords.yml")
SCILAB_KEYWORDS_FILE = "./lib/rouge/lexers/scilab/keywords.rb"
SCILAB_PREDEFS_SYNTAX_FILE = File.join(__dir__, "scilab/predefs.yml")
SCILAB_PREDEFS_FILE = "./lib/rouge/lexers/scilab/predefs.rb"
SCILAB_FUNCTIONS_SYNTAX_FILE = File.join(__dir__, "scilab/functions.yml")
SCILAB_FUNCTIONS_FILE = "./lib/rouge/lexers/scilab/functions.rb"

namespace :builtins do
  task :scilab do
    generator = Rouge::Tasks::Builtins::Scilab.new

    input    = File.read(SCILAB_BUILTINS_SYNTAX_FILE)
    keywords = generator.extract_keywords(input)

    output = generator.render_output(keywords)

    File.write(SCILAB_BUILTINS_FILE, output)
  end
end

module Rouge
  module Tasks
    module Builtins
      class Scilab
        def extract_keywords(input)
          ::YAML.load(input)
        end

        def render_output(keywords, &b)
          return enum_for(:render_output, keywords).to_a.join("\n") unless b

          yield   "# -*- coding: utf-8 -*- #"
          yield   "# frozen_string_literal: true"
          yield   ""
          yield   "# DO NOT EDIT"
          yield   ""
          yield   "# This file is automatically generated by `rake builtins:scilab`."
          yield   "# See tasks/builtins/scilab.rake for more info."
          yield   ""
          yield   "module Rouge"
          yield   "  module Lexers"
          yield   "    def Scilab.builtins"
          yield   "      @builtins ||= Set.new #{keywords.inspect}"
          yield   "    end"
          yield   "  end"
          yield   "end"
        end
      end
    end
  end
end

namespace :keywords do
  task :scilab do
    generator = Rouge::Tasks::Keywords::Scilab.new

    input    = File.read(SCILAB_KEYWORDS_SYNTAX_FILE)
    keywords = generator.extract_keywords(input)

    output = generator.render_output(keywords)

    File.write(SCILAB_KEYWORDS_FILE, output)
  end
end

module Rouge
  module Tasks
    module Keywords
      class Scilab
        def extract_keywords(input)
          ::YAML.load(input)
        end

        def render_output(keywords, &b)
          return enum_for(:render_output, keywords).to_a.join("\n") unless b

          yield   "# -*- coding: utf-8 -*- #"
          yield   "# frozen_string_literal: true"
          yield   ""
          yield   "# DO NOT EDIT"
          yield   ""
          yield   "# This file is automatically generated by `rake keywords:scilab`."
          yield   "# See tasks/builtins/scilab.rake for more info."
          yield   ""
          yield   "module Rouge"
          yield   "  module Lexers"
          yield   "    def Scilab.keywords"
          yield   "      @keywords ||= Set.new #{keywords.inspect}"
          yield   "    end"
          yield   "  end"
          yield   "end"
        end
      end
    end
  end
end

namespace :predefs do
  task :scilab do
    generator = Rouge::Tasks::Predefs::Scilab.new

    input    = File.read(SCILAB_PREDEFS_SYNTAX_FILE)
    keywords = generator.extract_keywords(input)

    output = generator.render_output(keywords)

    File.write(SCILAB_PREDEFS_FILE, output)
  end
end

module Rouge
  module Tasks
    module Predefs
      class Scilab
        def extract_keywords(input)
          ::YAML.load(input)
        end

        def render_output(keywords, &b)
          return enum_for(:render_output, keywords).to_a.join("\n") unless b

          yield   "# -*- coding: utf-8 -*- #"
          yield   "# frozen_string_literal: true"
          yield   ""
          yield   "# DO NOT EDIT"
          yield   ""
          yield   "# This file is automatically generated by `rake predefs:scilab`."
          yield   "# See tasks/builtins/scilab.rake for more info."
          yield   ""
          yield   "module Rouge"
          yield   "  module Lexers"
          yield   "    def Scilab.predefs"
          yield   "      @predefs ||= Set.new #{keywords.inspect}"
          yield   "    end"
          yield   "  end"
          yield   "end"
        end
      end
    end
  end
end

namespace :functions do
  task :scilab do
    generator = Rouge::Tasks::Functions::Scilab.new

    input    = File.read(SCILAB_FUNCTIONS_SYNTAX_FILE)
    keywords = generator.extract_keywords(input)

    output = generator.render_output(keywords)

    File.write(SCILAB_FUNCTIONS_FILE, output)
  end
end

module Rouge
  module Tasks
    module Functions
      class Scilab
        def extract_keywords(input)
          ::YAML.load(input)
        end

        def render_output(keywords, &b)
          return enum_for(:render_output, keywords).to_a.join("\n") unless b

          yield   "# -*- coding: utf-8 -*- #"
          yield   "# frozen_string_literal: true"
          yield   ""
          yield   "# DO NOT EDIT"
          yield   ""
          yield   "# This file is automatically generated by `rake functions:scilab`."
          yield   "# See tasks/builtins/scilab.rake for more info."
          yield   ""
          yield   "module Rouge"
          yield   "  module Lexers"
          yield   "    def Scilab.functions"
          yield   "      @functions ||= Set.new #{keywords.inspect}"
          yield   "    end"
          yield   "  end"
          yield   "end"
        end
      end
    end
  end
end
